[{"/home/naman/Desktop/sslPortal/webapp/src/index.js":"1","/home/naman/Desktop/sslPortal/webapp/src/reportWebVitals.js":"2","/home/naman/Desktop/sslPortal/webapp/src/App.js":"3","/home/naman/Desktop/sslPortal/webapp/src/state/store.js":"4","/home/naman/Desktop/sslPortal/webapp/src/styles/brandPalette.js":"5","/home/naman/Desktop/sslPortal/webapp/src/components/osdFabricWrapper.js":"6","/home/naman/Desktop/sslPortal/webapp/src/components/socketWrapper.js":"7","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/app.js":"8","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/drawReducer.js":"9","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/textReducer.js":"10","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/shapeReducer.js":"11","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/colorReducer.js":"12","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/socketReducer.js":"13","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/drawerReducer.js":"14","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/shareReducer.js":"15","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/paletteReducer.js":"16","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/zoomReducer.js":"17","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/chatReducer.js":"18","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/fabricOverlayReducer.js":"19","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/viewerReducer.js":"20","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/feedReducer.js":"21","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/extdrawer.js":"22","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/body.js":"23","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/header.js":"24","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/innerbody.js":"25","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/outerbody.js":"26","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/footer.js":"27","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/viewertoolbar.js":"28","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/sidebar.js":"29","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/toolbar.js":"30","/home/naman/Desktop/sslPortal/webapp/src/components/AdjustmentBar/adjustmentBar.js":"31","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/container.js":"32","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/viewerFactory.js":"33","/home/naman/Desktop/sslPortal/webapp/src/hooks/use-keyboard-events.js":"34","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/width.js":"35","/home/naman/Desktop/sslPortal/webapp/src/components/Text/fontPicker.js":"36","/home/naman/Desktop/sslPortal/webapp/src/components/Sidebar/tools.js":"37","/home/naman/Desktop/sslPortal/webapp/src/components/imageGalleryModal.js":"38","/home/naman/Desktop/sslPortal/webapp/src/components/altButton.js":"39","/home/naman/Desktop/sslPortal/webapp/src/components/Sidebar/userInfo.js":"40","/home/naman/Desktop/sslPortal/webapp/src/colorModeSwitch.js":"41","/home/naman/Desktop/sslPortal/webapp/src/components/removeComponents.js":"42","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/draw.js":"43","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/pointerControl.js":"44","/home/naman/Desktop/sslPortal/webapp/src/components/clearCanvas.js":"45","/home/naman/Desktop/sslPortal/webapp/src/hooks/use-fabric-helpers.js":"46","/home/naman/Desktop/sslPortal/webapp/src/components/annotations.js":"47","/home/naman/Desktop/sslPortal/webapp/src/components/downloadImage.js":"48","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/widthPicker.js":"49","/home/naman/Desktop/sslPortal/webapp/src/components/Text/text.js":"50","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/palette.js":"51","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/paletteOptions.js":"52","/home/naman/Desktop/sslPortal/webapp/src/components/Feed/activityFeed.js":"53","/home/naman/Desktop/sslPortal/webapp/src/components/Feed/feed.js":"54","/home/naman/Desktop/sslPortal/webapp/src/components/Share/share.js":"55","/home/naman/Desktop/sslPortal/webapp/src/components/Share/shareLink.js":"56","/home/naman/Desktop/sslPortal/webapp/src/components/UserSettings/user.js":"57","/home/naman/Desktop/sslPortal/webapp/src/components/UserSettings/userOptions.js":"58","/home/naman/Desktop/sslPortal/webapp/src/components/Files/files.js":"59","/home/naman/Desktop/sslPortal/webapp/src/components/ZoomDropDown/viewerZoomLevels.js":"60","/home/naman/Desktop/sslPortal/webapp/src/components/Info/info.js":"61","/home/naman/Desktop/sslPortal/webapp/src/components/Download/download.js":"62","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/arrow.js":"63","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/line.js":"64","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/shape.js":"65","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/square.js":"66","/home/naman/Desktop/sslPortal/webapp/src/components/Search/search.js":"67","/home/naman/Desktop/sslPortal/webapp/src/components/Authenticate/login.js":"68","/home/naman/Desktop/sslPortal/webapp/src/components/Color/color.js":"69","/home/naman/Desktop/sslPortal/webapp/src/components/Chat/chat.js":"70","/home/naman/Desktop/sslPortal/webapp/src/components/Move/move.js":"71","/home/naman/Desktop/sslPortal/webapp/src/components/Screenshot/screenshot.js":"72","/home/naman/Desktop/sslPortal/webapp/src/components/Case/case.js":"73","/home/naman/Desktop/sslPortal/webapp/src/components/ZoomSlider/slider.js":"74","/home/naman/Desktop/sslPortal/webapp/src/components/modalButton.js":"75","/home/naman/Desktop/sslPortal/webapp/src/components/typeButton.js":"76","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/button.js":"77","/home/naman/Desktop/sslPortal/webapp/src/hooks/utility.js":"78","/home/naman/Desktop/sslPortal/webapp/src/components/headerButton.js":"79","/home/naman/Desktop/sslPortal/webapp/src/components/reactSlider.js":"80","/home/naman/Desktop/sslPortal/webapp/src/components/Chat/messageBox.js":"81","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/optionsPanel.js":"82","/home/naman/Desktop/sslPortal/webapp/src/components/Color/optionsPanel.js":"83","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/picker.js":"84","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/borderBoxInner.js":"85","/home/naman/Desktop/sslPortal/webapp/src/hooks/use-hex-rgb.js":"86","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/borderBox.js":"87","/home/naman/Desktop/sslPortal/webapp/src/services/images.js":"88","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/viewer.js":"89","/home/naman/Desktop/sslPortal/webapp/src/components/AdjustmentBar/typeTools.js":"90","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/algorithm.js":"91","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/circle.js":"92","/home/naman/Desktop/sslPortal/webapp/src/components/MultiView/multiView.js":"93","/home/naman/Desktop/sslPortal/webapp/src/services/slides.js":"94","/home/naman/Desktop/sslPortal/webapp/src/components/colorBox.js":"95","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/controls.js":"96","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/zoom-levels.js":"97","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/openseadragon-scalebar.js":"98"},{"size":940,"mtime":1633938911738,"results":"99","hashOfConfig":"100"},{"size":364,"mtime":1633938911738,"results":"101","hashOfConfig":"100"},{"size":1505,"mtime":1633938911734,"results":"102","hashOfConfig":"100"},{"size":1429,"mtime":1633940016189,"results":"103","hashOfConfig":"100"},{"size":2220,"mtime":1633938911746,"results":"104","hashOfConfig":"100"},{"size":431,"mtime":1633938911738,"results":"105","hashOfConfig":"100"},{"size":492,"mtime":1633938911738,"results":"106","hashOfConfig":"100"},{"size":1392,"mtime":1633938911734,"results":"107","hashOfConfig":"100"},{"size":506,"mtime":1633938911746,"results":"108","hashOfConfig":"100"},{"size":972,"mtime":1633938911746,"results":"109","hashOfConfig":"100"},{"size":976,"mtime":1633938911746,"results":"110","hashOfConfig":"100"},{"size":551,"mtime":1633938911746,"results":"111","hashOfConfig":"100"},{"size":1100,"mtime":1633938911746,"results":"112","hashOfConfig":"100"},{"size":382,"mtime":1633938911746,"results":"113","hashOfConfig":"100"},{"size":340,"mtime":1633938911746,"results":"114","hashOfConfig":"100"},{"size":538,"mtime":1633938911746,"results":"115","hashOfConfig":"100"},{"size":367,"mtime":1633938911746,"results":"116","hashOfConfig":"100"},{"size":337,"mtime":1633938911746,"results":"117","hashOfConfig":"100"},{"size":5466,"mtime":1633938911746,"results":"118","hashOfConfig":"100"},{"size":795,"mtime":1633938911746,"results":"119","hashOfConfig":"100"},{"size":489,"mtime":1633938911746,"results":"120","hashOfConfig":"100"},{"size":1165,"mtime":1633938911734,"results":"121","hashOfConfig":"100"},{"size":336,"mtime":1633938911734,"results":"122","hashOfConfig":"100"},{"size":1506,"mtime":1633938911734,"results":"123","hashOfConfig":"100"},{"size":347,"mtime":1633938911734,"results":"124","hashOfConfig":"100"},{"size":325,"mtime":1633938911734,"results":"125","hashOfConfig":"100"},{"size":2897,"mtime":1633938911734,"results":"126","hashOfConfig":"100"},{"size":597,"mtime":1633938911734,"results":"127","hashOfConfig":"100"},{"size":633,"mtime":1633938911734,"results":"128","hashOfConfig":"100"},{"size":1371,"mtime":1633938911738,"results":"129","hashOfConfig":"100"},{"size":3242,"mtime":1633938911734,"results":"130","hashOfConfig":"100"},{"size":3367,"mtime":1633938911734,"results":"131","hashOfConfig":"100"},{"size":433,"mtime":1633938911734,"results":"132","hashOfConfig":"100"},{"size":2674,"mtime":1633938911738,"results":"133","hashOfConfig":"100"},{"size":192,"mtime":1633938911734,"results":"134","hashOfConfig":"100"},{"size":2545,"mtime":1633938911734,"results":"135","hashOfConfig":"100"},{"size":2395,"mtime":1633940286534,"results":"136","hashOfConfig":"100"},{"size":4458,"mtime":1633938911738,"results":"137","hashOfConfig":"100"},{"size":1738,"mtime":1633938911738,"results":"138","hashOfConfig":"100"},{"size":684,"mtime":1633938911734,"results":"139","hashOfConfig":"100"},{"size":692,"mtime":1633938911734,"results":"140","hashOfConfig":"100"},{"size":3026,"mtime":1633938911738,"results":"141","hashOfConfig":"100"},{"size":8325,"mtime":1633939889401,"results":"142","hashOfConfig":"100"},{"size":1142,"mtime":1633938911738,"results":"143","hashOfConfig":"100"},{"size":1649,"mtime":1633938911738,"results":"144","hashOfConfig":"100"},{"size":2546,"mtime":1633938911738,"results":"145","hashOfConfig":"100"},{"size":2334,"mtime":1633938911738,"results":"146","hashOfConfig":"100"},{"size":2133,"mtime":1633938911738,"results":"147","hashOfConfig":"100"},{"size":1460,"mtime":1633938911734,"results":"148","hashOfConfig":"100"},{"size":5826,"mtime":1633938911734,"results":"149","hashOfConfig":"100"},{"size":758,"mtime":1633938911734,"results":"150","hashOfConfig":"100"},{"size":7569,"mtime":1633938911734,"results":"151","hashOfConfig":"100"},{"size":5714,"mtime":1633938911734,"results":"152","hashOfConfig":"100"},{"size":719,"mtime":1633938911734,"results":"153","hashOfConfig":"100"},{"size":4535,"mtime":1633938911734,"results":"154","hashOfConfig":"100"},{"size":4825,"mtime":1633940109015,"results":"155","hashOfConfig":"100"},{"size":901,"mtime":1633938911734,"results":"156","hashOfConfig":"100"},{"size":4458,"mtime":1633940104451,"results":"157","hashOfConfig":"100"},{"size":161,"mtime":1633938911734,"results":"158","hashOfConfig":"100"},{"size":4480,"mtime":1633938911738,"results":"159","hashOfConfig":"100"},{"size":573,"mtime":1633938911734,"results":"160","hashOfConfig":"100"},{"size":170,"mtime":1633938911734,"results":"161","hashOfConfig":"100"},{"size":788,"mtime":1633938911734,"results":"162","hashOfConfig":"100"},{"size":766,"mtime":1633938911734,"results":"163","hashOfConfig":"100"},{"size":11836,"mtime":1633938911734,"results":"164","hashOfConfig":"100"},{"size":9638,"mtime":1633940079050,"results":"165","hashOfConfig":"100"},{"size":935,"mtime":1633938911734,"results":"166","hashOfConfig":"100"},{"size":294,"mtime":1633938911734,"results":"167","hashOfConfig":"100"},{"size":2374,"mtime":1633938911734,"results":"168","hashOfConfig":"100"},{"size":1342,"mtime":1633938911734,"results":"169","hashOfConfig":"100"},{"size":798,"mtime":1633938911734,"results":"170","hashOfConfig":"100"},{"size":720,"mtime":1633938911734,"results":"171","hashOfConfig":"100"},{"size":518,"mtime":1633938911734,"results":"172","hashOfConfig":"100"},{"size":1981,"mtime":1633939801905,"results":"173","hashOfConfig":"100"},{"size":540,"mtime":1633938911738,"results":"174","hashOfConfig":"100"},{"size":347,"mtime":1633938911738,"results":"175","hashOfConfig":"100"},{"size":1453,"mtime":1633938911738,"results":"176","hashOfConfig":"100"},{"size":1718,"mtime":1633938911738,"results":"177","hashOfConfig":"100"},{"size":263,"mtime":1633938911738,"results":"178","hashOfConfig":"100"},{"size":15722,"mtime":1633939781945,"results":"179","hashOfConfig":"100"},{"size":6025,"mtime":1633938911734,"results":"180","hashOfConfig":"100"},{"size":521,"mtime":1633938911738,"results":"181","hashOfConfig":"100"},{"size":1297,"mtime":1633938911734,"results":"182","hashOfConfig":"100"},{"size":1459,"mtime":1633938911734,"results":"183","hashOfConfig":"100"},{"size":448,"mtime":1633938911738,"results":"184","hashOfConfig":"100"},{"size":1281,"mtime":1633938911738,"results":"185","hashOfConfig":"100"},{"size":780,"mtime":1633938911734,"results":"186","hashOfConfig":"100"},{"size":16026,"mtime":1633938911742,"results":"187","hashOfConfig":"100"},{"size":2770,"mtime":1633938911734,"results":"188","hashOfConfig":"100"},{"size":1218,"mtime":1633938911734,"results":"189","hashOfConfig":"100"},{"size":1237,"mtime":1633938911734,"results":"190","hashOfConfig":"100"},{"size":10289,"mtime":1633939906009,"results":"191","hashOfConfig":"100"},{"size":1659,"mtime":1633938911734,"results":"192","hashOfConfig":"100"},{"size":944729,"mtime":1633938911746,"results":"193","hashOfConfig":"100"},{"size":215,"mtime":1633938911738,"results":"194","hashOfConfig":"100"},{"size":4944,"mtime":1633939810433,"results":"195","hashOfConfig":"100"},{"size":4171,"mtime":1633938911734,"results":"196","hashOfConfig":"100"},{"size":23907,"mtime":1633938911734,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"1x1qc8g",{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"200"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"200"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"200"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"200"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"200"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"200"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"200"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"200"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"200"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"200"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"200"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"200"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"200"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"200"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"200"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"200"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"200"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"200"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"200"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"200"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"200"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"200"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"200"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"200"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"200"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"200"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"200"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"200"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"200"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"200"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"200"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"200"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"200"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"200"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"200"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"200"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"200"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"200"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"200"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"200"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"200"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"200"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"200"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"200"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"200"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"200"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"200"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"445","usedDeprecatedRules":"200"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"200"},"/home/naman/Desktop/sslPortal/webapp/src/index.js",[],["449","450"],"/home/naman/Desktop/sslPortal/webapp/src/reportWebVitals.js",[],"/home/naman/Desktop/sslPortal/webapp/src/App.js",["451"],"// import Home from \"./components/home\";\n// import Test from \"./components/test\";\n// import { ChatSetup } from \"./components/chatSetup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport brandPalette from \"./styles/brandPalette\";\nimport OsdFabricWrapper from \"./components/osdFabricWrapper\";\nimport SocketWrapper from \"./components/socketWrapper\";\nimport LayoutApp from \"./components/Layout/app\";\nimport \"./App.css\";\n// import getData from \"./getData\";\nimport React from \"react\";\n\nconst theme = extendTheme({\n  colors: {\n    brand: brandPalette,\n  },\n  fonts: {\n    heading: \"sans-serif\",\n    body: \"sans-serif\",\n\n    courierPrime: \"Courier Prime\",\n    ocrAStd: \"ocr-a-std\",\n    openSans: \"Open Sans\",\n    reenieBeanie: \"Reenie Beanie\",\n  },\n  styles: {\n    global: {\n      button: {\n        fontFamily: \"sans-serif\",\n      },\n      header: {\n        fontFamily: \"Roboto\",\n      },\n      nav: {\n        fontFamily: \"Roboto\",\n      },\n    },\n  },\n});\n\nconst App = () => {\n  // React.useEffect(() => {\n  //   getData();\n  // }, []);\n\n  return (\n    <Router>\n      <ChakraProvider theme={theme} direction=\"rowReverse\">\n        {/* <Home /> */}\n        {/* <Test />  */}\n        <SocketWrapper>\n          <Switch>\n            <Route path=\"/slide/:id\">\n              <LayoutApp />\n            </Route>\n          </Switch>\n        </SocketWrapper>\n      </ChakraProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/naman/Desktop/sslPortal/webapp/src/state/store.js",[],"/home/naman/Desktop/sslPortal/webapp/src/styles/brandPalette.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/osdFabricWrapper.js",["452","453"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ViewerProvider } from \"use-open-seadragon\";\nimport { useDispatch } from \"react-redux\";\nimport { updateOverlay } from \"../state/reducers/fabricOverlayReducer\";\n\nconst OsdFabricWrapper = ({ children }) => {\n  return <ViewerProvider>{children}</ViewerProvider>;\n};\n\nOsdFabricWrapper.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default OsdFabricWrapper;\n","/home/naman/Desktop/sslPortal/webapp/src/components/socketWrapper.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/app.js",["454","455","456","457","458","459","460","461","462","463"],"import React, { useEffect } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { useSelector } from \"react-redux\";\nimport AdjustmentBar from \"../AdjustmentBar/adjustmentBar\";\nimport Toolbar from \"../ViewerToolbar/toolbar\";\nimport SidebarTools from \"../Sidebar/tools\";\nimport ViewerContainer from \"../Viewer/container\";\nimport ExtendibleDrawer from \"./extdrawer\";\nimport LayoutHeader from \"./header\";\nimport LayoutAppBody from \"./body\";\nimport LayoutInnerBody from \"./innerbody\";\nimport LayoutOuterBody from \"./outerbody\";\nimport LayoutAppFooter from \"./footer\";\nimport ViewerToolbar from \"./viewertoolbar\";\nimport LayoutAppSidebar from \"./sidebar\";\nimport Div100vh from \"react-div-100vh\";\nimport useKeyboardEvents from \"../../hooks/use-keyboard-events\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport ViewerFactory from \"../Viewer/viewerFactory\";\n\nconst LayoutApp = () => {\n  // const { handleEvent } = useKeyboardEvents();\n\n  return (\n    <Flex as={Div100vh} h=\"100vh\" direction=\"column\">\n      <LayoutOuterBody>\n        <LayoutAppSidebar>\n          <SidebarTools />\n        </LayoutAppSidebar>\n        <LayoutInnerBody>\n          <LayoutHeader />\n          <AdjustmentBar />\n          <LayoutAppBody>\n            <ViewerFactory />\n          </LayoutAppBody>\n        </LayoutInnerBody>\n      </LayoutOuterBody>\n    </Flex>\n  );\n};\n\nexport default LayoutApp;\n","/home/naman/Desktop/sslPortal/webapp/src/state/reducers/drawReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/textReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/shapeReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/colorReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/socketReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/drawerReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/shareReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/paletteReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/zoomReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/chatReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/fabricOverlayReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/viewerReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/state/reducers/feedReducer.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/extdrawer.js",["464"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Flex } from \"@chakra-ui/react\";\nimport PaletteOptions from \"../Palette/paletteOptions\";\nimport ActivityFeed from \"../Feed/activityFeed\";\nimport ShareAnnotation from \"../Share/share\";\nimport UserOptions from \"../UserSettings/userOptions\";\n\nconst ExtendibleDrawer = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n\n  if (activeDrawerTool) {\n    return (\n      <Flex\n        as=\"section\"\n        w=\"20em\"\n        direction=\"column\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        boxShadow=\"base\"\n        zIndex=\"1\"\n        bg=\"#181818\"\n        borderBottom=\"0.5px solid #ffffff\"\n        borderRight=\"0.5px solid #ffffff\"\n        overflow=\"hidden\"\n      >\n        {activeDrawerTool === \"PALETTE\" && <PaletteOptions />}\n        {activeDrawerTool === \"FEED\" && <ActivityFeed />}\n        {activeDrawerTool === \"SETTINGS\" && <UserOptions />}\n      </Flex>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nExtendibleDrawer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ExtendibleDrawer;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/body.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/header.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Link,\n  IconButton,\n  Input,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Text,\n} from \"@chakra-ui/react\";\nimport ZoomLevels from \"../ZoomDropDown/viewerZoomLevels\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { RiShareForwardLine } from \"react-icons/ri\";\nimport { GoRepoForked } from \"react-icons/go\";\nimport { Link as RRLink, useHistory } from \"react-router-dom\";\nimport ImageGalleryModal from \"../imageGalleryModal\";\nimport AltButton from \"../altButton\";\nimport SlideInfo from \"../Info/info\";\nimport SlideFeed from \"../Feed/feed\";\nimport Palette from \"../Palette/palette\";\nimport Download from \"../Download/download\";\nimport Files from \"../Files/files\";\n\nconst LayoutHeader = () => {\n  const history = useHistory();\n  const fontSizes = [\"xs\", \"sm\", \"md\"];\n  const [_channelName, setChannelName] = useState(\"\");\n\n  const inputChannelName = (e) => {\n    setChannelName(e.target.value);\n  };\n\n  return (\n    <div className=\"header\">\n      <Box className=\"bg-dark\" as=\"header\">\n        <Flex\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          zIndex=\"1\"\n          px={2}\n          fontSize={fontSizes}\n        >\n          <HStack spacing={8}>\n            <SlideInfo />\n            <Files />\n            <Download />\n            <SlideFeed />\n            <Palette />\n          </HStack>\n        </Flex>\n      </Box>\n    </div>\n  );\n};\n\nexport default LayoutHeader;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/innerbody.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/outerbody.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/footer.js",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504"],"import React, { useRef, useState } from \"react\";\nimport {\n  Flex,\n  HStack,\n  Center,\n  Divider,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  AlertDialogFooter,\n  AlertDialogContent,\n  AlertDialogCloseButton,\n  Button,\n  Box,\n  Input,\n  Spacer\n} from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"../../colorModeSwitch\";\nimport ImageGalleryModal from \"../imageGalleryModal\";\nimport AltButton from \"../altButton\";\nimport ZoomSlider from \"../ZoomSlider/slider\";\nimport { isBrowser, isTablet, isMobile } from \"react-device-detect\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSocketDetails } from \"../../state/reducers/socketReducer\";\n\nconst LayoutAppFooter = () => {\n  const { socket, roomName, username } = useSelector(\n    (state) => state.socketState\n  );\n  const dispatch = useDispatch();\n  const cancelRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const onClose = () => setIsOpen(false);\n\n  const handleDisconnect = () => {\n    socket.emit(\"leave_room\", { roomName, username });\n    dispatch(updateSocketDetails({ username: \"\", roomName: \"\" }));\n  };\n\n  return (\n    <Flex\n      as=\"footer\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      px={isBrowser || isTablet ? 3 : \"2px\"}\n      py={4}\n      boxShadow=\"base\"\n      zIndex=\"1\"\n      backgroundColor=\"#242424\"\n    > \n      <Box/>\n      <Spacer/>\n      <ZoomSlider/>\n      <Spacer/>\n      <Box/>\n      {/* <HStack>\n        <ImageGalleryModal />\n        <Center height=\"20px\">\n          <Divider orientation=\"vertical\" />\n        </Center>\n        <ColorModeSwitcher size=\"md\" />\n      </HStack>\n      {roomName !== \"\" && (\n        <AltButton\n          bg=\"red\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Stop Sharing\n        </AltButton>\n      )}\n\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>Stop Sharing</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            Are you sure you want to stop sharing ?\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button\n              ref={cancelRef}\n              onClick={() => {\n                onClose();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              colorScheme=\"red\"\n              ml={3}\n              onClick={() => {\n                handleDisconnect();\n                onClose();\n              }}\n            >\n              Disconnect\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog> */}\n    </Flex>\n  );\n};\n\nexport default LayoutAppFooter;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Layout/viewertoolbar.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Layout/sidebar.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/toolbar.js",["505","506","507"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Divider, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport Draw from \"../Draw/draw\";\nimport Shape from \"../Shape/shape\";\nimport Palette from \"../Palette/palette\";\nimport RemoveComponents from \"../removeComponents\";\nimport { useSelector } from \"react-redux\";\nimport ToolbarPointer from \"./pointerControl\";\nimport useFabricHelpers from \"../../hooks/use-fabric-helpers\";\n\nimport \"../../styles/styles.css\";\n\nconst Toolbar = () => {\n  const { activeTool } = useSelector((state) => state.fabricOverlayState);\n  const { deselectAll, updateCursor } = useFabricHelpers();\n\n  /**\n   * Deselect all Fabric objects when a new tool is selected\n   */\n  useEffect(() => {\n    deselectAll();\n    updateCursor();\n  }, [activeTool]);\n\n  return (\n    <Box pt={3} position=\"relative\">\n      <Wrap spacing=\"2\" as=\"nav\" direction=\"column\" align=\"center\">\n        <WrapItem>\n          <ToolbarPointer />\n        </WrapItem>\n\n        <WrapItem>\n          <Draw />\n        </WrapItem>\n\n        <WrapItem>\n          <Shape />\n        </WrapItem>\n\n        {/* <WrapItem>\n          <Palette />\n        </WrapItem> */}\n\n        <WrapItem>\n          <RemoveComponents />\n        </WrapItem>\n\n        <WrapItem>\n          <Divider />\n        </WrapItem>\n      </Wrap>\n    </Box>\n  );\n};\n\nexport default Toolbar;","/home/naman/Desktop/sslPortal/webapp/src/components/AdjustmentBar/adjustmentBar.js",["508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"import React, { memo } from \"react\";\nimport {\n  Box,\n  Center,\n  Divider,\n  Flex,\n  HStack,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Button,\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  Spacer,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { isBrowser } from \"react-device-detect\";\nimport Color from \"../Color/color\";\nimport ClearCanvas from \"../clearCanvas\";\nimport Download from \"../downloadImage\";\nimport ShareAnnotation from \"../Share/share\";\nimport MyAnnotationsSave from \"../annotations\";\nimport ImageGalleryModal from \"../imageGalleryModal\";\nimport Login from \"../Authenticate/login\";\nimport { useSelector } from \"react-redux\";\nimport AltButton from \"../altButton\";\nimport SlideSearch from \"../Search/search\";\nimport SlideChat from \"../Chat/chat\";\nimport ToolbarPointerControl from \"../ViewerToolbar/pointerControl\";\nimport RemoveObject from \"../removeComponents\";\nimport SlideUser from \"../UserSettings/user\";\nimport Move from \"../Move/move\";\nimport Screenshot from \"../Screenshot/screenshot\";\nimport DrawWidthPicker from \"../Draw/widthPicker\";\nimport Case from \"../Case/case\";\nimport Draw from \"../Draw/draw\";\nimport Square from \"../Shape/square\";\nimport TypeText from \"../Text/text\";\nimport ShareLink from \"../Share/shareLink\";\nimport Line from \"../Shape/line\";\nimport Arrow from \"../Shape/arrow\";\nimport Circle from \"../Shape/circle\";\nimport Algorithm from \"../Palette/algorithm\";\nimport TypeTools from \"./typeTools\";\nimport MultiView from \"../MultiView/multiView\";\n\nconst AdjustmentBar = () => {\n  const { roomName, guestList } = useSelector((state) => state.socketState);\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const { currentViewer } = useSelector((state) => state.viewerState);\n  const viewerId = \"viewer1\";\n  const bg = \"#3965C3\";\n\n  return (\n    <div className=\"adjustmentbar\">\n      <Flex bgColor={bg} alignItems=\"center\">\n        <Box ml=\"5px\" pt=\"3px\" pb=\"6px\">\n          <Case />\n        </Box>\n        <Spacer />\n        <Algorithm />\n        <Spacer />\n        <ImageGalleryModal viewerId={currentViewer} />\n        <Spacer />\n        <HStack spacing={3} p=\"1px\" alignItems=\"center\">\n          <Move />\n          <ToolbarPointerControl viewerId={viewerId} />\n          <Screenshot />\n          <MultiView />\n        </HStack>\n        <Box\n          w=\"30%\"\n          h=\"inherit\"\n          className=\"annotate\"\n          color=\"white\"\n          mx=\"20px\"\n          borderX=\"1px solid #ffffff50\"\n        >\n          <Text align=\"center\">Annotate</Text>\n          <HStack spacing={0} align=\"stretch\">\n            <Box w=\"52%\">\n              <Text borderY=\"1px solid #ffffff50\">Color</Text>\n              <Color />\n            </Box>\n            <Box w=\"50%\">\n              <Text border=\"1px solid #ffffff50\">Width</Text>\n              <DrawWidthPicker align=\"end\" />\n            </Box>\n            <TypeTools viewerId={viewerId} />\n          </HStack>\n        </Box>\n        <Box mr=\"20px\">\n          <ShareLink />\n          <HStack mt=\"5px\" justify=\"space-around\">\n            <SlideUser />\n            <SlideChat />\n          </HStack>\n        </Box>\n      </Flex>\n    </div>\n  );\n};\n\nexport default memo(AdjustmentBar);\n","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/container.js",["538","539","540","541","542"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport Viewer from \"./viewer\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Box,\n} from \"@chakra-ui/react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Images } from \"../../services/images\";\nimport { Slides } from \"../../services/slides\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\n\nconst ViewerContainer = ({ viewerId }) => {\n  const params = useParams();\n  const location = useLocation();\n\n  //get fabricOverlay state from redux store\n  const { fabricOverlay, userCanvases } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[viewerId]\n  );\n  const [tileSource, setTileSource] = useState({});\n\n  let { id } = params;\n  id = id ? id : Slides[0];\n  const newCanvasTitle =\n    location.state && location.state.canvasTitle\n      ? location.state.canvasTitle\n      : \"\";\n\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    fabricOverlay.fabricCanvas().hoverCursor = \"move\";\n  }, [fabricOverlay]);\n\n  //   React.useEffect(() => {\n  //   const getTileSource = async (id) => {\n  //     fetch(`https://api.gdc.cancer.gov/tile/metadata/${id}`)\n  //     .then(data => data.json())\n  //     .then(result => {\n  //     console.log(result);\n  //     let targetImage = {\n  //       height: Number(result.Height),\n  //       width: Number(result.Width),\n  //       tileSize: Number(result.TileSize),\n  //       overlap: Number(result.Overlap),\n  //       getTileUrl: (level, x, y) => {\n  //         return `https://api.gdc.cancer.gov/tile/${id}?level=${level}&x=${x}&y=${y}`;\n  //       }\n  //     }\n  //     setTileSource(targetImage);\n  //   });\n  // }\n  //   getTileSource(id);\n  //   }, [id]);\n\n  // React.useEffect(() => {\n  //   targetImage = tileSource;\n  // }, [tileSource]);\n\n  /**\n   * Handle changes to selected LOC work.\n   * User selected a Saved Annotation from their list, so update the Fabric canvas\n   */\n  useEffect(() => {\n    if (!fabricOverlay || !location.state) return;\n    fabricOverlay\n      .fabricCanvas()\n      .loadFromJSON(userCanvases[location.state.canvasTitle][\"fabricCanvas\"]);\n  }, [newCanvasTitle]);\n\n  if (!params.id) {\n    // If no id is referenced, default to the first LOC image\n    // const defaultId = Slides[0];\n    const defaultId = Images[2].id;\n    return (\n      <div>\n        <Redirect to={`/slide/${defaultId}`} />\n      </div>\n    );\n  }\n\n  // Grab the LOC work from supplied id\n  const target = Images.find((locImage) => locImage.id === Number(id));\n  //   const targetImage = {\n  //     height: 80325,\n  //     width: 97843,\n  //     overlap: 1,\n  //     tileSize: 512,\n  //     getTileUrl: (level, x, y) => {\n  //     return `https://api.gdc.cancer.gov/tile/4ecf5f2c-b095-423d-ace8-e24703fcc44a?level=${level}&x=${x}&y=${y}`;\n  //   }\n  // }\n\n  // Handle no match\n  if (tileSource == {}) {\n    return (\n      <Box w=\"100%\" p={8}>\n        <Alert status=\"error\">\n          <AlertIcon />\n          <AlertTitle mr={2}>Image loading error!</AlertTitle>\n          <AlertDescription>No image with that id exists.</AlertDescription>\n        </Alert>\n      </Box>\n    );\n  }\n\n  // Success\n  // return <Viewer tile={tileSource} />;\n\n  return <Viewer viewerId={viewerId} tile={target} />;\n};\n\nexport default ViewerContainer;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/viewerFactory.js",["543"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport ViewerContainer from \"./container\";\n\nconst ViewerFactory = () => {\n  const { viewerIds } = useSelector((state) => state.viewerState);\n  return (\n    <>\n      {viewerIds.map((viewerId) => (\n        <ViewerContainer key={viewerId} viewerId={viewerId} />\n      ))}\n    </>\n  );\n};\n\nexport default ViewerFactory;\n","/home/naman/Desktop/sslPortal/webapp/src/hooks/use-keyboard-events.js",["544","545","546"],"import React, { useSelector } from \"react-redux\";\n\n// https://stackoverflow.com/questions/44320104/fabricjs-how-to-move-the-selected-object-by-keyboard\nconst useKeyboardEvents = () => {\n  const { fabricOverlay } = useSelector((state) => state.fabricOverlayState);\n\n  const handleEvent = (e) => {\n    if (e.repeat) {\n      return;\n    }\n\n    var key = e.key;\n    const canvas = fabricOverlay.fabricCanvas();\n    const activeObject = canvas.getActiveObject();\n    //const activeGroup = canvas.getActiveGroup();\n    let activeGroup;\n    if (!activeObject) return;\n\n    const STEP = 10;\n\n    const moveSelected = (direction) => {\n      if (activeObject) {\n        switch (direction) {\n          case \"LEFT\":\n            activeObject.left = activeObject.left - STEP;\n            break;\n          case \"UP\":\n            activeObject.top = activeObject.top - STEP;\n            break;\n          case \"RIGHT\":\n            activeObject.left = activeObject.left + STEP;\n            break;\n          case \"DOWN\":\n            activeObject.top = activeObject.top + STEP;\n            break;\n        }\n        activeObject.setCoords();\n        canvas.renderAll();\n      }\n      // TODO: Wire this up if we actually need it?\n      else if (activeGroup) {\n        switch (direction) {\n          case direction.LEFT:\n            activeGroup.left = activeGroup.left - STEP;\n            break;\n          case direction.UP:\n            activeGroup.top = activeGroup.top - STEP;\n            break;\n          case direction.RIGHT:\n            activeGroup.left = activeGroup.left + STEP;\n            break;\n          case direction.DOWN:\n            activeGroup.top = activeGroup.top + STEP;\n            break;\n        }\n        activeGroup.setCoords();\n        canvas.renderAll();\n        console.log(\"selected group was moved\");\n      } else {\n        console.log(\"no object selected\");\n      }\n    };\n\n    if (key === \"ArrowLeft\") {\n      // handle Left key\n      moveSelected(\"LEFT\");\n    } else if (key === \"ArrowUp\") {\n      // handle Up key\n      moveSelected(\"UP\");\n    } else if (key === \"ArrowRight\") {\n      // handle Right key\n      moveSelected(\"RIGHT\");\n    } else if (key === \"ArrowDown\") {\n      // handle Down key\n      moveSelected(\"DOWN\");\n    } else if (key === \"Backspace\" || key === \"Clear\") {\n      // Handle Delete key\n      // Object has children (ie. arrow has children objects triangle and line)\n      if (activeObject.getObjects) {\n        let objs = activeObject.getObjects();\n        for (let i in objs) {\n          canvas.remove(objs[i]);\n        }\n      }\n      canvas.remove(activeObject);\n    }\n  };\n\n  return { handleEvent };\n};\n\nexport default useKeyboardEvents;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/width.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Text/fontPicker.js",["547"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Link,\n  Heading,\n  VStack,\n  Wrap,\n  WrapItem,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport FontFaceObserver from \"fontfaceobserver\";\n\nexport const fonts = [\n  {\n    id: \"timesNewRoman\",\n    fontFamily: \"Times New Roman\",\n  },\n  {\n    id: \"verdana\",\n    fontFamily: \"Verdana\",\n  },\n  {\n    id: \"georgia\",\n    fontFamily: \"Georgia\",\n  },\n  {\n    id:\"courierNew\",\n    fontFamily: \"Courier New\",\n  },\n  {\n    id: \"brushScript\",\n    fontFamily: \"Brush Script MT\",\n  },\n  {\n    id: \"garamond\",\n    fontFamily: \"Garamond\",\n  },\n];\n\nconst TypeTextFontPicker = ({ handleFontChange }) => {\n  const { fabricOverlay } = useSelector((state) => state.fabricOverlayState);\n  const { activeFont } = useSelector((state) => state.textState);\n\n  const activeClasses = {\n    borderColor: useColorModeValue(\"gray.300\", \"white\"),\n    borderWidth: \"2px\",\n  };\n\n  const handleFontClick = (font) => {\n    handleFontChange(font);\n  };\n\n  const loadAndUse = (font) => {\n    const canvas = fabricOverlay.fabricCanvas();\n    const activeObject = canvas.getActiveObject();\n\n    if (!activeObject) {\n      return;\n    }\n\n    var myfont = new FontFaceObserver(font);\n    myfont\n      .load()\n      .then(function () {\n        // when font is loaded, use it.\n        canvas.getActiveObject().set(\"fontFamily\", font);\n        canvas.requestRenderAll();\n      })\n      .catch(function (e) {\n        console.error(e);\n      });\n  };\n\n  return (\n    <>\n      <Heading as=\"h2\" size=\"sm\" mb={3}>\n        Fonts\n      </Heading>\n      <VStack spacing={3}>\n        <Wrap direction=\"column\" justify=\"flex-start\">\n          {fonts.map((font) => (\n            <WrapItem key={font.id}>\n              <Link\n                fontFamily={font.fontFamily}\n                id={font.id}\n                onClick={() => handleFontClick(font)}\n                fontSize=\"15px\"\n                w=\"250px\"\n                whiteSpace=\"nowrap\"\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                borderWidth=\"1px\"\n                p={3}\n                borderRadius={8}\n                {...(activeFont &&\n                  activeFont.id === font.id && { ...activeClasses })}\n              >\n                {font.fontFamily}\n              </Link>\n            </WrapItem>\n          ))}\n        </Wrap>\n      </VStack>\n    </>\n  );\n};\n\nTypeTextFontPicker.propTypes = {\n  handleFontChange: PropTypes.func,\n};\n\nexport default TypeTextFontPicker;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Sidebar/tools.js",["548","549","550","551","552","553","554","555","556","557","558"],"/home/naman/Desktop/sslPortal/webapp/src/components/imageGalleryModal.js",["559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Image,\n  Link,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Tooltip,\n  Wrap,\n  WrapItem,\n  useDisclosure,\n  useBreakpointValue,\n  Menu,\n  MenuList,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { TriangleDownIcon } from \"@chakra-ui/icons\";\nimport { Images } from \"../services/images\";\nimport { Slides } from \"../services/slides\";\nimport { useHistory } from \"react-router-dom\";\nimport { MenuAltButton, MenuAltItem } from \"./altButton\";\nimport ModalButton from \"./modalButton\";\nimport useFabricHelpers from \"../hooks/use-fabric-helpers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateTool,\n  updateActivityFeed,\n} from \"../state/reducers/fabricOverlayReducer\";\n\nconst activeStyles = {\n  border: \"4px\",\n  borderColor: \"brand.green.500\",\n};\n\nconst ImageGalleryModal = ({ viewerId }) => {\n  const { viewer, fabricOverlay } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[viewerId]\n  );\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [activeWork, setActiveWork] = useState();\n  const history = useHistory();\n  const iconButtonSize = useBreakpointValue({ base: \"md\", md: \"lg\" });\n  const { clearCanvas } = useFabricHelpers();\n  const dispatch = useDispatch();\n\n  const handleImageClick = (image) => {\n    setActiveWork(image);\n  };\n\n  const handleSelectItem = (image) => {\n    clearCanvas(fabricOverlay.fabricCanvas());\n    dispatch(updateActivityFeed({ id: viewerId, feed: [] }));\n    dispatch(updateTool({ tool: \"Move\" }));\n    // history.push(`/${activeWork}`);\n    // history.push(`/slide/${image.id}`);\n    viewer.open(image);\n  };\n\n  return (\n    <Menu>\n      <MenuAltButton ml=\"15px\" label=\"Change Slide\" />\n      <MenuList\n        mt={-2}\n        pr={12}\n        backgroundColor=\"#EAEAEA\"\n        fontSize=\"sm\"\n        zIndex=\"2\"\n        minW={0}\n        color=\"#3965C6\"\n      >\n        {Images.map((image, index) => (\n          <MenuAltItem\n            key={image.id}\n            label={\"Slide \" + (index + 1)}\n            onClick={() => handleSelectItem(image)}\n          />\n        ))}\n      </MenuList>\n    </Menu>\n\n    // <Modal\n    //   isOpen={isOpen}\n    //   onClose={onClose}\n    //   size=\"xl\"\n    //   scrollBehavior=\"inside\"\n    // >\n    //   <ModalOverlay />\n    //   <ModalContent>\n    //     <ModalHeader>Select another slide</ModalHeader>\n    //     <ModalCloseButton />\n    //     <ModalBody>\n    //       <Wrap spacing=\"25px\">\n    //         {/* {Slides.slice(0,50).map((image) => (\n    //           <WrapItem key={image} w=\"auto\" h=\"auto\">\n    //             <Link\n    //               key={image}\n    //               href=\"#\"\n    //               onClick={() => handleImageClick(image)}\n    //             >\n    //               <Image\n    //                 src={`https://api.gdc.cancer.gov/tile/${image}?level=7&x=0&y=0`}\n    //                 // alt={`Slide: ${image}`}\n    //                 {...(activeWork &&\n    //                   activeWork === image && { ...activeStyles })}\n    //               />\n    //             </Link>\n    //           </WrapItem>\n    //         ))} */}\n    //         {Images.map((image) => (\n    //           <WrapItem key={image.id} w=\"auto\" h=\"auto\">\n    //             <Link\n    //               key={image.id}\n    //               href=\"#\"\n    //               onClick={() => handleImageClick(image)}\n    //             >\n    //               {/* {console.log(image[\"Image\"].Url+'0_0/')} */}\n    //               <Image\n    //                 src={image[\"Image\"].Url + \"7/0_0.jpeg\"}\n    //                 // alt={`Slide: ${image}`}\n    //                 {...(activeWork &&\n    //                   activeWork.id === image.id && { ...activeStyles })}\n    //               />\n    //             </Link>\n    //           </WrapItem>\n    //         ))}\n    //       </Wrap>\n    //     </ModalBody>\n\n    //     <ModalFooter>\n    //       <ModalButton\n    //         margin=\"10px\"\n    //         onClick={handleSelectItem}\n    //         disabled={!activeWork}\n    //         colorScheme=\"blue\"\n    //       >\n    //         Select Item\n    //       </ModalButton>\n    //       <ModalButton onClick={onClose} colorScheme=\"red\">\n    //         Close\n    //       </ModalButton>\n    //     </ModalFooter>\n    //   </ModalContent>\n    // </Modal>\n  );\n};\n\nexport default ImageGalleryModal;\n","/home/naman/Desktop/sslPortal/webapp/src/components/altButton.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Sidebar/userInfo.js",[],"/home/naman/Desktop/sslPortal/webapp/src/colorModeSwitch.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/removeComponents.js",["586","587"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport ToolbarButton from \"./ViewerToolbar/button\";\nimport { updateActivityFeed } from \"../state/reducers/fabricOverlayReducer\";\nimport { getCanvasImage, getTimestamp } from \"../hooks/utility\";\nimport TypeButton from \"./typeButton\";\n\nconst RemoveObject = ({ viewerId }) => {\n  const { fabricOverlay, activityFeed } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[viewerId]\n  );\n  const [isActiveObject, setIsActiveObject] = useState();\n  const dispatch = useDispatch();\n  const { username, roomName, socket, alias } = useSelector(\n    (state) => state.socketState\n  );\n\n  useEffect(() => {\n    if (!fabricOverlay) return;\n\n    const handleSelectionCleared = (e) => {\n      setIsActiveObject(false);\n    };\n    const handleSelectionCreated = (e) => {\n      setIsActiveObject(true);\n    };\n\n    const canvas = fabricOverlay.fabricCanvas();\n    canvas.on(\"selection:created\", handleSelectionCreated);\n    canvas.on(\"selection:cleared\", handleSelectionCleared);\n\n    return () => {\n      canvas.off(\"selection:created\", handleSelectionCreated);\n      canvas.off(\"selection:cleared\", handleSelectionCleared);\n    };\n  }, [fabricOverlay]);\n\n  const handleRemoveObject = async () => {\n    const canvas = fabricOverlay.fabricCanvas();\n    const activeObject = canvas.getActiveObject();\n\n    // Object has children (ie. arrow has children objects triangle and line)\n    if (activeObject.getObjects) {\n      let objs = activeObject.getObjects();\n      for (let i in objs) {\n        canvas.remove(objs[i]);\n      }\n    }\n\n    let message = {\n      username: alias,\n      color: activeObject._objects\n        ? activeObject._objects[0].stroke\n        : activeObject.stroke,\n      action: \"deleted\",\n      text: activeObject._objects ? activeObject._objects[1].text : \"\",\n      timeStamp: getTimestamp(),\n      type: activeObject._objects\n        ? activeObject._objects[0].type\n        : activeObject.type,\n      image: null,\n    };\n\n    activeObject.set({ isExist: false });\n\n    message.image = await getCanvasImage(viewerId);\n\n    canvas.remove(activeObject);\n\n    dispatch(\n      updateActivityFeed({ id: viewerId, feed: [...activityFeed, message] })\n    );\n\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  };\n\n  return (\n    <TypeButton\n      onClick={handleRemoveObject}\n      icon={<RiDeleteBin6Line size={12} />}\n      disabled={!isActiveObject}\n      backgroundColor={!isActiveObject ? \"#898888\" : \"#dddddd\"}\n      color={!isActiveObject ? \"black\" : \"#3963c3\"}\n      _focus={{ backgroundColor: \"white\", color: \"black\" }}\n      _hover={{ backgroundColor: !isActiveObject ? \"#898888\" : \"#dddddd\" }}\n      label=\"Remove Item\"\n    />\n  );\n};\n\nexport default RemoveObject;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/draw.js",["588","589","590","591","592","593","594","595","596","597","598","599","600","601"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { FaPaintBrush } from \"react-icons/fa\";\nimport { Box, Divider, Flex } from \"@chakra-ui/react\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DrawWidthPicker from \"./widthPicker\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport ToolbarOptionsPanel from \"../ViewerToolbar/optionsPanel\";\nimport { widths } from \"./widthPicker\";\n// import logo from '../.../images/logo.png';\nimport useHexRGB from \"../../hooks/use-hex-rgb\";\nimport { updateActive } from \"../../state/reducers/drawReducer\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport { fonts } from \"../Text/fontPicker\";\nimport { updateActivityFeed } from \"../../state/reducers/fabricOverlayReducer\";\nimport { getCanvasImage, getFontSize, getTimestamp } from \"../../hooks/utility\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport TypeButton from \"../typeButton\";\n\nconst getDrawCursor = (brushSize, brushColor) => {\n  brushSize = brushSize < 4 ? 8 : brushSize * 3;\n  const circle = `\n\t\t<svg\n\t\t\theight=\"${brushSize}\"\n\t\t\tfill=\"${brushColor}\"\n\t\t\tviewBox=\"0 0 ${brushSize * 2} ${brushSize * 2}\"\n\t\t\twidth=\"${brushSize}\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t>\n\t\t\t<circle\n\t\t\t\tcx=\"50%\"\n\t\t\t\tcy=\"50%\"\n\t\t\t\tr=\"${brushSize}\" \n\t\t\t/>\n\t\t</svg>\n\t`;\n\n  return `data:image/svg+xml;base64,${window.btoa(circle)}`;\n};\n\nconst createFreeDrawingCursor = (brushWidth, brushColor) => {\n  return `url(${getDrawCursor(brushWidth, brushColor)}) ${brushWidth / 2} ${\n    brushWidth / 2\n  }, crosshair`;\n};\n\nconst Draw = ({ viewerId }) => {\n  const { color, viewerWindow, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, alias, socket } = useSelector(\n    (state) => state.socketState\n  );\n\n  const { fabricOverlay, viewer, zoomValue, activityFeed } =\n    viewerWindow[viewerId];\n\n  const dispatch = useDispatch();\n  const { hexToRGBA } = useHexRGB();\n  const isActive = activeTool === \"DRAW\";\n\n  const [path, setPath] = useState(null);\n  const [textbox, setTextbox] = useState(null);\n\n  const myState = useSelector((state) => state.drawState);\n  const myStateRef = useRef(myState.isActive);\n  const setMyState = (data) => {\n    myStateRef.current = data;\n    dispatch(updateActive(data));\n  };\n\n  const screenSize = useMediaQuery([\n    \"(max-width: 1280px)\",\n    \"(max-width: 1440px)\",\n    \"(max-width: 1920px)\",\n    \"(max-width: 2560px)\",\n  ]);\n\n  // useEffect(() => {\n  //   socket.emit(\"send_guest_list\", { roomName, alias });\n  // }, [isActive]);\n\n  useEffect(() => {\n    setMyState(isActive);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    function handleMouseDown() {\n      if (!myStateRef.current.isActive) return;\n      // Need this as double protection to make sure OSD isn't swallowing\n      // Fabric's drawing mode for some reason\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n    }\n    canvas.on(\"mouse:down\", handleMouseDown);\n\n    return () => {\n      canvas.off(\"mouse:down\", handleMouseDown);\n    };\n  }, [fabricOverlay]);\n\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    const fontSize = getFontSize(screenSize, zoomValue);\n\n    // Create new Textbox instance and add it to canvas\n    const createTextbox = ({ left, top, height }) => {\n      const tbox = new fabric.IText(\"\", {\n        left: left,\n        top: top + height + 10,\n        fontFamily: fonts[0].fontFamily,\n        fontSize: fontSize,\n        fontWeight: \"bold\",\n        selectionBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      });\n\n      fabricOverlay.fabricCanvas().add(tbox);\n      canvas.setActiveObject(tbox);\n      tbox.enterEditing();\n    };\n\n    // to set path when draw completes\n    const pathCreated = (e) => {\n      setPath(e.path);\n      createTextbox({\n        left: e.path.left,\n        top: e.path.top,\n        height: e.path.height,\n      });\n    };\n\n    const handleSelected = (options) => {\n      // make text visible on selected object\n      if (options && options.target.type === \"group\") {\n        options.target.item(1).set({ visible: true });\n      }\n\n      // hide text on previous selected object (or deselected object)\n      if (options.deselected && options.deselected[0].type === \"group\") {\n        options.deselected[0].item(1).set({ visible: false });\n      }\n    };\n\n    const handleSelectionCleared = (options) => {\n      // hide text when no object is selected\n      if (options.deselected && options.deselected[0].type === \"group\")\n        options.deselected[0].item(1).set({ visible: false });\n\n      // set textbox\n      if (options.deselected && options.deselected[0].type === \"i-text\")\n        setTextbox(options.deselected[0]);\n    };\n\n    if (isActive) {\n      const brushWidth = myState.width.pixelWidth;\n      // Enable Fabric drawing; disable OSD mouseclicks\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n      canvas.isDrawingMode = true;\n      canvas.freeDrawingBrush.color = color.hex;\n      canvas.freeDrawingBrush.width = brushWidth / (zoomValue / 40);\n      canvas.renderAll();\n\n      // EXAMPLE: of using an image for cursor\n      // https://i.stack.imgur.com/fp7eL.png\n      //canvas.freeDrawingCursor = `url(${logo}) 0 50, auto`;\n\n      canvas.freeDrawingCursor = createFreeDrawingCursor(brushWidth, color.hex);\n\n      canvas.on(\"path:created\", pathCreated);\n      canvas.on(\"selection:cleared\", handleSelectionCleared);\n      canvas.on(\"selection:created\", handleSelected);\n      canvas.on(\"selection:updated\", handleSelected);\n      // console.log(canvas._objects)\n    } else {\n      // Disable Fabric drawing; enable OSD mouseclicks\n      viewer.setMouseNavEnabled(true);\n      viewer.outerTracker.setTracking(true);\n      canvas.isDrawingMode = false;\n      canvas.freeDrawingCursor = \"\";\n    }\n\n    // Remove handler\n    return () => {\n      canvas.off(\"path:created\", pathCreated);\n      canvas.on(\"selection:cleared\", handleSelectionCleared);\n      canvas.on(\"selection:created\", handleSelected);\n      canvas.on(\"selection:updated\", handleSelected);\n    };\n  }, [isActive]);\n\n  useEffect(() => {\n    // Update brush color and size with Fabric\n    if (!fabricOverlay || !isActive) return;\n\n    const canvas = fabricOverlay.fabricCanvas();\n    const brushWidth = myState.width.pixelWidth;\n\n    canvas.freeDrawingBrush.color = color.hex;\n    canvas.freeDrawingBrush.width = brushWidth / (zoomValue / 40);\n    canvas.freeDrawingCursor = createFreeDrawingCursor(brushWidth, color.hex);\n  }, [color, myState.width]);\n\n  // group drawing (path) and textbox together\n  // first remove both from canvas then group them and then add group to canvas\n  useEffect(async () => {\n    if (!path || !textbox) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    let message = {\n      username: alias,\n      color: path.stroke,\n      action: \"added\",\n      text: \"\",\n      timeStamp: getTimestamp(),\n      type: path.type,\n      object: path,\n      image: null,\n    };\n\n    if (textbox.text !== \"\") {\n      canvas.remove(path);\n      canvas.remove(textbox);\n      textbox.set({\n        visible: false,\n      });\n      const group = new fabric.Group([path, textbox], { isExist: true });\n      canvas.add(group);\n      message.text = textbox.text;\n      message.object = group;\n    } else {\n      path.set({ isExist: true });\n    }\n\n    message.image = await getCanvasImage(viewerId);\n\n    setPath(null);\n    setTextbox(null);\n\n    dispatch(\n      updateActivityFeed({ id: viewerId, feed: [...activityFeed, message] })\n    );\n\n    // send annotation\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  }, [textbox]);\n\n  const handleToolbarClick = () => {\n    dispatch(updateTool({ tool: \"DRAW\" }));\n  };\n\n  return (\n    <TypeButton\n      onClick={handleToolbarClick}\n      icon={<FaPaintBrush size={12} />}\n      backgroundColor={isActive ? \"#8fa8e1\" : \"#dddddd\"}\n      color={isActive ? \"black\" : \"#3963c3\"}\n      label=\"Draw\"\n    />\n  );\n};\n\nexport default Draw;\n","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/pointerControl.js",["602"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FiMousePointer } from \"react-icons/fi\";\nimport ToolbarButton from \"./button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\n\nconst ToolbarPointerControl = ({ viewerId }) => {\n  const { viewerWindow, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { fabricOverlay } = viewerWindow[viewerId];\n  const dispatch = useDispatch();\n  const isActive = activeTool === \"POINTER\";\n\n  const handleToolbarClick = () => {\n    dispatch(updateTool({ tool: \"POINTER\" }));\n    fabricOverlay.fabricCanvas().discardActiveObject();\n    fabricOverlay.fabricCanvas().defaultCursor = \"default\";\n    fabricOverlay.fabricCanvas().hoverCursor = \"move\";\n  };\n\n  return (\n    <ToolbarButton\n      onClick={handleToolbarClick}\n      icon={<FiMousePointer size={25} />}\n      isActive={isActive}\n      backgroundColor={isActive ? \"white\" : \"rgba(255,255,255, 0.5)\"}\n      color={isActive ? \"black\" : \"#3963c3\"}\n      label=\"Select\"\n    />\n  );\n};\n\nexport default ToolbarPointerControl;\n","/home/naman/Desktop/sslPortal/webapp/src/components/clearCanvas.js",[],"/home/naman/Desktop/sslPortal/webapp/src/hooks/use-fabric-helpers.js",["603","604"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateActivityFeed } from \"../state/reducers/fabricOverlayReducer\";\nimport { getTimestamp } from \"./utility\";\n\nconst useCanvasHelpers = () => {\n  const { activeTool, viewerWindow } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, socket, alias } = useSelector(\n    (state) => state.socketState\n  );\n\n  const dispatch = useDispatch();\n  const [canvas, setCanvas] = useState([]);\n\n  useEffect(() => {\n    if (!viewerWindow) return;\n    let canvases = [];\n    for (let key in viewerWindow)\n      canvases.push(viewerWindow[key].fabricOverlay);\n    setCanvas(canvases);\n  }, [viewerWindow]);\n\n  // Remove all Fabric canvas objects\n  const clearCanvas = (canvas) => {\n    if (!canvas) return;\n    canvas.clear();\n  };\n\n  const clearUserObjects = (canvas, activityFeed) => {\n    if (!canvas) return;\n    const userObjects = getUserObjects();\n    for (let i in userObjects) {\n      canvas.remove(userObjects[i]);\n    }\n\n    let message = {\n      username: alias,\n      color: \"\",\n      action: \"deleted all annotations\",\n      text: \"\",\n      timeStamp: getTimestamp(),\n      type: \"CLEAR\",\n    };\n\n    dispatch(updateActivityFeed([...activityFeed, message]));\n\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  };\n\n  // Deselect all Fabric canvas objects\n  const deselectAll = (canvas) => {\n    if (!canvas) return;\n    canvas.discardActiveObject();\n    canvas.requestRenderAll();\n  };\n\n  const getUserObjects = () => {\n    if (!canvas) return;\n    const objects = canvas.getObjects();\n    const selectableObjects = objects.filter((obj) => obj.selectable);\n    return selectableObjects;\n  };\n\n  const makeObjectsInvisible = (fabricObjects = []) => {\n    if (!canvas) return;\n\n    for (let obj of fabricObjects) {\n      obj.opacity = 0;\n    }\n    canvas.renderAll();\n  };\n\n  const makeObjectsVisible = (fabricObjects = []) => {\n    for (let obj of fabricObjects) {\n      obj.opacity = 1;\n    }\n    canvas.renderAll();\n  };\n\n  const updateCursor = (canvas) => {\n    if (!canvas) return;\n\n    canvas.defaultCursor = \"auto\";\n    canvas.hoverCursor = \"move\";\n  };\n\n  return {\n    clearCanvas,\n    clearUserObjects,\n    deselectAll,\n    getUserObjects,\n    makeObjectsInvisible,\n    makeObjectsVisible,\n    updateCursor,\n  };\n};\n\nexport default useCanvasHelpers;\n","/home/naman/Desktop/sslPortal/webapp/src/components/annotations.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/downloadImage.js",["605","606"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Image,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Tooltip,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { DownloadIcon } from \"@chakra-ui/icons\";\nimport html2canvas from \"html2canvas\";\nimport domtoimage from \"dom-to-image\";\n\nconst Download = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [img, setImg] = useState();\n\n  const handleClick = () => {\n    // let canvas = document.querySelector(\".openseadragon-canvas > canvas\");\n    // console.log(canvas.toDataURL(\"image/png\"))\n    html2canvas(document.querySelector(\".openseadragon-canvas\"), {\n      backgroundColor: null,\n      logging: true,\n      allowTaint: false,\n      useCORS: true,\n      removeContainer: false,\n    }).then((canvas) => {\n      setImg(canvas.toDataURL(\"image/png\"));\n    });\n    onOpen();\n  };\n  return (\n    <>\n      <Tooltip label=\"Download\" aria-label=\"Download\">\n        <IconButton\n          icon={<DownloadIcon />}\n          onClick={handleClick}\n          aria-label=\"Download as an image\"\n          variant=\"ghost\"\n          mr={2}\n          color=\"#fff\"\n          _hover={{\n            background: \"#ddd\",\n            color: \"#000\",\n          }}\n        />\n      </Tooltip>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Download image</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Image crossOrigin=\"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/info.json\" src={img} />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              as=\"a\"\n              mr={3}\n              href={img}\n              download={\"my-speculative-annotation\"}\n              fontFamily=\"ocr-a-std\"\n            >\n              Save\n            </Button>\n            <Button variant=\"ghost\" onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default Download;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Draw/widthPicker.js",["607","608"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HStack } from \"@chakra-ui/react\";\nimport ToolbarBorderBox from \"../ViewerToolbar/borderBox\";\nimport ToolbarBorderBoxInner from \"../ViewerToolbar/borderBoxInner\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateWidth } from \"../../state/reducers/drawReducer\";\nimport { widths } from \"./width\";\n\nconst DrawWidthPicker = () => {\n  const { width } = useSelector((state) => state.drawState);\n  const { color } = useSelector((state) => state.fabricOverlayState);\n  const dispatch = useDispatch();\n\n  return (\n    <HStack spacing={2} px={1} py={2}>\n      {widths.map((widthObj) => {\n        let imgSrc = require(`../../images/pen-weight-icons/${color.label}${widthObj.size}.png`);\n        return (\n          // <ToolbarBorderBox\n          //   key={widthObj.size}\n          //   isActive={width && widthObj.size === width.size}\n          // >\n          <ToolbarBorderBoxInner\n            key={widthObj.size}\n            w={widthObj.boxSize}\n            h={widthObj.boxSize}\n            bgImage={`url(${imgSrc.default})`}\n            borderColor={\n              width && widthObj.size === width.size ? \"white\" : \"#A3A3A3\"\n            }\n            bgSize=\"cover\"\n            display=\"block\"\n            onClick={() => dispatch(updateWidth(widthObj))}\n          />\n          // </ToolbarBorderBox>\n        );\n      })}\n    </HStack>\n  );\n};\n\nexport default DrawWidthPicker;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Text/text.js",["609","610","611","612","613","614","615","616","617","618","619","620","621"],"import React, { useRef, useEffect } from \"react\";\n// import PropTypes from 'prop-types';\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { FiType } from \"react-icons/fi\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\nimport TypeTextFontPicker from \"./fontPicker\";\nimport ToolbarOptionsPanel from \"../ViewerToolbar/optionsPanel\";\nimport { fonts } from \"./fontPicker\";\nimport FontFaceObserver from \"fontfaceobserver\";\nimport useFabricHelpers from \"../../hooks/use-fabric-helpers\";\nimport {\n  updateColorActive,\n  editing,\n  selectionCleared,\n  selected,\n  fontChange,\n} from \"../../state/reducers/textReducer\";\nimport TypeButton from \"../typeButton\";\n\nconst TypeText = ({ viewerId }) => {\n  const dispatch = useDispatch();\n  const { color, viewerWindow, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n\n  const { fabricOverlay, viewer, zoomValue, activityFeed } =\n    viewerWindow[viewerId];\n\n  const { deselectAll } = useFabricHelpers();\n  const isActive = activeTool === \"TYPE\";\n\n  const myState = useSelector((state) => state.textState);\n  const myStateRef = useRef(myState);\n  const setMyState = (action, data) => {\n    myStateRef.current = { ...myState, ...data };\n    dispatch(action(data));\n  };\n  /**\n   * Handle main tool change\n   */\n  useEffect(() => {\n    setMyState(updateColorActive, { color: color, isActive: isActive });\n\n    if (!fabricOverlay) return;\n    fabricOverlay.fabricCanvas().defaultCursor = isActive ? \"text\" : \"auto\";\n  }, [color, isActive]);\n\n  useEffect(() => {\n    if (!isActive) return;\n    if (myState.isEditing) {\n      fabricOverlay.fabricCanvas().defaultCursor = \"auto\";\n      fabricOverlay.fabricCanvas().hoverCursor = \"text\";\n    } else {\n      fabricOverlay.fabricCanvas().defaultCursor = \"text\";\n      fabricOverlay.fabricCanvas().hoverCursor = \"move\";\n    }\n  }, [myState.isEditing]);\n\n  /**\n   * Handle an individual font being selected\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    if (myState.activeFont) {\n      // Disable OSD mouseclicks\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n\n      // Deselect all Fabric Canvas objects\n      deselectAll();\n    } else {\n      // Enable OSD mouseclicks\n      viewer.setMouseNavEnabled(true);\n      viewer.outerTracker.setTracking(true);\n    }\n  }, [myState.activeFont]);\n\n  /**\n   * Set up event handlers when Fabric is ready\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    function handleMouseDown(options) {\n      // Selected an existing object OR not in Type Tool mode\n      if (options.target || !myStateRef.current.isActive) {\n        return;\n      }\n\n      // Was user previously editing text?\n      if (myStateRef.current.isEditing) {\n        deselectAll();\n        setMyState(editing, { ...myStateRef.current, isEditing: false });\n        return;\n      }\n\n      // Create new Textbox instance and add it to canvas\n      const textbox = new fabric.IText(\"\", {\n        left: options.absolutePointer.x,\n        top: options.absolutePointer.y,\n        fontFamily: myStateRef.current.activeFont.fontFamily,\n        fontSize: 15,\n        selectionBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      });\n      fabricOverlay.fabricCanvas().add(textbox);\n      textbox.set({ fill: myStateRef.current.color.hex });\n      canvas.setActiveObject(textbox);\n      textbox.enterEditing();\n\n      setMyState(editing, {\n        ...myStateRef.current,\n        isEditing: true,\n      });\n    }\n\n    function handleSelectionCleared(options) {\n      if (!myStateRef.current.isSelectedOnCanvas) return;\n\n      setMyState(selectionCleared, {\n        ...myStateRef.current,\n        selectedCoords: { top: 0, left: 0 },\n      });\n    }\n\n    function handleSelected(options) {\n      if (options.target.get(\"type\") !== \"textbox\") return;\n\n      setMyState(selected, {\n        ...myStateRef.current,\n      });\n    }\n\n    // Add click handlers\n    canvas.on(\"mouse:down\", handleMouseDown);\n    canvas.on(\"selection:created\", handleSelected);\n    canvas.on(\"selection:updated\", handleSelected);\n    canvas.on(\"selection:cleared\", handleSelectionCleared);\n\n    // Remove handler\n    return function clearFabricEventHandlers() {\n      canvas.off(\"mouse:down\", handleMouseDown);\n      canvas.off(\"selection:created\", handleSelected);\n      canvas.off(\"selection:updated\", handleSelected);\n      canvas.off(\"selection:cleared\", handleSelectionCleared);\n    };\n  }, [fabricOverlay]);\n\n  const handleFontChange = (font) => {\n    setMyState(fontChange, { activeFont: font });\n    //loadAndUse(font.fontFamily);\n  };\n\n  const handleToolbarButtonClick = (e) => {\n    dispatch(updateTool({ tool: \"TYPE\" }));\n  };\n\n  const loadAndUse = (font) => {\n    const canvas = fabricOverlay.fabricCanvas();\n    const activeObject = canvas.getActiveObject();\n\n    if (!activeObject) {\n      return;\n    }\n\n    var myfont = new FontFaceObserver(font);\n    myfont\n      .load()\n      .then(function () {\n        // when font is loaded, use it.\n        canvas.getActiveObject().set(\"fontFamily\", font);\n        canvas.requestRenderAll();\n      })\n      .catch(function (e) {\n        console.error(e);\n      });\n  };\n\n  return (\n    <TypeButton\n      onClick={handleToolbarButtonClick}\n      icon={<FiType />}\n      backgroundColor={isActive ? \"#8fa8e1\" : \"#dddddd\"}\n      color={isActive ? \"black\" : \"#3963c3\"}\n      label=\"Type Text\"\n    />\n    // {isActive && (\n    //   <ToolbarOptionsPanel>\n    //     <TypeTextFontPicker handleFontChange={handleFontChange} />\n    //   </ToolbarOptionsPanel>\n    // )}\n  );\n};\n\nexport default TypeText;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/palette.js",["622","623","624","625","626","627"],"import React, { useEffect, useState } from \"react\";\nimport { IoIosColorPalette } from \"react-icons/io\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport HeaderButton from \"../headerButton\";\n\nconst Palette = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"PALETTE\";\n  const dispatch = useDispatch();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"PALETTE\" }));\n  };\n\n  return <HeaderButton label=\"Palette\" />;\n};\n\nexport default Palette;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/paletteOptions.js",["628","629","630","631","632","633","634","635","636","637","638","639","640","641","642"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Button,\n  Box,\n  Input,\n  Text,\n  Flex,\n  HStack,\n  Divider,\n  VStack,\n  Spacer,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport OpenSeadragon from \"openseadragon\";\nimport \"../../styles/styles.css\";\nimport {\n  updateBasicInfo,\n  updateIsVisual,\n} from \"../../state/reducers/paletteReducer\";\nimport { GiAtom } from \"react-icons/gi\";\nimport { SiMaterialdesignicons } from \"react-icons/si\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\n\nconst PaletteOptions = () => {\n  const { isVisual, basicInfo } = useSelector((state) => state.paletteState);\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  // const [password, setPassword] = useState(\"\");\n  // const [message, setMessage] = useState(\"\");\n\n\n  const { viewer, fabricOverlay } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const dispatch = useDispatch();\n  const isActive = activeDrawerTool === \"Algorithm\";\n\n  useEffect(() => {\n    if (!isActive) return;\n    analyse();\n  }, [isActive]);\n\n  const analyse = async () => {\n    // if (password === process.env.REACT_APP_BASIC_PALETTE_PASSWORD) {\n    const imgUrl = viewer.world.getItemAt(0).lastDrawn[0].cacheKey;\n    //       try {\n\n    const resp = await axios.post(\"/process\", {\n      url: imgUrl,\n    });\n    dispatch(updateBasicInfo(resp.data));\n\n    lockViewer(true);\n\n    // viewport bounds for overlay\n    const bounds = viewer.viewport.getBounds(true);\n\n    //create fabric canvas\n    const elt = document.createElement(\"canvas\");\n    elt.id = \"runtime-overlay\";\n    elt.className = \"highlight\";\n    const runtimeCanvas = new fabric.Canvas(elt);\n\n    // add OSD overlay in viewer\n    viewer.addOverlay({\n      element: elt,\n      location: new OpenSeadragon.Rect(\n        bounds.x,\n        bounds.y,\n        bounds.width,\n        bounds.height\n      ),\n      position: OpenSeadragon.Placement.CENTER,\n    });\n\n    // add annotation in fabric canvas and render all\n    let c = [];\n    for (let loc of resp.data[\"location\"]) {\n      c.push(\n        new fabric.Circle({\n          radius: 4,\n          fill: \"rgba(0,255,0,0.4)\",\n          stroke: \"green\",\n          strokeWidth: 1.4,\n          left: parseFloat(loc[0]),\n          top: parseFloat(loc[1]),\n        })\n      );\n    }\n    runtimeCanvas.add(...c).renderAll();\n\n    // } catch (err) {\n    //   setMessage(\"Server Not Available\");\n    // } finally {\n    //   setPassword(\"\");\n    // }\n    // } else {\n    //   setMessage(\"Wrong Password\");\n    //   canvas.forEachObject((object) => (object.visible = false));\n    //   canvas.renderAll();\n    //   viewer.setControlsEnabled(false);\n    // }\n  };\n\n  // to lock the viewer (disable zoom and pan)\n  const lockViewer = (lock) => {\n    const canvas = fabricOverlay.fabricCanvas();\n    if (lock) {\n      // hide canvas objects\n      canvas.forEachObject((object) => (object.visible = false));\n      canvas.renderAll();\n\n      // disable mouse\n      viewer.setMouseNavEnabled(false);\n    } else {\n      // show canvas objects\n      canvas.forEachObject((object) => (object.visible = true));\n      canvas.renderAll();\n\n      // enable mouse navigation\n      viewer.setMouseNavEnabled(true);\n    }\n  };\n\n  const handleRemove = () => {\n    viewer.removeOverlay(\"runtime-overlay\");\n    dispatch(updateActiveDrawerTool({ tool: \"\" }));\n    // dispatch(updateIsVisual(false));\n    lockViewer(false);\n  };\n\n  const PaletteBox = ({ children }) => {\n    return (\n      <HStack\n        w=\"100%\"\n        py={2}\n        px={1}\n        fontSize=\"xs\"\n        backgroundColor=\"#FFFFFF80\"\n        borderRadius=\"4px\"\n        spacing={1}\n      >\n        {children}\n      </HStack>\n    );\n  };\n\n  // return (\n  //   <Flex w=\"95%\" mt=\"20px\" direction=\"column\" align=\"center\">\n  //     {!isVisual ? (\n  //       <>\n  //         <Text fontSize=\"2xl\" color=\"white\">\n  //           Analyse this area\n  //         </Text>\n  //         <Button\n  //           mt=\"8px\"\n  //           colorScheme=\"blue\"\n  //           variant=\"solid\"\n  //           mr={3}\n  //           onClick={handleClick}\n  //         >\n  //           Basic Palette\n  //         </Button>\n  //       </>\n  //     ) : (\n  //       <Button\n  //         mt=\"8px\"\n  //         colorScheme=\"red\"\n  //         variant=\"solid\"\n  //         mr={3}\n  //         onClick={handleRemove}\n  //       >\n  //         Remove Palette\n  //       </Button>\n  //     )}\n  //     {/* {message && (\n  //       <Text mt=\"20px\" color=\"white\">\n  //         {message}\n  //       </Text>\n  //     )} */}\n  //     {basicInfo && (\n  //       <Box mt=\"15px\" w=\"100%\" color=\"white\">\n  //         <p>Total nuclei: {basicInfo[\"total_nuclei\"]} </p>\n  //         {basicInfo[\"total_nuclei\"] != 0 && (\n  //           <>\n  //             <p>Minimum radius: {basicInfo[\"minimum_radius\"]} mm</p>\n  //             <p>Maximum radius: {basicInfo[\"maximum_radius\"]} mm</p>\n  //             <p>\n  //               Minimum area: {basicInfo[\"minimum_area\"]} mm<sup>2</sup>\n  //             </p>\n  //             <p>\n  //               Maximum area: {basicInfo[\"maximum_area\"]} mm<sup>2</sup>\n  //             </p>\n  //             <p>\n  //               Average area: {basicInfo[\"average_area\"]} mm<sup>2</sup>\n  //             </p>\n  //           </>\n  //         )}\n  //       </Box>\n  //     )}\n  //   </Flex>\n  // );\n\n  return (\n    basicInfo && (\n      <Box\n        w=\"100%\"\n        backgroundColor=\"rgba(255,255,255,0.4)\"\n        borderRadius=\"10px\"\n        pb={4}\n        mb={4}\n      >\n        <HStack justify=\"flex-end\">\n          <Text mt={1} color=\"white\" fontSize=\"sm\">\n            Analysing the Selection\n          </Text>\n          <IconButton\n            size=\"xs\"\n            variant=\"unstyled\"\n            icon={\n              <CloseIcon size=\"xs\" color=\"white\" _hover={{ color: \"red\" }} />\n            }\n            _focus={{ border: \"none\" }}\n            onClick={handleRemove}\n          />\n        </HStack>\n        <Divider bg=\"white\" h=\"1px\" mt={1} mb={4} />\n        <VStack mx={2} color=\"#3965C6\" spacing={1}>\n          <PaletteBox>\n            <GiAtom size={18} />\n            <Text>Total Nuclei: {basicInfo[\"total_nuclei\"]}</Text>\n          </PaletteBox>\n          <PaletteBox>\n            <GiAtom size={18} />\n            <Text>Minimum Radius: {basicInfo[\"minimum_radius\"]} mm</Text>\n          </PaletteBox>\n          <PaletteBox>\n            <GiAtom size={18} />\n            <Text>Maximum Radius: {basicInfo[\"maximum_radius\"]} mm</Text>\n          </PaletteBox>\n          <PaletteBox>\n            <SiMaterialdesignicons color=\"#3965C698\" size={15} />\n            <Text>\n              Minimun Area: {basicInfo[\"minimum_area\"]} mm<sup>2</sup>\n            </Text>\n          </PaletteBox>\n          <PaletteBox>\n            <SiMaterialdesignicons color=\"#3965C698\" size={15} />\n            <Text>\n              Maximum Area: {basicInfo[\"minimum_area\"]} mm<sup>2</sup>\n            </Text>\n          </PaletteBox>\n          <PaletteBox>\n            <SiMaterialdesignicons color=\"#3965C698\" size={15} />\n            <Text>\n              Average Area: {basicInfo[\"average_area\"]} mm<sup>2</sup>\n            </Text>\n          </PaletteBox>\n        </VStack>\n      </Box>\n    )\n  );\n};\n\nexport default PaletteOptions;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Feed/activityFeed.js",["643","644","645","646"],"import React, { useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@chakra-ui/layout\";\nimport {\n  Circle,\n  HStack,\n  Text,\n  VStack,\n  Icon,\n  Image,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"../../styles/scrollBar.css\";\nimport { FaPaintBrush, FaShapes } from \"react-icons/fa\";\nimport { DownloadIcon } from \"@chakra-ui/icons\";\nimport ReactPDF, {\n  Page,\n  View,\n  Document,\n  StyleSheet,\n  PDFDownloadLink,\n} from \"@react-pdf/renderer\";\n\nconst ActivityFeed = ({ viewerId }) => {\n  const { fabricOverlay, activityFeed } = useSelector(\n    (state) => state.fabricOverlayState\n  ).viewerWindow[viewerId];\n  const scrollbar = useRef(null);\n\n  useEffect(() => {\n    if (scrollbar.current) scrollbar.current.scrollToBottom();\n  }, [activityFeed]);\n\n  const handleClick = (activity) => {\n    if (!activity.object || !activity.object.isExist) return;\n    const canvas = fabricOverlay.fabricCanvas();\n    canvas.setActiveObject(activity.object);\n    canvas.requestRenderAll();\n  };\n\n  const styles = StyleSheet.create({\n    page: {\n      flexDirection: \"column\",\n      backgroundColor: \"white\",\n      fontSize: \"16px\",\n    },\n    section: {\n      margin: 10,\n      padding: 10,\n      width: \"500px\",\n      borderWidth: \"2px\",\n    },\n    image: {\n      height: \"150px\",\n      width: \"300px\",\n      marginBottom: \"5px\",\n    },\n    circle: {\n      marginLeft: \"4px\",\n      borderWidth: \"1px\",\n      width: \"7px\",\n      height: \"7px\",\n      borderRadius: \"50%\",\n      alignSelf: \"center\",\n    },\n    container: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    annotation: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    },\n    time: {\n      flexDirection: \"row\",\n    },\n  });\n\n  const MyDocument = () => (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {activityFeed.map((activity, index) => (\n          <View key={index} style={styles.section} wrap={false}>\n            <View style={styles.time}>\n              <ReactPDF.Text style={{ fontSize: \"12px\" }}>\n                {activity.timeStamp}\n              </ReactPDF.Text>\n              <View\n                style={[styles.circle, { backgroundColor: activity.color }]}\n              />\n            </View>\n            <View style={styles.container}>\n              <View style={styles.annotation}>\n                <ReactPDF.Text>{activity.username}</ReactPDF.Text>\n                <ReactPDF.Text\n                  style={{\n                    margin: \"5px\",\n                    fontWeight: \"bold\",\n                    alignSelf: \"center\",\n                  }}\n                >\n                  {activity.action}\n                </ReactPDF.Text>\n                <ReactPDF.Text\n                  style={{ alignSelf: \"center\", fontSize: \"18px\" }}\n                >\n                  \"{activity.text}\"\n                </ReactPDF.Text>\n              </View>\n              <ReactPDF.Image src={activity.image} style={styles.image} />\n            </View>\n          </View>\n        ))}\n      </Page>\n    </Document>\n  );\n\n  return (\n    <>\n      <Scrollbars\n        ref={scrollbar}\n        style={{ width: \"100%\", height: \"100%\" }}\n        renderThumbVertical={(props) => (\n          <div {...props} className=\"thumb-vertical\" />\n        )}\n        autoHide\n      >\n        <VStack w=\"100%\" spacing={1} px=\"4px\" pb=\"10px\" align=\"center\">\n          {activityFeed.map((activity, index) => (\n            <Box\n              as=\"button\"\n              key={index}\n              bg=\"#252525\"\n              w=\"100%\"\n              borderRadius=\"5px\"\n              px=\"5px\"\n              pt=\"5px\"\n              pb=\"2px\"\n              textAlign=\"left\"\n              color=\"#3963c390\"\n              backgroundColor=\"rgba(255,255,255,0.7)\"\n              onClick={() => handleClick(activity)}\n            >\n              <HStack>\n                {activity.type !== \"CLEAR\" && (\n                  <Icon\n                    boxSize=\"10px\"\n                    mb=\"2px\"\n                    color=\"white\"\n                    as={activity.type === \"path\" ? FaPaintBrush : FaShapes}\n                  />\n                )}\n                <Text fontSize=\"sm\" fontWeight=\"600\">\n                  {activity.username + \" \"}\n                </Text>\n              </HStack>\n              <Image\n                borderWidth=\"2px\"\n                mb=\"3px\"\n                backgroundColor=\"white\"\n                crossOrigin=\"anonymous\"\n                src={activity.image}\n              />\n              {activity.text && <Text fontSize=\"xs\">{activity.text}</Text>}\n              <HStack mt=\"8px\" mr=\"10px\" justify=\"flex-end\">\n                <Text fontSize=\"10px\" mr=\"5px\">\n                  {activity.timeStamp}\n                </Text>\n                {activity.type !== \"CLEAR\" && (\n                  <Circle size=\"7px\" bg={activity.color} />\n                )}\n              </HStack>\n            </Box>\n          ))}\n        </VStack>\n        {/* <PDFDownloadLink document={<MyDocument />} fileName=\"feedReport.pdf\">\n          <IconButton\n            icon={<DownloadIcon />}\n            w={10}\n            h={10}\n            p=\"5px\"\n            color=\"white\"\n            borderWidth=\"2px\"\n            borderRadius=\"5px\"\n            borderColor=\"white\"\n            backgroundColor=\"#181818\"\n            mb=\"10px\"\n            mr=\"12px\"\n            position=\"sticky\"\n            alignSelf=\"flex-end\"\n            float=\"right\"\n            bottom=\"5px\"\n            _hover={{ color: \"#29F236\", borderColor: \"#29F236\" }}\n          />\n        </PDFDownloadLink> */}\n      </Scrollbars>\n    </>\n  );\n};\n\nexport default ActivityFeed;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Feed/feed.js",["647","648","649","650"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaClipboardList } from \"react-icons/fa\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport HeaderButton from \"../headerButton\";\n\nconst SlideFeed = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"FEED\";\n  const dispatch = useDispatch();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"FEED\" }));\n  };\n\n  return <HeaderButton label=\"Active Feed\" />;\n};\n\nexport default SlideFeed;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Share/share.js",["651","652","653","654","655","656","657","658"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport rug from \"random-username-generator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updateSocketDetails,\n  updateAnnotations,\n  updateGuestDetails,\n} from \"../../state/reducers/socketReducer\";\nimport AltButton from \"../altButton\";\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  AlertDialogCloseButton,\n  Button,\n  Input,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n} from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { updateActivityFeed } from \"../../state/reducers/feedReducer\";\n\nconst ShareAnnotation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [_roomName, setRoomName] = useState(\"\");\n  const [alias, setAlias] = useState(rug.generate());\n  const [sharing, setSharing] = useState(false);\n  const cancelRef = useRef();\n\n  const onClose = () => setIsOpen(false);\n  const { fabricOverlay, userCanvases } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, socket, guestList } = useSelector(\n    (state) => state.socketState\n  );\n  const dispatch = useDispatch();\n\n  const handleConnect = async () => {\n    let _username = await uuidv4();\n    socket.emit(\"join_room\", {\n      room: _roomName,\n      guest: { username: _username, alias },\n    });\n    let user = { username, alias };\n    dispatch(\n      updateSocketDetails({\n        username: _username,\n        roomName: _roomName,\n        alias: alias,\n      })\n    );\n    onClose();\n  };\n\n  const handleInputChange = (e) => {\n    setRoomName(e.target.value);\n  };\n\n  const handleAliasChange = (e) => {\n    setAlias(e.target.value);\n  };\n\n  useEffect(() => {\n    socket.emit(\"send_guest_list\", { roomName: _roomName, alias });\n  });\n\n  useEffect(() => {\n    socket.on(\"receive_guest_list\", (data) => {\n      dispatch(\n        updateGuestDetails({ guestCount: data.length, guestList: [...data] })\n      );\n    });\n  });\n\n  useEffect(() => {\n    if (roomName === \"\") setSharing(false);\n  }, [roomName]);\n\n  useEffect(() => {\n    socket.on(\"receive_annotations\", (data) => {\n      if (fabricOverlay) {\n        let annotations = {\n          ...userCanvases,\n          [data.username]: {\n            locWorkId: window.location.href.split(\"/\").pop(),\n            fabricCanvas: data.content,\n          },\n        };\n        dispatch(updateAnnotations(annotations));\n        dispatch(updateActivityFeed(data.feed));\n        let canvas = fabricOverlay.fabricCanvas();\n        canvas.loadFromJSON(\n          annotations[data.username][\"fabricCanvas\"],\n          canvas.renderAll.bind(canvas)\n        );\n      }\n    });\n  });\n  return (\n    <>\n      {!sharing && (\n        <AltButton\n          onClick={() => {\n            setIsOpen(true);\n          }}\n          colorScheme=\"blue\"\n          variant=\"solid\"\n        >\n          Share Annotations\n        </AltButton>\n      )}\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>Connect to a Room</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody space={2}>\n            <Input\n              margin=\"10px 0\"\n              placeholder=\"Enter Room Name\"\n              value={_roomName}\n              onChange={(e) => handleInputChange(e)}\n            />\n            <Input\n              placeholder={alias}\n              value={alias}\n              onChange={(e) => handleAliasChange(e)}\n            />\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <AltButton\n              ref={cancelRef}\n              onClick={() => {\n                onClose();\n                setSharing(false);\n              }}\n              colorScheme=\"red\"\n              variant=\"solid\"\n            >\n              Cancel\n            </AltButton>\n            <AltButton\n              colorScheme=\"blue\"\n              variant=\"solid\"\n              ml={3}\n              onClick={() => {\n                handleConnect();\n                setSharing(true);\n                // handleSendDetail();\n              }}\n            >\n              Connect\n            </AltButton>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default ShareAnnotation;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Share/shareLink.js",["659","660"],"import React, { useState, useRef } from \"react\";\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogHeader,\n  AlertDialogContent,\n  Box,\n  Button,\n  Center,\n  Flex,\n  Image,\n  Input,\n  Select,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport TypeButton from \"../typeButton\";\nimport { FaShare } from \"react-icons/fa\";\nimport { BiLink } from \"react-icons/bi\";\n// import { BsPeopleCircle } from \"react-icons/bs\";\nimport { IoSettingsOutline } from \"react-icons/io5\";\n\nconst ShareLink = (restProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const onClose = () => setIsOpen(false);\n  const cancelRef = useRef();\n\n  return (\n    <>\n      <Button\n        size=\"sm\"\n        variant=\"solid\"\n        h={7}\n        px=\"7px\"\n        borderRadius=\"4px\"\n        rightIcon={<FaShare color=\"#3963c3\" />}\n        backgroundColor=\"#DDDDDD\"\n        _hover={{\n          backgroundColor: \"white\",\n        }}\n        _focus={{\n          backgroundColor: \"white\",\n          border: \"none\",\n        }}\n        color=\"#3963c3\"\n        fontFamily=\"sans-serif\"\n        textTransform=\"capitalize\"\n        fontSize=\"xs\"\n        {...restProps}\n        onClick={() => {\n          setIsOpen(true);\n        }}\n      >\n        Share\n      </Button>\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        size=\"lg\"\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogContent className=\"share\">\n          <AlertDialogHeader\n            color=\"#3965C6\"\n            padding=\"20px\"\n          >\n            <Flex>\n              {/* <TypeButton icon={<BsPeopleCircle size={28} />} marginRight=\"10px\" /> */}\n              <TypeButton size={28} color=\"black\" marginRight=\"10px\" />\n            </Flex>\n          </AlertDialogHeader>\n          <AlertDialogBody space={2}>\n            <Flex>\n              <Flex border=\"0.5px solid \"borderColor=\"#B3D9FF\" px=\"5px\">\n              <Input size=\"sm\" variant=\"unstyled\" placeholder=\"Share with people and groups\" />\n              <Select variant=\"unstyled\" placeholder=\"can edit\" marginLeft={5} width={130} size=\"sm\">\n                <option value=\"option1\">can view</option>\n                <option value=\"option2\">can comment</option>\n              </Select>\n              </Flex>\n              <Button\n                backgroundColor=\"#3965C6\"\n                color=\"white\"\n                variant=\"solid\"\n                size=\"sm\"\n                ml={3}\n                paddingLeft={5}\n                paddingRight={5}\n                _hover={{bg: \"#66a3ff\"}}\n              >\n                send invite\n              </Button>\n            </Flex>\n            <Flex colorScheme=\"blue\">\n              <TypeButton icon={<BiLink />} marginTop={2} marginRight={3} size={15}/>\n              <Select variant=\"unstyled\" placeholder=\"Anyone with the link\" marginTop={2} width=\"12em\" size=\"sm\">\n                <option value=\"option1\">Restricted</option>\n              </Select>\n              <Spacer />\n              <Select variant=\"unstyled\" placeholder=\"can edit\" marginLeft={5} width={130} size=\"sm\">\n                <option value=\"option1\">can view</option>\n                <option value=\"option2\">can comment</option>\n              </Select>\n            </Flex>\n            <Stack>\n              <Box border=\"0.5px solid\" borderColor=\"#B3D9FF\" borderRadius=\"5px\" padding=\"10px\">\n                <Flex>\n                  <Image\n                    borderRadius=\"full\"\n                    boxSize=\"50px\"\n                    marginRight={3}\n                    src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n                    alt=\"Zoe Margut\"\n                  />\n                  <Box>\n                    <Text color=\"#3965C6\" fontWeight=\"bold\" fontSize={17}>Zoe Margot (You)</Text>\n                    <Text color=\"#80AAFF\" fontSize={14}>zoemargut27@gmail.com</Text>\n                  </Box>\n                  <Spacer />\n                  <Center color=\"CCCCB3\" as=\"i\">Owner</Center>\n                </Flex>\n              </Box>\n            </Stack>\n          </AlertDialogBody>\n          <Flex>\n            <Button\n              backgroundColor=\"#3965C6\"\n              color=\"white\"\n              variant=\"ghost\"\n              size=\"sm\"\n              m={6}\n              _hover={{bg: \"#66a3ff\"}}\n            >\n              Give Feedback\n            </Button>\n            <Spacer />\n            <Button\n              backgroundColor=\"#3965C6\"\n              color=\"white\"\n              variant=\"solid\"\n              size=\"sm\"\n              m={6}\n              _hover={{bg: \"#66a3ff\"}}\n              onClick={() => onClose()}\n            >\n              Done\n            </Button>\n          </Flex>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default ShareLink;\n","/home/naman/Desktop/sslPortal/webapp/src/components/UserSettings/user.js",["661","662"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport TypeButton from \"../typeButton\";\n\nconst SlideUser = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"SETTINGS\";\n  const dispatch = useDispatch();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"SETTINGS\" }));\n  };\n\n  return (\n    <TypeButton\n      onClick={handleToolbarClick}\n      icon={<HiUserGroup color=\"white\" />}\n      label=\"User Settings\"\n      backgroundColor=\"#3963c3\"\n      border=\"0.5px solid rgba(255, 255, 255, 0.5)\"\n    />\n  );\n};\n\nexport default SlideUser;\n","/home/naman/Desktop/sslPortal/webapp/src/components/UserSettings/userOptions.js",["663","664","665","666","667"],"import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport rug from \"random-username-generator\";\nimport { Input, Flex, Button } from \"@chakra-ui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updateSocketDetails,\n  updateAnnotations,\n  updateGuestDetails,\n} from \"../../state/reducers/socketReducer\";\nimport { updateSharing } from \"../../state/reducers/shareReducer\";                                                                                                                          \nimport { updateMessages } from \"../../state/reducers/chatReducer\";\nimport { updateActivityFeed } from \"../../state/reducers/fabricOverlayReducer\";\n\nconst UserOptions = () => {\n  const [_roomName, setRoomName] = useState(\"\");\n  // const [_alias, setAlias] = useState(rug.generate());\n  const { sharing } = useSelector((state) => state.shareState);\n\n  const { fabricOverlay, userCanvases } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[\"viewer1\"]\n  );\n  const { username, roomName, socket, guestList, alias } = useSelector(\n    (state) => state.socketState\n  );\n  const dispatch = useDispatch();\n  // console.log(roomName, guestList);\n\n  const handleInputChange = (e) => {\n    setRoomName(e.target.value);\n  };\n\n  // const handleAliasChange = (e) => {\n  //   setAlias(e.target.value);\n  // };\n\n  useEffect(() => {\n    if (roomName && alias) socket.emit(\"send_guest_list\", { roomName, alias });\n  }, [sharing]);\n\n  useEffect(() => {\n    const receiveAnnotations = (data) => {\n      if (fabricOverlay) {\n        let annotations = {\n          ...userCanvases,\n          [data.username]: {\n            locWorkId: window.location.href.split(\"/\").pop(),\n            fabricCanvas: data.content,\n          },\n        };\n        // console.log(data.feed);\n        dispatch(updateAnnotations(annotations));\n        dispatch(updateActivityFeed({ id: \"viewer1\", feed: data.feed }));\n        let canvas = fabricOverlay.fabricCanvas();\n        canvas.loadFromJSON(\n          annotations[data.username][\"fabricCanvas\"],\n          canvas.renderAll.bind(canvas)\n        );\n      }\n    };\n\n    socket.on(\"receive_annotations\", receiveAnnotations);\n  }, [fabricOverlay]);\n\n  useEffect(() => {\n    socket.on(\"receive_guest_list\", (data) => {\n      dispatch(\n        updateGuestDetails({ guestCount: data.length, guestList: [...data] })\n      );\n    });\n\n    socket.on(\"receive_message\", (data) => {\n      dispatch(updateMessages(data));\n    });\n  }, []);\n\n  const handleConnect = async () => {\n    if (_roomName && alias) {\n      let _username = await uuidv4();\n      socket.emit(\"join_room\", {\n        room: _roomName,\n        guest: { username: _username, alias: alias },\n      });\n      dispatch(\n        updateSocketDetails({\n          username: _username,\n          roomName: _roomName,\n          // alias: _alias,\n        })\n      );\n      dispatch(updateSharing(true));\n    }\n  };\n\n  const handleDisconnect = () => {\n    socket.emit(\"leave_room\", { roomName, username });\n    dispatch(updateSocketDetails({ username: \"\", roomName: \"\" }));\n    dispatch(\n      updateGuestDetails({\n        guestCount: 0,\n        guestList: [],\n      })\n    );\n    dispatch(updateSharing(false));\n  };\n\n  return (\n    <Flex w=\"80%\" mt=\"20px\" direction=\"column\" align=\"center\">\n      {!sharing ? (\n        <>\n          <Input\n            margin=\"10px 0\"\n            placeholder=\"Enter Room Name\"\n            value={_roomName}\n            color=\"white\"\n            _placeholder={{ color: \"grey\" }}\n            onChange={(e) => handleInputChange(e)}\n          />\n          {/* <Input\n            mt=\"10px\"\n            placeholder={_alias}\n            value={_alias}\n            color=\"white\"\n            _placeholder={{ color: \"grey\" }}\n            onChange={(e) => handleAliasChange(e)}\n          /> */}\n          <Button\n            w=\"min-content\"\n            colorScheme=\"blue\"\n            variant=\"solid\"\n            mt=\"25px\"\n            p=\"20px\"\n            onClick={() => {\n              handleConnect();\n            }}\n          >\n            Connect\n          </Button>\n        </>\n      ) : (\n        <Button\n          w=\"min-content\"\n          colorScheme=\"red\"\n          variant=\"solid\"\n          mt=\"25px\"\n          p=\"20px\"\n          onClick={() => {\n            handleDisconnect();\n          }}\n        >\n          Disconnect\n        </Button>\n      )}\n    </Flex>\n  );\n};\n\nexport default UserOptions;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Files/files.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/ZoomDropDown/viewerZoomLevels.js",["668","669","670","671"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useZoom } from \"use-open-seadragon\";\nimport PropTypes from \"prop-types\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport {\n    Button,\n    Box,\n    Input,\n    Menu,\n    MenuList,\n    MenuButton,\n    MenuDivider,\n    MenuItem,\n    useMenuItem,\n    Select\n} from \"@chakra-ui/react\";\nimport { updateZoomValue } from \"../../state/reducers/zoomReducer\";\n \nconst ZoomLevels = () => {\n    const { viewer } = useSelector((state) => state.fabricOverlayState);\n    const { zoomIn, zoomOut } = useZoom();\n    const { zoomValue } = useSelector((state) => state.zoomState);\n    const dispatch = useDispatch();\n \n    const handleChange = (e) => {\n        if (e.target.value < 0 || e.target.value >= 100) return;\n        viewer.viewport.zoomTo(viewer.viewport.getMaxZoom() * e.target.value * 0.01);\n        dispatch(updateZoomValue(e.target.value));\n    }\n \n    const handleZoomIn = (e) => {\n        try {\n            if (viewer.viewport.getMaxZoom() > viewer.viewport.getZoom()) {\n                zoomIn();\n            }\n        } catch (e) {\n            console.error(\"Error handling Zoom In button click\", e);\n        }\n    };\n \n    const handleZoomOut = (e) => {\n        try {\n            if (viewer.viewport.getMinZoom() < viewer.viewport.getZoom()) {\n                zoomOut();\n            }\n        } catch (e) {\n            console.error(\"Error handling Zoom Out button click\", e);\n        }\n    };\n \n    const handleZoomLvl = (e, lvl) => {\n        viewer.viewport.zoomTo(viewer.viewport.getMaxZoom() * lvl * 0.01)\n    };\n \n    const navigationKeys = ['ArrowUp', 'ArrowDown', 'Escape'];\n    const MenuInput = props => {\n        const { role } = useMenuItem(props);\n        return (\n            <Box px=\"3\" py=\"3\" role={role}>\n                <Input\n                    size=\"sm\"\n                    onKeyPress={e => {\n                        if (e.key == \"Enter\") {\n                            handleChange(e);\n                        }\n                    }}\n                    onKeyDown={e => {\n                        if (!navigationKeys.includes(e.key)) {\n                            e.stopPropagation();\n                        }\n                    }}\n                />\n            </Box>\n        );\n    };\n \n    return (\n        <Menu closeOnSelect={false}>\n            <MenuButton\n                as={Button}\n                size=\"sm\"\n                backgroundColor=\"#151515\"\n                rightIcon={<RiArrowDropDownLine size=\"20px\" />}\n                marginLeft=\"10px\"\n                _expanded={{ background: \"#313131\" }}\n                _focus={{ border: \"none\" }}\n                _hover={{ background: \"#313131\" }}\n            >\n                {zoomValue}%\n            </MenuButton>\n            <MenuList backgroundColor=\"#151515\" fontSize=\"13px\" zIndex=\"2\">\n                <MenuInput />\n                <MenuItem\n                    size=\"20px\"\n                    onClick={handleZoomIn}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom In\n                </MenuItem>\n                <MenuItem\n                    size=\"20px\"\n                    onClick={handleZoomOut}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom Out\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                    size=\"20px\"\n                    onClick={(e) => handleZoomLvl(e, 25)}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom 25%\n                </MenuItem>\n                <MenuItem\n                    size=\"20px\"\n                    onClick={(e) => handleZoomLvl(e, 50)}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom 50%\n                </MenuItem>\n                <MenuItem\n                    size=\"20px\"\n                    onClick={(e) => handleZoomLvl(e, 75)}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom 75%\n                </MenuItem>\n                <MenuItem\n                    size=\"20px\"\n                    onClick={(e) => handleZoomLvl(e, 100)}\n                    _hover={{ background: \"#313131\" }}\n                >\n                    Zoom 100%\n                </MenuItem>\n            </MenuList>\n        </Menu>\n    );\n};\n \nexport default ZoomLevels;","/home/naman/Desktop/sslPortal/webapp/src/components/Info/info.js",["672"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport HeaderButton from \"../headerButton\";\n\nconst SlideInfo = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"INFO\";\n  const dispatch = useDispatch();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"INFO\" }));\n  };\n\n  return <HeaderButton label=\"Info\" />;\n};\n\nexport default SlideInfo;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Download/download.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Shape/arrow.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Shape/line.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Shape/shape.js",["673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport ToolbarOptionsPanel from \"../ViewerToolbar/optionsPanel\";\nimport { FaShapes } from \"react-icons/fa\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\nimport ShapePicker from \"./picker\";\nimport useFabricHelpers from \"../../hooks/use-fabric-helpers\";\nimport {\n  updateActive,\n  updateShapeColor,\n  updateShape,\n  updateActiveShape,\n} from \"../../state/reducers/shapeReducer\";\nimport { fonts } from \"../Text/fontPicker\";\nimport { updateActivityFeed } from \"../../state/reducers/feedReducer\";\n\nimport { getCanvasImage, getFontSize, getTimestamp } from \"../../hooks/utility\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nconst FABRIC_SHAPE_TYPES = [\"circle\", \"rect\"];\n\nconst Shape = () => {\n  const dispatch = useDispatch();\n  const { color, fabricOverlay, viewer, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, alias, socket } = useSelector(\n    (state) => state.socketState\n  );\n  const { activityFeed } = useSelector((state) => state.feedState);\n\n  const { deselectAll } = useFabricHelpers();\n  const isActive = activeTool === \"SHAPE\";\n\n  const [shape, setShape] = useState(null);\n  const [textbox, setTextbox] = useState(null);\n\n  const myState = useSelector((state) => state.shapeState);\n  const myStateRef = useRef(myState);\n  const setMyState = (action, data) => {\n    myStateRef.current = { ...myState, ...data };\n    dispatch(action(data));\n  };\n\n  const screenSize = useMediaQuery([\n    \"(max-width: 1280px)\",\n    \"(max-width: 1440px)\",\n    \"(max-width: 1920px)\",\n    \"(max-width: 2560px)\",\n  ]);\n\n  /**\n   * Handle primary tool change\n   */\n  useEffect(() => {\n    setMyState(updateActive, { activeShape: null, isActive: isActive });\n  }, [isActive]);\n\n  /**\n   * Handle color change\n   */\n  useEffect(() => {\n    setMyState(updateShapeColor, { color: color });\n  }, [color.hex]);\n\n  /**\n   * Handle an individual shape being selected\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    if (myState.activeShape) {\n      canvas.defaultCursor = \"crosshair\";\n\n      // Disable OSD mouseclicks\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n\n      // Deselect all Fabric Canvas objects\n      deselectAll();\n    } else {\n      canvas.defaultCursor = \"auto\";\n\n      // Enable OSD mouseclicks\n      viewer.setMouseNavEnabled(true);\n      viewer.outerTracker.setTracking(true);\n    }\n  }, [myState.activeShape]);\n\n  /**\n   * Add shapes and handle mouse events\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    /**\n     * Mouse down\n     */\n    function handleMouseDown(options) {\n      if (\n        options.target ||\n        !myStateRef.current.activeShape ||\n        !myStateRef.current.isActive\n      ) {\n        return;\n      }\n\n      const zoomLevel = viewer.viewport.getZoom();\n\n      // Save starting mouse down coordinates\n      let pointer = canvas.getPointer(options.e);\n      let origX = pointer.x;\n      let origY = pointer.y;\n\n      // Create new Shape instance\n      let newShape = null;\n      const shapeOptions = {\n        color: myStateRef.current.color.hex,\n        left: origX,\n        top: origY,\n        width: 0,\n        height: 0,\n      };\n\n      // Stroke fill\n      let fillProps = {\n        fill: \"rgba(0,0,0,0)\",\n        stroke: shapeOptions.color,\n        strokeWidth: zoomLevel <= 1 ? 2 : 2 / zoomLevel,\n      };\n\n      // Shape options\n      switch (myStateRef.current.activeShape.name) {\n        /**\n         * Square\n         */\n        case \"square\":\n          newShape = new fabric.Rect({\n            ...shapeOptions,\n            ...fillProps,\n            width: pointer.x - origX,\n            height: pointer.y - origY,\n          });\n          fabricOverlay.fabricCanvas().add(newShape);\n          break;\n\n        /**\n         * Circle\n         */\n        case \"circle\":\n          newShape = new fabric.Ellipse({\n            ...shapeOptions,\n            ...fillProps,\n            originX: \"left\",\n            originY: \"top\",\n            rx: pointer.x - origX,\n            ry: pointer.y - origY,\n            angle: 0,\n          });\n          fabricOverlay.fabricCanvas().add(newShape);\n          break;\n\n        default:\n          break;\n      }\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: newShape,\n        isMouseDown: true,\n        origX,\n        origY,\n      });\n\n      // Add new shape to the canvas\n      //newShape && fabricOverlay.fabricCanvas().add(newShape);\n    }\n\n    /**\n     * Mouse move\n     */\n    function handleMouseMove(options) {\n      if (\n        //options.target ||\n        !myStateRef.current.activeShape ||\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n      const c = myStateRef.current;\n\n      // Dynamically drag size element to the canvas\n      const pointer = fabricOverlay.fabricCanvas().getPointer(options.e);\n\n      if ([\"square\"].indexOf(c.activeShape.name) > -1) {\n        /**\n         * Rectangle or Triangle\n         */\n        if (c.origX > pointer.x) {\n          c.currentDragShape.set({\n            left: Math.abs(pointer.x),\n          });\n        }\n        if (c.origY > pointer.y) {\n          c.currentDragShape.set({ top: Math.abs(pointer.y) });\n        }\n        c.currentDragShape.set({\n          width: Math.abs(c.origX - pointer.x),\n          height: Math.abs(c.origY - pointer.y),\n        });\n      } else if (c.activeShape.name === \"circle\") {\n        /**\n         * Ellipse (circle)\n         */\n        let rx = Math.abs(c.origX - pointer.x) / 2;\n        let ry = Math.abs(c.origY - pointer.y) / 2;\n        if (rx > c.currentDragShape.strokeWidth) {\n          rx -= c.currentDragShape.strokeWidth / 2;\n        }\n        if (ry > c.currentDragShape.strokeWidth) {\n          ry -= c.currentDragShape.strokeWidth / 2;\n        }\n        c.currentDragShape.set({ rx, ry });\n\n        if (c.origX > pointer.x) {\n          c.currentDragShape.set({ originX: \"right\" });\n        } else {\n          c.currentDragShape.set({ originX: \"left\" });\n        }\n        if (c.origY > pointer.y) {\n          c.currentDragShape.set({ originY: \"bottom\" });\n        } else {\n          c.currentDragShape.set({ originY: \"top\" });\n        }\n      }\n\n      fabricOverlay.fabricCanvas().renderAll();\n    }\n\n    // Create new Textbox instance and add it to canvas\n    const createTextbox = ({ left, top, height }) => {\n      const fontSize = getFontSize(screenSize, viewer.viewport.getZoom());\n\n      const tbox = new fabric.IText(\"\", {\n        left: left,\n        top: top + height + 2,\n        fontFamily: fonts[0].fontFamily,\n        fontSize: fontSize,\n        selectionBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      });\n\n      fabricOverlay.fabricCanvas().add(tbox);\n      canvas.setActiveObject(tbox);\n      tbox.enterEditing();\n    };\n\n    /**\n     * Mouse up\n     */\n    function handleMouseUp(options) {\n      if (\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n\n      fabricOverlay\n        .fabricCanvas()\n        .setActiveObject(myStateRef.current.currentDragShape);\n\n      fabricOverlay.fabricCanvas().renderAll();\n\n      const currShape = myStateRef.current.currentDragShape;\n\n      setShape(myStateRef.current.currentDragShape);\n\n      let [left, top, height, width] = [\n        currShape.left,\n        currShape.top,\n        currShape.height,\n        currShape.width,\n      ];\n\n      if (currShape.type === \"ellipse\") {\n        if (currShape.originX === \"right\") left -= width;\n        if (currShape.originY === \"bottom\") height = 0;\n      }\n\n      createTextbox({\n        left: left,\n        top: top,\n        height: height,\n      });\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: null,\n        isMouseDown: false,\n      });\n    }\n\n    function handleSelectionCleared(options) {\n      // hide text when no object is selected\n      if (options.deselected && options.deselected[0].type === \"group\")\n        options.deselected[0].item(1).set({ visible: false });\n\n      // set textbox when deselected\n      if (options.deselected && options.deselected[0].type === \"i-text\")\n        setTextbox(options.deselected[0]);\n\n      if (!myStateRef.current.isActive) return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    function handleSelected(options) {\n      // make text visible on selected object\n      if (options && options.target.type === \"group\") {\n        options.target.item(1).set({ visible: true });\n      }\n\n      // hide text on previous selected object (or deselected object)\n      if (options.deselected && options.deselected[0].type === \"group\") {\n        options.deselected[0].item(1).set({ visible: false });\n      }\n\n      if (!myStateRef.current.isActive) return;\n\n      // Filter out any non-shape selections\n      const optionsTargetType = options.target.get(\"type\");\n      if (\n        !FABRIC_SHAPE_TYPES.find((shapeType) => shapeType === optionsTargetType)\n      )\n        return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    // Add click handlers\n    canvas.on(\"mouse:down\", handleMouseDown);\n    canvas.on(\"mouse:move\", handleMouseMove);\n    canvas.on(\"mouse:up\", handleMouseUp);\n    canvas.on(\"selection:created\", handleSelected);\n    canvas.on(\"selection:updated\", handleSelected);\n    canvas.on(\"selection:cleared\", handleSelectionCleared);\n\n    // Remove handler\n    return function clearFabricEventHandlers() {\n      canvas.off(\"mouse:down\", handleMouseDown);\n      canvas.off(\"mouse:move\", handleMouseMove);\n      canvas.off(\"mouse:up\", handleMouseUp);\n      canvas.off(\"selection:created\", handleSelected);\n      canvas.off(\"selection:updated\", handleSelected);\n      canvas.off(\"selection:cleared\", handleSelectionCleared);\n    };\n  }, [fabricOverlay]);\n\n  // group shape and textbox together\n  // first remove both from canvas then group them and then add group to canvas\n  useEffect(async () => {\n    if (!shape || !textbox) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    let message = {\n      username: alias,\n      color: shape.stroke,\n      action: \"added\",\n      text: \"\",\n      timeStamp: getTimestamp(),\n      type: shape.type,\n      object: shape,\n      image: null,\n    };\n\n    if (textbox.text !== \"\") {\n      canvas.remove(shape);\n      canvas.remove(textbox);\n      textbox.set({\n        visible: false,\n      });\n      const group = new fabric.Group([shape, textbox], { isExist: true });\n      canvas.add(group);\n      message.text = textbox.text;\n      message.object = group;\n    } else {\n      shape.set({ isExist: true });\n    }\n\n    message.image = await getCanvasImage();\n\n    setShape(null);\n    setTextbox(null);\n\n    dispatch(updateActivityFeed([...activityFeed, message]));\n\n    // send annotation\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  }, [textbox]);\n\n  const handleShapeSelect = (shape) => {\n    dispatch(updateTool({ tool: isActive ? \"\" : \"SHAPE\" }));\n    setMyState(updateActiveShape, { activeShape: shape });\n  };\n\n  const handleToolbarClick = () => {\n    dispatch(updateTool({ tool: isActive ? \"\" : \"SHAPE\" }));\n  };\n\n  return <ShapePicker handleShapeSelect={handleShapeSelect} />;\n};\n\nexport default Shape;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/square.js",["684","685","686","687","688","689","690","691"],"import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\nimport useFabricHelpers from \"../../hooks/use-fabric-helpers\";\nimport {\n  updateActive,\n  updateShapeColor,\n  updateShape,\n  updateActiveShape,\n} from \"../../state/reducers/shapeReducer\";\nimport { fonts } from \"../Text/fontPicker\";\nimport { updateActivityFeed } from \"../../state/reducers/fabricOverlayReducer\";\n\nimport { getCanvasImage, getFontSize, getTimestamp } from \"../../hooks/utility\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport { BsSquare } from \"react-icons/bs\";\nimport TypeButton from \"../typeButton\";\n\nconst Square = ({ viewerId }) => {\n  const dispatch = useDispatch();\n  const { color, viewerWindow, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, alias, socket } = useSelector(\n    (state) => state.socketState\n  );\n\n  const { fabricOverlay, viewer, zoomValue, activityFeed } =\n    viewerWindow[viewerId];\n  \n  const { deselectAll } = useFabricHelpers();\n  const isActive = activeTool === \"Square\";\n\n  const [shape, setShape] = useState(null);\n  const [textbox, setTextbox] = useState(null);\n\n  const myState = useSelector((state) => state.shapeState);\n  const myStateRef = useRef(myState);\n  const setMyState = (action, data) => {\n    myStateRef.current = { ...myState, ...data };\n    dispatch(action(data));\n  };\n\n  const screenSize = useMediaQuery([\n    \"(max-width: 1280px)\",\n    \"(max-width: 1440px)\",\n    \"(max-width: 1920px)\",\n    \"(max-width: 2560px)\",\n  ]);\n\n  /**\n   * Handle primary tool change\n   */\n  useEffect(() => {\n    setMyState(updateActive, { activeShape: null, isActive: isActive });\n  }, [isActive]);\n\n  /**\n   * Handle color change\n   */\n  useEffect(() => {\n    setMyState(updateShapeColor, { color: color });\n  }, [color.hex]);\n\n  /**\n   * Handle an individual shape being selected\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    if (isActive) {\n      canvas.defaultCursor = \"crosshair\";\n\n      // Disable OSD mouseclicks\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n\n      // Deselect all Fabric Canvas objects\n      deselectAll(canvas);\n    } else {\n      canvas.defaultCursor = \"auto\";\n\n      // Enable OSD mouseclicks\n      viewer.setMouseNavEnabled(true);\n      viewer.outerTracker.setTracking(true);\n    }\n  }, [isActive]);\n\n  /**\n   * Add shapes and handle mouse events\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    /**\n     * Mouse down\n     */\n    function handleMouseDown(options) {\n      if (options.target || !myStateRef.current.isActive) {\n        return;\n      }\n\n      // Save starting mouse down coordinates\n      let pointer = canvas.getPointer(options.e);\n      let origX = pointer.x;\n      let origY = pointer.y;\n\n      // Create new Shape instance\n      let newShape = null;\n      const shapeOptions = {\n        color: myStateRef.current.color.hex,\n        left: origX,\n        top: origY,\n        width: 0,\n        height: 0,\n      };\n\n      // Stroke fill\n      let fillProps = {\n        fill: \"rgba(0,0,0,0)\",\n        stroke: shapeOptions.color,\n        strokeWidth: 3 / (zoomValue / 40),\n      };\n\n      newShape = new fabric.Rect({\n        ...shapeOptions,\n        ...fillProps,\n        width: pointer.x - origX,\n        height: pointer.y - origY,\n      });\n      fabricOverlay.fabricCanvas().add(newShape);\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: newShape,\n        isMouseDown: true,\n        origX,\n        origY,\n      });\n\n      // Add new shape to the canvas\n      //newShape && fabricOverlay.fabricCanvas().add(newShape);\n    }\n\n    /**\n     * Mouse move\n     */\n    function handleMouseMove(options) {\n      if (\n        //options.target ||\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n      const c = myStateRef.current;\n\n      // Dynamically drag size element to the canvas\n      const pointer = fabricOverlay.fabricCanvas().getPointer(options.e);\n\n      /**\n       * Rectangle or Triangle\n       */\n      if (c.origX > pointer.x) {\n        c.currentDragShape.set({\n          left: Math.abs(pointer.x),\n        });\n      }\n      if (c.origY > pointer.y) {\n        c.currentDragShape.set({ top: Math.abs(pointer.y) });\n      }\n      c.currentDragShape.set({\n        width: Math.abs(c.origX - pointer.x),\n        height: Math.abs(c.origY - pointer.y),\n      });\n\n      fabricOverlay.fabricCanvas().renderAll();\n    }\n\n    const fontSize = getFontSize(screenSize, zoomValue);\n\n    // Create new Textbox instance and add it to canvas\n    const createTextbox = ({ left, top, height }) => {\n      const tbox = new fabric.IText(\"\", {\n        left: left,\n        top: top + height + 2,\n        fontFamily: fonts[0].fontFamily,\n        fontSize: fontSize,\n        fontWeight: \"bold\",\n        selectionBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      });\n\n      fabricOverlay.fabricCanvas().add(tbox);\n      canvas.setActiveObject(tbox);\n      tbox.enterEditing();\n    };\n\n    /**\n     * Mouse up\n     */\n    function handleMouseUp(options) {\n      if (\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n\n      fabricOverlay\n        .fabricCanvas()\n        .setActiveObject(myStateRef.current.currentDragShape);\n\n      fabricOverlay.fabricCanvas().renderAll();\n\n      const currShape = myStateRef.current.currentDragShape;\n\n      setShape(myStateRef.current.currentDragShape);\n\n      createTextbox({\n        left: currShape.left,\n        top: currShape.top,\n        height: currShape.height,\n      });\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: null,\n        isMouseDown: false,\n      });\n    }\n\n    function handleSelectionCleared(options) {\n      // hide text when no object is selected\n      if (options.deselected && options.deselected[0].type === \"group\")\n        options.deselected[0].item(1).set({ visible: false });\n\n      // set textbox when deselected\n      if (options.deselected && options.deselected[0].type === \"i-text\")\n        setTextbox(options.deselected[0]);\n\n      if (!myStateRef.current.isActive) return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    function handleSelected(options) {\n      // make text visible on selected object\n      if (options && options.target.type === \"group\") {\n        options.target.item(1).set({ visible: true });\n      }\n\n      // hide text on previous selected object (or deselected object)\n      if (options.deselected && options.deselected[0].type === \"group\") {\n        options.deselected[0].item(1).set({ visible: false });\n      }\n\n      if (!myStateRef.current.isActive) return;\n\n      // Filter out any non-shape selections\n      const optionsTargetType = options.target.get(\"type\");\n      if (!\"square\" === optionsTargetType) return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    // Add click handlers\n    canvas.on(\"mouse:down\", handleMouseDown);\n    canvas.on(\"mouse:move\", handleMouseMove);\n    canvas.on(\"mouse:up\", handleMouseUp);\n    canvas.on(\"selection:created\", handleSelected);\n    canvas.on(\"selection:updated\", handleSelected);\n    canvas.on(\"selection:cleared\", handleSelectionCleared);\n\n    // Remove handler\n    return function clearFabricEventHandlers() {\n      canvas.off(\"mouse:down\", handleMouseDown);\n      canvas.off(\"mouse:move\", handleMouseMove);\n      canvas.off(\"mouse:up\", handleMouseUp);\n      canvas.off(\"selection:created\", handleSelected);\n      canvas.off(\"selection:updated\", handleSelected);\n      canvas.off(\"selection:cleared\", handleSelectionCleared);\n    };\n  }, [isActive]);\n\n  // group shape and textbox together\n  // first remove both from canvas then group them and then add group to canvas\n  useEffect(async () => {\n    if (!shape || !textbox) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    let message = {\n      username: alias,\n      color: shape.stroke,\n      action: \"added\",\n      text: \"\",\n      timeStamp: getTimestamp(),\n      type: shape.type,\n      object: shape,\n      image: null,\n    };\n\n    if (textbox.text !== \"\") {\n      canvas.remove(shape);\n      canvas.remove(textbox);\n      textbox.set({\n        visible: false,\n      });\n      const group = new fabric.Group([shape, textbox], { isExist: true });\n      canvas.add(group);\n      message.text = textbox.text;\n      message.object = group;\n    } else {\n      shape.set({ isExist: true });\n    }\n\n    message.image = await getCanvasImage(viewerId);\n\n    setShape(null);\n    setTextbox(null);\n\n    dispatch(\n      updateActivityFeed({ id: viewerId, feed: [...activityFeed, message] })\n    );\n\n    // send annotation\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  }, [textbox]);\n\n  const handleClick = () => {\n    dispatch(updateTool({ tool: \"Square\" }));\n  };\n\n  return (\n    <TypeButton\n      icon={<BsSquare />}\n      backgroundColor={isActive ? \"#8fa8e1\" : \"#dddddd\"}\n      color={isActive ? \"black\" : \"#3963c3\"}\n      label=\"Square\"\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default Square;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Search/search.js",["692","693","694","695"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport { Input } from \"@chakra-ui/react\";\n\nconst SlideSearch = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"SEARCH\";\n  const dispatch = useDispatch();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"SEARCH\" }));\n  };\n\n  return (\n    <Input type=\"text\" w=\"300px\" color=\"white\" placeholder=\"Search\" />\n    // <ToolbarButton\n    //   onClick={handleToolbarClick}\n    //   icon={<SearchIcon />}\n    //   label=\"Search\"\n    //   color={isActive ? \"white\" : \"#999999\"}\n    // />\n  );\n};\n\nexport default SlideSearch;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Authenticate/login.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Color/color.js",["696","697","698","699","700","701"],"import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaPaintBrush } from \"react-icons/fa\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updateIsActiveTool,\n  updateIsObjectSelected,\n} from \"../../state/reducers/colorReducer\";\nimport ColorOptionsPanel from \"./optionsPanel\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport ToolbarOptionsPanel from \"../ViewerToolbar/optionsPanel\";\n\nconst Color = () => {\n  const dispatch = useDispatch();\n  const { activeTool, viewerWindow } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n\n  const myState = useSelector((state) => state.colorState);\n  const myStateRef = useRef(myState);\n  const setMyState = (action, data) => {\n    myStateRef.current = { ...myState, ...data };\n    dispatch(action(data));\n  };\n\n  useEffect(() => {\n    setMyState(updateIsActiveTool, {\n      isActiveTool: Boolean(activeTool && activeTool !== \"POINTER\"),\n    });\n  }, [activeTool]);\n\n  /**\n   * Handle mouse events\n   */\n  useEffect(() => {\n    if (!viewerWindow) return;\n\n    const handleSelectionCleared = (e) => {\n      setMyState(updateIsObjectSelected, {\n        ...myStateRef.current,\n        isObjectSelected: false,\n      });\n    };\n    const handleSelectionCreated = (e) => {\n      setMyState(updateIsObjectSelected, {\n        ...myStateRef.current,\n        isObjectSelected: true,\n      });\n    };\n    const handleSelectionUpdated = (e) => {};\n\n    for (let k in viewerWindow) {\n      const overlay = viewerWindow[k].fabricOverlay;\n      if (!overlay) continue;\n      const canvas = overlay.fabricCanvas();\n      canvas.on(\"selection:created\", handleSelectionCreated);\n      canvas.on(\"selection:cleared\", handleSelectionCleared);\n      canvas.on(\"selection:updated\", handleSelectionUpdated);\n    }\n    return () => {\n      for (let k in viewerWindow) {\n        const overlay = viewerWindow[k].fabricOverlay;\n        if (!overlay) continue;\n        const canvas = overlay.fabricCanvas();\n        canvas.off(\"selection:created\", handleSelectionCreated);\n        canvas.off(\"selection:cleared\", handleSelectionCleared);\n        canvas.off(\"selection:updated\", handleSelectionUpdated);\n      }\n    };\n  }, [viewerWindow]);\n\n  return (\n    <Box pl={1}>\n      <ColorOptionsPanel />\n    </Box>\n  );\n};\n\nexport default Color;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Chat/chat.js",["702","703","704"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\nimport { BiCommentDetail } from \"react-icons/bi\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport TypeButton from \"../typeButton\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport MessageBox from \"./messageBox\";\n\nconst SlideChat = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"CHAT\";\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleToolbarClick = () => {\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"CHAT\" }));\n    onOpen();\n  };\n\n  const close = () => {\n    onClose();\n    dispatch(updateActiveDrawerTool({ tool: isActive ? \"\" : \"CHAT\" }));\n  };\n\n  return (\n    <>\n      <TypeButton\n        onClick={handleToolbarClick}\n        icon={<BiCommentDetail color={isActive ? \"black\" : \"#DDDDDD\"} />}\n        backgroundColor={isActive ? \"white\" : \"#3963c3\"}\n        border=\"0.5px solid rgba(255, 255, 255, 0.5)\"\n        label=\"Chat\"\n      />\n      <MessageBox isOpen={isOpen} onClose={close} />\n    </>\n  );\n};\n\nexport default SlideChat;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Move/move.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Screenshot/screenshot.js",["705","706","707"],"import React from \"react\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { FiCamera } from \"react-icons/fi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\n\nconst Screenshot = () => {\n  const { activeTool } = useSelector((state) => state.fabricOverlayState);\n\n  const handleClick = () => {};\n\n  return (\n    <ToolbarButton\n      label=\"Screenshot\"\n      icon={<FiCamera size={25} />}\n      backgroundColor=\"rgba(255,255,255, 0.5)\"\n      color=\"#3963c3\"\n      _hover={{\n        backgroundColor: \"white\",\n        color: \"black\",\n      }}\n      _focus={{}}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default Screenshot;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Case/case.js",["708"],"import React from \"react\";\nimport { Box, Text, VStack } from \"@chakra-ui/react\";\n\nconst Case = (props) => {\n  return (\n    <VStack\n      w=\"100%\"\n      color=\"white\"\n      p=\"10px\"\n      pr=\"15px\"\n      borderRadius=\"5px\"\n      backgroundColor=\"rgba(255,255,255, 0.2)\"\n      fontSize=\"xs\"\n      fontWeight=\"100\"\n      align=\"left\"\n      spacing={-1}\n      {...props}\n    >\n      <Text>Slide Info/Case</Text>\n      <Text>History</Text>\n      <Text>Patient information</Text>\n    </VStack>\n  );\n};\n\nexport default Case;\n","/home/naman/Desktop/sslPortal/webapp/src/components/ZoomSlider/slider.js",["709","710","711","712","713","714","715","716","717"],"import React, { useRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Slider from \"../reactSlider\";\nimport { updateZoomValue } from \"../../state/reducers/fabricOverlayReducer\";\nimport { Box, Link } from \"@chakra-ui/react\";\nimport { FiZoomIn, FiZoomOut } from \"react-icons/fi\";\n\nconst ZoomSlider = ({ viewerId }) => {\n  const { viewer, zoomValue } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[viewerId]\n  );\n  const dispatch = useDispatch();\n\n  const handleSlider = (val) => {\n    viewer.viewport.zoomTo(viewer.viewport.getMaxZoom() * val * 2.5 * 0.01);\n    dispatch(updateZoomValue({ id: viewerId, value: val }));\n  };\n\n  const handleLabel = (val) => {\n    viewer.viewport.zoomTo(viewer.viewport.getMaxZoom() * val * 2.5 * 0.01);\n    dispatch(updateZoomValue({ id: viewerId, value: val }));\n  };\n\n\n  useEffect(() => {\n    if (!viewer) return;\n    viewer.addHandler(\"zoom\", (e) => {\n      const value = parseInt((e.zoom * 40) / viewer.viewport.getMaxZoom());\n      dispatch(updateZoomValue({ id: viewerId, value: value }));\n    });\n  }, [viewer]);\n\n  const label = [\"1\", \"5\", \"10\", \"20\", \"30\", \"40\"];\n\n  return (\n    <Box>\n      <Slider\n        value={zoomValue}\n        valueLabelStyle={{ display: \"none\" }}\n        min={1}\n        max={40}\n        markers={6}\n        stepSize={8}\n        fontColor=\"white\"\n        grabCursor={false}\n        trackLength={100}\n        trackShape=\"squared\"\n        handlerShape=\"rounded\"\n        handlerBorderColor=\"#3965C6\"\n        handlerSize={10}\n        trackThickness={3}\n        fillColor=\"#3965C6\"\n        fontSize={10}\n        vertical={true}\n        fontColor=\"#6B6B6B\"\n        markersSize={10}\n        markersLabel={label}\n        markersLeft=\"6px\"\n        onChange={(val) => handleSlider(val)}\n        valueRenderer={(value) => `${value}%`}\n        viewerId={viewerId}\n      />\n    </Box>\n  );\n};\n\nexport default ZoomSlider;\n","/home/naman/Desktop/sslPortal/webapp/src/components/modalButton.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/typeButton.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/button.js",["718"],"import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip, Box, Text } from \"@chakra-ui/react\";\nimport { useWindowHeight } from \"@react-hook/window-size\";\nimport { isMobile, isTablet } from \"react-device-detect\";\n\nconst ToolbarButton = ({\n  label = \"Toolbar button\",\n  isActive,\n  ...restProps\n}) => {\n  const windowHeight = useWindowHeight();\n\n  let iconSizes = { size: \"lg\", fontSize: \"2xl\" };\n\n  if (!isMobile) {\n    if (windowHeight <= 645) {\n      iconSizes.size = \"sm\";\n      iconSizes.fontSize = \"md\";\n    } else if (windowHeight <= 693) {\n      iconSizes.size = \"sm\";\n      iconSizes.fontSize = \"md\";\n    }\n  }\n\n  if (isMobile && !isTablet) {\n    iconSizes.size = \"sm\";\n    iconSizes.fontSize = \"md\";\n  }\n\n  return (\n    <Box>\n      {/* <Tooltip\n        label={label}\n        aria-label={label}\n        placement=\"bottom\"\n        openDelay={500}\n      > */}\n      <IconButton\n        size=\"lg\"\n        variant=\"unstyled\"\n        backgroundColor=\"rgba(255,255,255, 0.5)\"\n        color=\"#3963c3\"\n        pl=\"10px\"\n        p=\"10px\"\n        borderRadius=\"3px\"\n        _focus={{\n          border: \"none\",\n        }}\n        {...restProps}\n      />\n      {/* </Tooltip> */}\n      <Text color=\"white\" align=\"center\" fontSize=\"0.6rem\">\n        {label}\n      </Text>\n    </Box>\n  );\n};\n\nToolbarButton.propTypes = {\n  label: PropTypes.string,\n  isActive: PropTypes.bool,\n};\n\nexport default memo(ToolbarButton);\n","/home/naman/Desktop/sslPortal/webapp/src/hooks/utility.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/headerButton.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/reactSlider.js",["719","720"],"import React, { useRef, useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { updateZoomValue } from \"../state/reducers/fabricOverlayReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"@chakra-ui/react\";\n\nconst Slider = (props) => {\n  const { viewer } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[props.viewerId]\n  );\n  const dispatch = useDispatch();\n  const {\n    defaultValue,\n    value,\n    showValue,\n    valueLabelColor,\n    valueLabelActiveColor,\n    valueLabelPadding,\n    valueLabelStyle,\n    min,\n    max,\n    stepSize,\n    disabled,\n    disabledColor,\n    onChange,\n    onRelease,\n    valueRenderer,\n    trackLength,\n    trackColor,\n    trackThickness,\n    trackShape,\n    trackStyle,\n    fillTrack,\n    fillColor,\n    handlerSize,\n    handlerWidth,\n    handlerHeight,\n    handlerShape,\n    handlerColor,\n    handlerBorderColor,\n    handlerActiveColor,\n    handlerStyle,\n    markers,\n    markersLabel,\n    markersSize,\n    markersLeft,\n    showMarkers,\n    fontSize,\n    fontColor,\n    grabCursor,\n    vertical,\n    invertMarkers,\n    style,\n  } = props;\n\n  const handler_ref = useRef(null);\n\n  const handler_width = handlerWidth ? handlerWidth : handlerSize;\n  const handler_height = handlerHeight ? handlerHeight : handlerSize;\n  const handlerWidth_radius = handler_width / 2;\n  const handlerHeight_radius = handler_height / 2;\n  const defaultStep = defaultValue - min;\n  const [_value, set_Value] = useState(defaultValue);\n  const step = (value !== null ? value : _value) - min;\n\n  const [isActive, setIsActive] = useState(false);\n  const [pointerStart_positionX, setPointerStart_positionX] = useState(0);\n  const [startValue, setStartValue] = useState(\n    defaultStep && !value ? defaultStep : step\n  );\n  const [handler_position, setHandler_position] = useState(null);\n\n  const steps = max - min;\n\n  const track_radius = trackThickness / 2;\n  const stepWidth = trackLength / steps;\n\n  const markers_PositionsX = useMemo(() => {\n    if (trackLength === 0) return [];\n    const markers_PositionsX = [];\n    for (let i = 0; i < markers; ++i) {\n      const relPosition = i * (trackLength / (markers - 1));\n      markers_PositionsX.push({\n        position:\n          relPosition +\n          (!vertical ? handlerWidth_radius : handlerHeight_radius),\n        value: Math.round(relPosition / stepWidth),\n      });\n    }\n    return markers_PositionsX;\n  }, [trackLength, markers, handlerWidth_radius, stepWidth]);\n\n  const sliderChangeHandler = (position) => {\n    const updatedValue = Math.round(min + position / stepWidth);\n    if (updatedValue !== value && updatedValue % stepSize === 0) {\n      setHandler_position(position);\n      onChange(updatedValue);\n      set_Value(updatedValue);\n    }\n  };\n\n  const pointerDownHandler = (e) => {\n    if (disabled === false) {\n      e.currentTarget.setPointerCapture(e.pointerId);\n      setIsActive(true);\n      setPointerStart_positionX(!vertical ? e.clientX : e.clientY);\n      setHandler_position(step * stepWidth);\n      setStartValue(step);\n    }\n  };\n\n  const trackPointerDownHandler = (e) => {\n    if (disabled === false && !vertical) {\n      // to implement : vertical\n      const pointer_position = !vertical\n        ? e.clientX - e.currentTarget.getBoundingClientRect().x\n        : e.clientY - e.currentTarget.getBoundingClientRect().y;\n      sliderChangeHandler(pointer_position);\n      handler_ref.current.setPointerCapture(e.pointerId);\n      setIsActive(true);\n      setPointerStart_positionX(!vertical ? e.clientX : e.clientY);\n      setStartValue(Math.round((pointer_position / trackLength) * steps));\n    }\n  };\n\n  const pointerMoveHandler = useCallback(\n    (e) => {\n      if (isActive) {\n        const updatedhandler_position =\n          startValue * stepWidth +\n          (vertical ? 1 : -1) *\n            (pointerStart_positionX - (!vertical ? e.clientX : e.clientY));\n        if (updatedhandler_position !== handler_position) {\n          sliderChangeHandler(\n            updatedhandler_position >= 0 &&\n              updatedhandler_position <= trackLength\n              ? updatedhandler_position\n              : updatedhandler_position > trackLength\n              ? trackLength\n              : 0\n          );\n        }\n      }\n    },\n    [trackLength, isActive, handler_position, pointerStart_positionX]\n  );\n\n  const pointerUpHandler = (e) => {\n    if (disabled === false) {\n      setIsActive(false);\n      setPointerStart_positionX(0);\n      setHandler_position(null);\n      onRelease(Math.round(min + handler_position / stepWidth));\n    }\n  };\n\n  const renderSlider = () => {\n    return (\n      <div\n        style={{\n          ...styles.slider,\n          ...(!vertical\n            ? { height: handler_height }\n            : { width: handler_width }),\n          visibility: trackLength !== 0 ? \"visible\" : \"hidden\",\n        }}\n      >\n        <div\n          style={{\n            ...styles.track,\n            ...trackStyle,\n            borderRadius: trackShape === \"rounded\" ? track_radius : 0,\n            ...(!vertical\n              ? {\n                  left: handlerWidth_radius,\n                  right: handlerWidth_radius,\n                  top: \"50%\",\n                  height: trackThickness,\n                  transform: \"translateY(-50%)\",\n                }\n              : {\n                  top: handlerHeight_radius,\n                  bottom: handlerHeight_radius,\n                  left: \"50%\",\n                  width: trackThickness,\n                  transform: \"translateX(-50%)\",\n                }),\n            backgroundColor: disabled ? disabledColor : trackColor,\n            cursor: !disabled ? \"pointer\" : \"default\",\n          }}\n          onPointerDown={trackPointerDownHandler}\n        />\n        {fillTrack && (\n          <div\n            style={{\n              ...styles.trackFill,\n              borderRadius: trackShape === \"rounded\" ? track_radius : 0,\n              left: handlerWidth_radius,\n              ...(!vertical\n                ? {\n                    top: handlerHeight_radius,\n                    width:\n                      handler_position !== null\n                        ? handler_position\n                        : step * stepWidth,\n                    height: trackThickness,\n                    transform: \"translateY(-50%)\",\n                  }\n                : {\n                    bottom: handlerHeight_radius,\n                    height:\n                      handler_position !== null\n                        ? handler_position\n                        : step * stepWidth,\n                    width: trackThickness,\n                    transform: \"translateX(-50%)\",\n                  }),\n              backgroundColor: fillColor,\n              cursor: !disabled ? \"pointer\" : \"default\",\n            }}\n            onPointerDown={trackPointerDownHandler}\n          />\n        )}\n        <div\n          ref={handler_ref}\n          onPointerDown={pointerDownHandler}\n          onPointerMove={pointerMoveHandler}\n          onPointerUp={pointerUpHandler}\n          style={{\n            ...styles.handler,\n            ...handlerStyle,\n            ...(!vertical\n              ? {\n                  left:\n                    handler_position !== null\n                      ? handler_position\n                      : step * stepWidth,\n                }\n              : {\n                  bottom:\n                    handler_position !== null\n                      ? handler_position\n                      : step * stepWidth,\n                }),\n            height: handler_height,\n            width: handler_width,\n            backgroundColor: isActive\n              ? handlerActiveColor\n              : disabled\n              ? disabledColor\n              : handlerColor,\n            border: `1px solid ${handlerBorderColor}`,\n            borderRadius: handlerShape === \"rounded\" ? handlerHeight_radius : 4,\n            cursor:\n              grabCursor && !disabled\n                ? isActive\n                  ? \"grabbing\"\n                  : \"grab\"\n                : \"default\",\n          }}\n        />\n        {((isActive && showValue === \"active\") ||\n          (showMarkers === \"hidden\" && showValue === \"active\" && isActive) ||\n          showValue === true) &&\n          showMarkers && (\n            <div\n              style={{\n                ...styles.marker,\n                zIndex: 10,\n                height: fontSize,\n                padding: valueLabelPadding,\n                border: `1px solid ${handlerColor}`,\n                ...valueLabelStyle,\n                ...(!vertical\n                  ? {\n                      left:\n                        handlerWidth_radius +\n                        (handler_position !== null\n                          ? handler_position\n                          : step * stepWidth),\n                      top: !invertMarkers\n                        ? handler_height + markersSize + valueLabelPadding - 2\n                        : -markersSize - valueLabelPadding - 1,\n                      transform: `translate(-50%,${\n                        !invertMarkers ? -100 : 0\n                      }%)`,\n                    }\n                  : {\n                      bottom:\n                        handlerHeight_radius +\n                        (handler_position !== null\n                          ? handler_position\n                          : step * stepWidth),\n                      ...(!invertMarkers\n                        ? {\n                            left:\n                              handler_width + markersSize + valueLabelPadding,\n                          }\n                        : {\n                            right:\n                              handler_width + markersSize + valueLabelPadding,\n                          }),\n                      transform: `translate(${\n                        !invertMarkers ? -100 : 100\n                      }%, 50%)`,\n                    }),\n                backgroundColor: isActive\n                  ? valueLabelActiveColor\n                  : valueLabelColor,\n              }}\n            >\n              {valueRenderer(value !== null ? value : _value)}\n            </div>\n          )}\n      </div>\n    );\n  };\n\n  const renderMarkers = () => {\n    const onClickHandle = (value) => {\n      viewer.viewport.zoomTo(\n        viewer.viewport.getMaxZoom() * parseInt(value) * 2.5 * 0.01\n      );\n      dispatch(updateZoomValue({ id: props.viewerId, value: parseInt(value) }));\n    };\n    return (\n      <React.Fragment>\n        {trackLength !== 0 && markers >= 2 && (\n          <div\n            style={{\n              position: \"relative\",\n              left: markersLeft,\n              visibility:\n                showMarkers === true ||\n                (showMarkers === \"active\" && isActive) ||\n                (showMarkers === \"inactive\" && !isActive)\n                  ? \"visible\"\n                  : \"hidden\",\n              ...(!vertical ? { height: markersSize } : { width: markersSize }),\n            }}\n          >\n            {markers_PositionsX.map(({ position, value }, index) => {\n              return (\n                <div\n                  key={position}\n                  style={{\n                    ...styles.marker,\n                    ...(!vertical\n                      ? {\n                          left: position,\n                          ...(!invertMarkers ? { bottom: 0 } : { top: 0 }),\n                          transform: \"translateX(-50%)\",\n                        }\n                      : {\n                          bottom: position,\n                          ...(!invertMarkers ? { right: 0 } : { left: 0 }),\n                          transform: `translateY(50%)`,\n                        }),\n                  }}\n                >\n                  <Link\n                    variant=\"unstyled\"\n                    fontSize=\"8px\"\n                    _hover={{ color: \"#3965C6\" }}\n                    onClick={() => onClickHandle(markersLabel[index])}\n                  >\n                    {markersLabel ? markersLabel[index] + \"x\" : value}\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        ...style,\n        ...styles.container,\n        flexDirection: !vertical ? \"column\" : \"row\",\n        fontSize,\n        color: fontColor,\n        ...(!vertical\n          ? { width: trackLength + handler_width }\n          : {\n              height: trackLength + handler_height,\n              width: handler_width + markersSize,\n            }),\n      }}\n    >\n      {invertMarkers ? (\n        <React.Fragment>\n          {showMarkers && renderMarkers()}\n          {renderSlider()}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {renderSlider()}\n          {showMarkers && renderMarkers()}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  slider: {\n    position: \"relative\",\n  },\n  track: {\n    position: \"absolute\",\n  },\n  trackFill: {\n    position: \"absolute\",\n  },\n  handler: {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    borderRadius: 4,\n  },\n  marker: {\n    position: \"absolute\",\n    textAlign: \"center\",\n  },\n};\n\nSlider.defaultProps = {\n  defaultValue: 0,\n  value: null,\n  showValue: true,\n  valueLabelColor: \"#3d3b4c\",\n  valueLabelActiveColor: \"#4c61ff\",\n  valueLabelPadding: 4,\n  valueLabelStyle: { color: \"#fff\" },\n  min: 0,\n  max: 100,\n  stepSize: 1,\n  disabled: false,\n  disabledColor: \"red\",\n  onChange: () => {},\n  onRelease: () => {},\n  valueRenderer: (value) => value.toString(),\n  trackLength: 200,\n  trackColor: \"#e5e5e5\",\n  trackThickness: 5,\n  trackShape: \"rounded\",\n  trackStyle: {},\n  fillTrack: true,\n  fillColor: \"#4c61ff\",\n  handlerSize: 20,\n  handlerWidth: null,\n  handlerHeight: null,\n  handlerShape: \"squared\",\n  handlerColor: \"#fff\",\n  handlerBorderColor: \"#999\",\n  handlerActiveColor: \"#e5e5e5\",\n  handlerStyle: {},\n  fontSize: 12,\n  fontColor: \"#333\",\n  markers: 2,\n  markersSize: 20,\n  showMarkers: true,\n  grabCursor: true,\n  vertical: false,\n  invertMarkers: false,\n  style: {},\n};\n\nSlider.propTypes = {\n  defaultValue: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  showValue: PropTypes.oneOf([true, false, \"active\"]),\n  valueLabelColor: PropTypes.string,\n  valueLabelActiveColor: PropTypes.string,\n  valueLabelPadding: PropTypes.number,\n  valueLabelStyle: PropTypes.object,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  stepSize: PropTypes.number,\n  disabled: PropTypes.bool,\n  disabledColor: PropTypes.string,\n  onChange: PropTypes.func,\n  onRelease: PropTypes.func.isRequired,\n  valueRenderer: PropTypes.func,\n  trackLength: PropTypes.number.isRequired,\n  trackColor: PropTypes.string,\n  trackThickness: PropTypes.number,\n  trackShape: PropTypes.oneOf([\"squared\", \"rounded\"]),\n  trackStyle: PropTypes.object,\n  fillTrack: PropTypes.bool,\n  fillColor: PropTypes.string,\n  handlerSize: PropTypes.number,\n  handlerWidth: PropTypes.number,\n  handlerHeight: PropTypes.number,\n  handlerShape: PropTypes.oneOf([\"squared\", \"rounded\"]),\n  handlerColor: PropTypes.string,\n  handlerBorderColor: PropTypes.string,\n  handlerActiveColor: PropTypes.string,\n  handlerStyle: PropTypes.object,\n  fontSize: PropTypes.number,\n  fontColor: PropTypes.string,\n  markers: PropTypes.number,\n  markersSize: PropTypes.number,\n  showMarkers: PropTypes.oneOf([true, false, \"hidden\", \"active\", \"inactive\"]),\n  grabCursor: PropTypes.bool,\n  vertical: PropTypes.bool,\n  invertMarkers: PropTypes.bool,\n  style: PropTypes.object,\n};\n\nexport default Slider;","/home/naman/Desktop/sslPortal/webapp/src/components/Chat/messageBox.js",["721","722","723","724","725","726","727","728","729"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  HStack,\n  Box,\n  Avatar,\n  Text,\n  Spacer,\n  IconButton,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  VStack,\n  Divider,\n  Flex,\n} from \"@chakra-ui/react\";\nimport { IoEllipsisHorizontal } from \"react-icons/io5\";\nimport { FiEdit, FiSearch } from \"react-icons/fi\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { RiEqualizerLine } from \"react-icons/ri\";\nimport { BiSend } from \"react-icons/bi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateMessages } from \"../../state/reducers/chatReducer\";\nimport { getTimestamp } from \"../../hooks/utility\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"../../styles/scrollBar.css\";\n\nconst MessageBox = ({ isOpen, onClose }) => {\n  const { guestList, username, roomName, alias, socket } = useSelector(\n    (state) => state.socketState\n  );\n  const { messages } = useSelector((state) => state.chatState);\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(\"\");\n  const scrollbar = useRef(null);\n\n  useEffect(() => {\n    if (scrollbar.current) scrollbar.current.scrollToBottom();\n  }, [messages]);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n\n  const sendMessage = () => {\n    if (value === \"\") return;\n    const message = {\n      content: value,\n      username: alias,\n      time: getTimestamp(),\n    };\n    dispatch(updateMessages([...messages, message]));\n    socket.emit(\n      \"send_message\",\n      JSON.stringify({\n        roomName,\n        messages: [...messages, message],\n      })\n    );\n    setValue(\"\");\n  };\n\n  const UserAvatar = (restProps) => {\n    return <Avatar size=\"sm\" backgroundColor=\"black\" color=\"#3965C3\" />;\n  };\n\n  const MessageButton = (restProps) => {\n    return (\n      <IconButton\n        variant=\"unstyled\"\n        border=\"none\"\n        size=\"xs\"\n        _focus={{ border: \"none\" }}\n        {...restProps}\n      />\n    );\n  };\n\n  return (\n    <Modal\n      onClose={onClose}\n      isOpen={isOpen}\n      motionPreset=\"slideInBottom\"\n      size=\"xs\"\n      trapFocus={false}\n      lockFocusAcrossFrames={false}\n    >\n      <ModalContent\n        top=\"10rem\"\n        left=\"25rem\"\n        border=\"0.2px solid #3965C650\"\n        borderRadius=\"15px\"\n      >\n        <ModalBody color=\"#3965C6\" p={2}>\n          <HStack spacing={0} mb={2}>\n            <Text>Chat Box</Text>\n            <Spacer />\n            <MessageButton icon={<FiSearch size={15} />} />\n            <MessageButton icon={<IoEllipsisHorizontal size={15} />} />\n          </HStack>\n          {/* <InputGroup bgColor=\"#3965C610\" borderRadius=\"5px\" my={4}>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              color=\"#3965C645\"\n              children={<FiSearch size={20} />}\n            />\n            <Input\n              placeholder=\"Search Messages\"\n              color=\"#3965C645\"\n              _focus={{ border: \"none\" }}\n            />\n            <InputRightElement\n              pointerEvents=\"none\"\n              color=\"#3965C645\"\n              children={<RiEqualizerLine size={20} />}\n            />\n          </InputGroup>\n          {console.log(guestList)}\n          <VStack\n            divider={<StackDivider h=\"1px\" bgColor=\"#3965C6\" border=\"none\" />}\n            mb=\"10px\"\n          >\n            {guestList.map((user) => {\n              if (user.username === username) return;\n              return (\n                <HStack w=\"100%\" key={user.username} spacing={4}>\n                  <UserAvatar name={user.alias} />\n                  <Text>{user.alias}</Text>\n                </HStack>\n              );\n            })}\n          </VStack> */}\n          <Scrollbars\n            ref={scrollbar}\n            style={{ width: \"100%\", height: \"20rem\" }}\n            renderThumbVertical={(props) => (\n              <div {...props} className=\"thumb-vertical-messageBox\" />\n            )}\n          >\n            <VStack spacing={2} align=\"start\" justify=\"end\">\n              {messages.map((message, index) => (\n                <Box\n                  maxW=\"85%\"\n                  key={index}\n                  bgColor=\"#3965C610\"\n                  color=\"#3965C690\"\n                  py={2}\n                  px={4}\n                  borderRadius=\"5px\"\n                  w=\"fit-content\"\n                  wordBreak=\"break-word\"\n                  alignSelf={message.username === alias ? \"end\" : \"start\"}\n                >\n                  <Text fontSize=\"sm\" fontWeight=\"bold\">\n                    {message.username}\n                  </Text>\n                  <Text fontSize=\"sm\">{message.content}</Text>\n                  <Text align=\"right\" fontSize=\"0.65rem\" fontWeight=\"bold\">\n                    {message.time}\n                  </Text>\n                </Box>\n              ))}\n            </VStack>\n          </Scrollbars>\n          <Divider h=\"1px\" border=\"none\" bgColor=\"#474747\" my={2} />\n          <Text color=\"#47474770\" fontWeight=\"bold\">\n            To Everyone:\n          </Text>\n          <InputGroup border=\"none\" py={0} mb={3}>\n            <Input\n              placeholder=\"Type your message here\"\n              value={value}\n              pl={0}\n              color=\"#474747\"\n              border=\"none\"\n              _focus={{ border: \"none\" }}\n              onChange={(e) => handleChange(e)}\n              onKeyDown={(e) => handleKeyDown(e)}\n            />\n            <InputRightElement\n              color=\"#C4C4C4\"\n              children={\n                <IconButton\n                  variant=\"unstyled\"\n                  p={0}\n                  _focus={{ border: \"none\" }}\n                  icon={<BiSend size={25} />}\n                  onClick={sendMessage}\n                />\n              }\n            />\n          </InputGroup>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default MessageBox;\n","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/optionsPanel.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/Color/optionsPanel.js",["730","731","732","733","734","735","736","737","738","739"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, HStack, SimpleGrid } from \"@chakra-ui/react\";\nimport { brandColors } from \"../../styles/brandPalette\";\nimport ToolbarBorderBox from \"../ViewerToolbar/borderBox\";\nimport ToolbarBorderBoxInner from \"../ViewerToolbar/borderBoxInner\";\nimport { Fade, ScaleFade, Slide, SlideFade } from \"@chakra-ui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateColor } from \"../../state/reducers/fabricOverlayReducer\";\nimport ColorBox from \"../colorBox\";\n\nconst ColorOptionsPanel = () => {\n  // if (!isVisible) return null;\n  const { color } = useSelector((state) => state.fabricOverlayState);\n  const { isActiveTool, isObjectSelected } = useSelector(\n    (state) => state.colorState\n  );\n  const isVisible = isObjectSelected || isActiveTool;\n  const dispatch = useDispatch();\n\n  return (\n    <SimpleGrid columns={4} spacingY={1} spacingX={1} py={2}>\n      {brandColors.map((brandColor) => (\n        <ColorBox\n          key={brandColor.label}\n          border={color.label === brandColor.label ? \"1px solid black\" : \"none\"}\n          backgroundColor={brandColor.hex}\n          onClick={() => dispatch(updateColor(brandColor))}\n        />\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default ColorOptionsPanel;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/picker.js",["740","741","742","743","744","745","746"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Divider, IconButton, Text, HStack } from \"@chakra-ui/react\";\nimport { BsCircle, BsSquare } from \"react-icons/bs\";\nimport { useWindowHeight } from \"@react-hook/window-size\";\nimport { isMobile, isTablet } from \"react-device-detect\";\nimport { useSelector } from \"react-redux\";\nimport TypeButton from \"../typeButton\";\n\nexport const shapes = [\n  { name: \"rect\", icon: <BsSquare /> },\n  { name: \"circle\", icon: <BsCircle /> },\n];\n\nconst ShapePicker = ({ handleShapeSelect }) => {\n  const { activeShape, activeTool } = useSelector((state) => state.shapeState);\n  const { color } = useSelector((state) => state.fabricOverlayState);\n  const windowHeight = useWindowHeight();\n  let btnSize = \"lg\";\n\n  if (windowHeight <= 645) {\n    btnSize = \"md\";\n  }\n  if (isMobile && !isTablet) {\n    btnSize = \"md\";\n  }\n\n  return (\n    <HStack>\n      {shapes.map((shape) => (\n        <TypeButton\n          key={shape.name}\n          icon={shape.icon}\n          backgroundColor={activeTool === shape.name ? \"#8fa8e1\" : \"#dddddd\"}\n          color={activeTool === shape.name ? \"black\" : \"#3963c3\"}\n          onClick={() => handleShapeSelect(shape)}\n          // variant={\n          //   activeShape && activeShape.name === shape.name ? \"solid\" : \"ghost\"\n          // }\n        />\n      ))}\n    </HStack>\n  );\n};\n\nShapePicker.propTypes = {\n  handleShapeSelect: PropTypes.func,\n};\n\nexport default ShapePicker;\n","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/borderBoxInner.js",["747"],"import React from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nconst ToolbarBorderBoxInner = ({ ...restProps }) => {\n  const bg = useColorModeValue(\"white\", \"gray.700\");\n\n  return (\n    <Box\n      as=\"button\"\n      borderRadius={25}\n      borderWidth=\"2px\"\n      _focus={{\n        // outline: `lightgray auto 1px`,\n        outline: `none`,\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default ToolbarBorderBoxInner;\n","/home/naman/Desktop/sslPortal/webapp/src/hooks/use-hex-rgb.js",["748","749","750","751","752"],"const useHexRGB = () => {\n  // All functions pulled from\n  // https://css-tricks.com/converting-color-spaces-in-javascript/\n\n  const hexToRGB = (h) => {\n    if (!h) return;\n    let r = 0,\n      g = 0,\n      b = 0;\n\n    // 3 digits\n    if (h.length == 4) {\n      r = \"0x\" + h[1] + h[1];\n      g = \"0x\" + h[2] + h[2];\n      b = \"0x\" + h[3] + h[3];\n\n      // 6 digits\n    } else if (h.length == 7) {\n      r = \"0x\" + h[1] + h[2];\n      g = \"0x\" + h[3] + h[4];\n      b = \"0x\" + h[5] + h[6];\n    }\n\n    return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\n  };\n\n  const hexToRGBA = (h, opacity = 1) => {\n    let rgb = hexToRGB(h);\n    if (!rgb) return;\n    if (opacity < 0 || opacity > 1) {\n      console.error(\"useHexRGB: opacity value must be between 0 and 1\");\n      return;\n    }\n    let rgba = rgb.replace(\"rgb\", \"rgba\");\n    const indexPos = rgba.lastIndexOf(\")\");\n    return `${rgba.slice(0, indexPos)},${opacity}${rgba.slice(indexPos)}`;\n  };\n\n  const RGBToHex = (r, g, b) => {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n\n    if (r.length == 1) r = \"0\" + r;\n    if (g.length == 1) g = \"0\" + g;\n    if (b.length == 1) b = \"0\" + b;\n\n    return \"#\" + r + g + b;\n  };\n\n  return {\n    hexToRGB,\n    hexToRGBA,\n    RGBToHex,\n  };\n};\n\nexport default useHexRGB;\n","/home/naman/Desktop/sslPortal/webapp/src/components/ViewerToolbar/borderBox.js",[],"/home/naman/Desktop/sslPortal/webapp/src/services/images.js",["753"],"import iceCreamSoda from \"../images/ice-cream-soda.jpg\";\n\nexport const Images = [\n//   {\n//     id: 2,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"32893\",\n//         Width: \"46000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/cmu-1-jp2k-33005/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 3,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"2967\",\n//         Width: \"2220\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/cmu-1-small-region/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 4,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"32914\",\n//         Width: \"46000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/cmu-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 5,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"30462\",\n//         Width: \"78000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 6,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"45402\",\n//         Width: \"66000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/cmu-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 7,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"17497\",\n//         Width: \"15374\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/jp2k-33003-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 8,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"47067\",\n//         Width: \"32671\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/aperio/jp2k-33003-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 9,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"32914\",\n//         Width: \"46000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/generic-tiff/cmu-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 10,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"76288\",\n//         Width: \"102400\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu-vms/cmu-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 11,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"68352\",\n//         Width: \"159744\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu-vms/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 12,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"68352\",\n//         Width: \"159744\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu-vms/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 13,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"101888\",\n//         Width: \"143360\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu-vms/cmu-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 14,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"101888\",\n//         Width: \"143360\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu-vms/cmu-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 15,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"38144\",\n//         Width: \"51200\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/cmu-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 16,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"33792\",\n//         Width: \"79872\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 17,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"50688\",\n//         Width: \"71680\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/cmu-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 18,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"110592\",\n//         Width: \"122880\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/os-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 19,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"73728\",\n//         Width: \"126976\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/os-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 20,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"77824\",\n//         Width: \"122880\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/hamamatsu/os-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 21,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"38432\",\n//         Width: \"36832\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/leica/leica-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 22,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"139227\",\n//         Width: \"44957\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/leica/leica-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 23,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"27712\",\n//         Width: \"40000\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/trestle/cmu-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 24,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"25408\",\n//         Width: \"61504\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/trestle/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 25,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"25408\",\n//         Width: \"61504\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/trestle/cmu-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 26,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"38080\",\n//         Width: \"56896\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/trestle/cmu-3/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 27,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"93951\",\n//         Width: \"105813\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/ventana/os-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 28,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"510\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"76349\",\n//         Width: \"114943\",\n//       },\n//       Url:\n//         \"https://openslide-demo.s3.dualstack.us-east-1.amazonaws.com/ventana/os-2/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 29,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"254\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"14506\",\n//         Width: \"14593\",\n//       },\n//       Url:\n//         \"https://med-ai-data.s3.amazonaws.com/b_cell_nh/ng-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 30,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"254\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"14853\",\n//         Width: \"23298\",\n//       },\n//       Url:\n//         \"https://med-ai-data.s3.amazonaws.com/b_cell_nh/g-1/slide_files/\",\n//     },\n//   },\n//   {\n//     id: 31,\n//     Image: {\n//       Format: \"jpeg\",\n//       Overlap: \"1\",\n//       TileSize: \"254\",\n//       xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n//       Size: {\n//         Height: \"14398\",\n//         Width: \"6242\",\n//       },\n//       Url:\n//         \"https://med-ai-data.s3.amazonaws.com/burkitt/b-2/slide_files/\",\n//     },\n//   },\n  {\n    id: 1,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"14853\",\n        Width: \"23298\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/b_cell_nh/g-1/slide_files/\",\n    },\n  },\n  {\n    id: 2,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"34969\",\n        Width: \"32765\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/b_cell_nh/g-2/slide_files/\",\n    },\n  },\n  {\n    id: 3,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"14506\",\n        Width: \"14593\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/b_cell_nh/ng-1/slide_files/\",\n    },\n  },\n  {\n    id: 4,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"31350\",\n        Width: \"18724\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/burkitt/b-1/slide_files/\",\n    },\n  },\n  {\n    id: 5,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"14398\",\n        Width: \"6242\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/burkitt/b-2/slide_files/\",\n    },\n  },\n  {\n    id: 6,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"17406\",\n        Width: \"13894\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/f-1/slide_files/\",\n    },\n  },\n  {\n    id: 7,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"8093\",\n        Width: \"5465\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/t-1/slide_files/\",\n    },\n  },\n  {\n    id: 8,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"23445\",\n        Width: \"25849\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/nh-bone-1/slide_files/\",\n    },\n  },\n  {\n    id: 9,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"21729\",\n        Width: \"25788\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/nh-bone-2/slide_files/\",\n    },\n  },\n  {\n    id: 10,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"21775\",\n        Width: \"24741\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/nh-bone-3/slide_files/\",\n    },\n  },\n  {\n    id: 11,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"21775\",\n        Width: \"24741\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/nh-bone-4/slide_files/\",\n    },\n  },\n  {\n    id: 12,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"26041\",\n        Width: \"14553\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/bm-1/slide_files/\",\n    },\n  },\n  {\n    id: 13,\n    Image: {\n      Format: \"jpeg\",\n      Overlap: \"1\",\n      TileSize: \"254\",\n      xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n      Size: {\n        Height: \"34908\",\n        Width: \"22936\",\n      },\n      Url:\n        \"https://med-ai-data.s3.amazonaws.com/lymphoma/bc-gc-1/slide_files/\",\n    },\n  },\n];\n","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/viewer.js",["754","755","756","757"],"import React, { useEffect, useState } from \"react\";\nimport { useOpenSeadragon, OpenSeadragon } from \"use-open-seadragon\";\nimport { fabric, initFabricJSOverlay } from \"openseadragon-fabricjs-overlay\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOverlay } from \"../../state/reducers/fabricOverlayReducer\";\nimport { isBrowser } from \"react-device-detect\";\nimport { Box } from \"@chakra-ui/react\";\nimport ViewerControls from \"./controls\";\nimport PropTypes from \"prop-types\";\n\nconst minZoomLevel = isBrowser ? 0.4 : 0.8;\n\nconst osdOptions = {\n  constrainDuringPan: isBrowser ? true : false,\n  debugMode: false,\n  gestureSettingsMouse: {\n    clickToZoom: true,\n    flickEnabled: true,\n    pinchToZoom: true,\n    scrollToZoom: true,\n  },\n  gestureSettingsTouch: {\n    clickToZoom: true,\n    flickEnabled: true,\n    pinchToZoom: true,\n    scrollToZoom: true,\n  },\n  showNavigator: true,\n  showNavigationControl: false,\n  navigatorPosition: \"BOTTOM_RIGHT\",\n  springStiffness: isBrowser ? 20 : 10,\n  viewportMargin: {\n    left: 100,\n    top: 100,\n    right: 100,\n    bottom: 100,\n  },\n  visibilityRatio: isBrowser ? 1 : 0.5,\n  zoomPerClick: 1.0,\n};\n\nconst Viewer = ({ viewerId, tile }) => {\n  const dispatch = useDispatch();\n  const { isMultiView } = useSelector((state) => state.viewerState);\n  const [viewer, setViewer] = useState(null);\n\n  // Customize Fabric selection handles\n  fabric.Object.prototype.set({\n    borderColor: \"#22a2f8\",\n    borderScaleFactor: 2, // selection stroke width\n    cornerColor: \"white\",\n    cornerSize: 10,\n    transparentCorners: false,\n  });\n\n  // Initialize our OpenSeadragon instance\n  // const [ref, { viewer }] = useOpenSeadragon(tile, {\n  //   ...osdOptions,\n  //   id: viewerId,\n  // });\n\n  useEffect(() => {\n    viewer && viewer.destroy();\n    //Initialize OpenSeadragon instance and set to viewer\n    setViewer(\n      OpenSeadragon({ ...osdOptions, tileSources: tile, id: viewerId })\n    );\n    initFabricJSOverlay(OpenSeadragon, fabric);\n    return () => {\n      viewer && viewer.destroy();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!viewer) return;\n\n    // Create the fabric.js overlay, and set it on a sharable context\n    // viewer.open(tile.source);\n    dispatch(\n      updateOverlay({\n        id: viewerId,\n        fabricOverlay: viewer.fabricjsOverlay({ scale: 1 }),\n        viewer: viewer,\n      })\n    );\n  }, [dispatch, viewer]);\n\n  return (\n    <Box\n      id={viewerId}\n      border={\n        isMultiView && viewerId === \"viewer1\" ? \"2px solid #68D761\" : \"none\"\n      }\n      position=\"relative\"\n      w=\"100%\"\n    >\n      {isBrowser && <ViewerControls viewerId={viewerId} />}\n    </Box>\n  );\n};\n\nViewer.propTypes = {\n  tile: PropTypes.object,\n  name: PropTypes.string,\n};\n\nexport default Viewer;\n","/home/naman/Desktop/sslPortal/webapp/src/components/AdjustmentBar/typeTools.js",["758","759"],"import React from \"react\";\nimport { Box, Text, HStack } from \"@chakra-ui/react\";\nimport Draw from \"../Draw/draw\";\nimport Square from \"../Shape/square\";\nimport TypeText from \"../Text/text\";\nimport ShareLink from \"../Share/shareLink\";\nimport Line from \"../Shape/line\";\nimport Arrow from \"../Shape/arrow\";\nimport Circle from \"../Shape/circle\";\nimport RemoveObject from \"../removeComponents\";\nimport { useSelector } from \"react-redux\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\n\nconst TypeTools = ({ viewerId }) => {\n  const { fabricOverlay } = useSelector(\n    (state) => state.fabricOverlayState.viewerWindow[viewerId]\n  );\n\n  fabric.IText.prototype.onKeyDown = (e) => {\n    if (e.ctrlKey === true && e.key === \"Enter\") {\n      fabricOverlay.fabricCanvas().discardActiveObject();\n    }\n  };\n\n  return (\n    <Box w=\"100%\">\n      <Text borderY=\"1px solid #ffffff50\">Type</Text>\n      <HStack px={1} py={2}>\n        <Line viewerId={viewerId} />\n        <Square viewerId={viewerId} />\n        <Circle viewerId={viewerId} />\n        <Draw viewerId={viewerId} />\n        <TypeText viewerId={viewerId} />\n        <RemoveObject viewerId={viewerId} />\n      </HStack>\n    </Box>\n  );\n};\n\nexport default TypeTools;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Palette/algorithm.js",["760","761","762","763","764","765","766","767","768","769","770"],"import React, { useEffect, useState } from \"react\";\nimport { IoIosColorPalette } from \"react-icons/io\";\nimport ToolbarButton from \"../ViewerToolbar/button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { updateActiveDrawerTool } from \"../../state/reducers/drawerReducer\";\nimport { MenuAltButton, MenuAltItem } from \"../altButton\";\nimport { TriangleDownIcon } from \"@chakra-ui/icons\";\nimport button from \"../ViewerToolbar/button\";\n\nconst Algorithm = () => {\n  const { activeDrawerTool } = useSelector((state) => state.drawerState);\n  const isActive = activeDrawerTool === \"Algorithm\";\n  const dispatch = useDispatch();\n\n  const handleBasicPalette = () => {\n    dispatch(updateActiveDrawerTool({ tool: \"Algorithm\" }));\n  };\n\n  return (\n    <Menu>\n      <MenuAltButton label=\"Algorithm\" />\n      <MenuList\n        mt={-2}\n        p={0}\n        py={2}\n        backgroundColor=\"#EAEAEA\"\n        fontSize=\"sm\"\n        zIndex=\"2\"\n        minW={0}\n        color=\"#3965C6\"\n      >\n        <MenuAltItem label=\"Basic Palette\" onClick={handleBasicPalette} />\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default Algorithm;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Shape/circle.js",["771","772","773","774","775","776","777","778"],"import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fabric } from \"openseadragon-fabricjs-overlay\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\nimport useFabricHelpers from \"../../hooks/use-fabric-helpers\";\nimport {\n  updateActive,\n  updateShapeColor,\n  updateShape,\n  updateActiveShape,\n} from \"../../state/reducers/shapeReducer\";\nimport { fonts } from \"../Text/fontPicker\";\nimport { updateActivityFeed } from \"../../state/reducers/fabricOverlayReducer\";\n\nimport { getCanvasImage, getFontSize, getTimestamp } from \"../../hooks/utility\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport TypeButton from \"../typeButton\";\nimport { BsCircle } from \"react-icons/bs\";\n\nconst Circle = ({ viewerId }) => {\n  const dispatch = useDispatch();\n  const { color, viewerWindow, activeTool } = useSelector(\n    (state) => state.fabricOverlayState\n  );\n  const { username, roomName, alias, socket } = useSelector(\n    (state) => state.socketState\n  );\n\n  const { fabricOverlay, viewer, zoomValue, activityFeed } =\n    viewerWindow[viewerId];\n\n  const { deselectAll } = useFabricHelpers();\n  const isActive = activeTool === \"Circle\";\n\n  const [shape, setShape] = useState(null);\n  const [textbox, setTextbox] = useState(null);\n\n  const myState = useSelector((state) => state.shapeState);\n  const myStateRef = useRef(myState);\n  const setMyState = (action, data) => {\n    myStateRef.current = { ...myState, ...data };\n    dispatch(action(data));\n  };\n\n  const screenSize = useMediaQuery([\n    \"(max-width: 1280px)\",\n    \"(max-width: 1440px)\",\n    \"(max-width: 1920px)\",\n    \"(max-width: 2560px)\",\n  ]);\n\n  /**\n   * Handle primary tool change\n   */\n  useEffect(() => {\n    setMyState(updateActive, { activeShape: null, isActive: isActive });\n  }, [isActive]);\n\n  /**\n   * Handle color change\n   */\n  useEffect(() => {\n    setMyState(updateShapeColor, { color: color });\n  }, [color.hex]);\n\n  /**\n   * Handle an individual shape being selected\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    if (isActive) {\n      canvas.defaultCursor = \"crosshair\";\n\n      // Disable OSD mouseclicks\n      viewer.setMouseNavEnabled(false);\n      viewer.outerTracker.setTracking(false);\n\n      // Deselect all Fabric Canvas objects\n      deselectAll(canvas);\n    } else {\n      canvas.defaultCursor = \"auto\";\n\n      // Enable OSD mouseclicks\n      viewer.setMouseNavEnabled(true);\n      viewer.outerTracker.setTracking(true);\n    }\n  }, [isActive]);\n\n  /**\n   * Add shapes and handle mouse events\n   */\n  useEffect(() => {\n    if (!fabricOverlay) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    /**\n     * Mouse down\n     */\n    function handleMouseDown(options) {\n      if (options.target || !myStateRef.current.isActive) {\n        return;\n      }\n\n      // Save starting mouse down coordinates\n      let pointer = canvas.getPointer(options.e);\n      let origX = pointer.x;\n      let origY = pointer.y;\n\n      // Create new Shape instance\n      let newShape = null;\n      const shapeOptions = {\n        color: myStateRef.current.color.hex,\n        left: origX,\n        top: origY,\n        width: 0,\n        height: 0,\n      };\n\n      // Stroke fill\n      let fillProps = {\n        fill: \"rgba(0,0,0,0)\",\n        stroke: shapeOptions.color,\n        strokeWidth: 3 / (zoomValue / 40),\n      };\n\n      /**\n       * Circle\n       */\n      newShape = new fabric.Ellipse({\n        ...shapeOptions,\n        ...fillProps,\n        originX: \"left\",\n        originY: \"top\",\n        rx: pointer.x - origX,\n        ry: pointer.y - origY,\n        angle: 0,\n      });\n      fabricOverlay.fabricCanvas().add(newShape);\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: newShape,\n        isMouseDown: true,\n        origX,\n        origY,\n      });\n\n      // Add new shape to the canvas\n      //newShape && fabricOverlay.fabricCanvas().add(newShape);\n    }\n\n    /**\n     * Mouse move\n     */\n    function handleMouseMove(options) {\n      if (\n        //options.target ||\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n      const c = myStateRef.current;\n\n      // Dynamically drag size element to the canvas\n      const pointer = fabricOverlay.fabricCanvas().getPointer(options.e);\n\n      let rx = Math.abs(c.origX - pointer.x) / 2;\n      let ry = Math.abs(c.origY - pointer.y) / 2;\n      if (rx > c.currentDragShape.strokeWidth) {\n        rx -= c.currentDragShape.strokeWidth / 2;\n      }\n      if (ry > c.currentDragShape.strokeWidth) {\n        ry -= c.currentDragShape.strokeWidth / 2;\n      }\n      c.currentDragShape.set({ rx, ry });\n\n      if (c.origX > pointer.x) {\n        c.currentDragShape.set({ originX: \"right\" });\n      } else {\n        c.currentDragShape.set({ originX: \"left\" });\n      }\n      if (c.origY > pointer.y) {\n        c.currentDragShape.set({ originY: \"bottom\" });\n      } else {\n        c.currentDragShape.set({ originY: \"top\" });\n      }\n\n      fabricOverlay.fabricCanvas().renderAll();\n    }\n\n    const fontSize = getFontSize(screenSize, zoomValue);\n\n    // Create new Textbox instance and add it to canvas\n    const createTextbox = ({ left, top, height }) => {\n      const tbox = new fabric.IText(\"\", {\n        left: left,\n        top: top + height + 2,\n        fontFamily: fonts[0].fontFamily,\n        fontSize: fontSize,\n        fontWeight: \"bold\",\n        selectionBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      });\n\n      fabricOverlay.fabricCanvas().add(tbox);\n      canvas.setActiveObject(tbox);\n      tbox.enterEditing();\n    };\n\n    /**\n     * Mouse up\n     */\n    function handleMouseUp(options) {\n      if (\n        !myStateRef.current.isActive ||\n        !myStateRef.current.currentDragShape\n      ) {\n        return;\n      }\n\n      fabricOverlay\n        .fabricCanvas()\n        .setActiveObject(myStateRef.current.currentDragShape);\n\n      fabricOverlay.fabricCanvas().renderAll();\n\n      const currShape = myStateRef.current.currentDragShape;\n\n      setShape(myStateRef.current.currentDragShape);\n\n      let [left, top, height, width] = [\n        currShape.left,\n        currShape.top,\n        currShape.height,\n        currShape.width,\n      ];\n\n      if (currShape.type === \"ellipse\") {\n        if (currShape.originX === \"right\") left -= width;\n        if (currShape.originY === \"bottom\") height = 0;\n      }\n\n      createTextbox({\n        left: left,\n        top: top,\n        height: height,\n      });\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n        currentDragShape: null,\n        isMouseDown: false,\n      });\n    }\n\n    function handleSelectionCleared(options) {\n      // hide text when no object is selected\n      if (options.deselected && options.deselected[0].type === \"group\")\n        options.deselected[0].item(1).set({ visible: false });\n\n      // set textbox when deselected\n      if (options.deselected && options.deselected[0].type === \"i-text\")\n        setTextbox(options.deselected[0]);\n\n      if (!myStateRef.current.isActive) return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    function handleSelected(options) {\n      // make text visible on selected object\n      if (options && options.target.type === \"group\") {\n        options.target.item(1).set({ visible: true });\n      }\n\n      // hide text on previous selected object (or deselected object)\n      if (options.deselected && options.deselected[0].type === \"group\") {\n        options.deselected[0].item(1).set({ visible: false });\n      }\n\n      if (!myStateRef.current.isActive) return;\n\n      // Filter out any non-shape selections\n      const optionsTargetType = options.target.get(\"type\");\n      if (\"circle\" === optionsTargetType) return;\n\n      setMyState(updateShape, {\n        ...myStateRef.current,\n      });\n    }\n\n    // Add click handlers\n    canvas.on(\"mouse:down\", handleMouseDown);\n    canvas.on(\"mouse:move\", handleMouseMove);\n    canvas.on(\"mouse:up\", handleMouseUp);\n    canvas.on(\"selection:created\", handleSelected);\n    canvas.on(\"selection:updated\", handleSelected);\n    canvas.on(\"selection:cleared\", handleSelectionCleared);\n\n    // Remove handler\n    return function clearFabricEventHandlers() {\n      canvas.off(\"mouse:down\", handleMouseDown);\n      canvas.off(\"mouse:move\", handleMouseMove);\n      canvas.off(\"mouse:up\", handleMouseUp);\n      canvas.off(\"selection:created\", handleSelected);\n      canvas.off(\"selection:updated\", handleSelected);\n      canvas.off(\"selection:cleared\", handleSelectionCleared);\n    };\n  }, [isActive]);\n\n  // group shape and textbox together\n  // first remove both from canvas then group them and then add group to canvas\n  useEffect(async () => {\n    if (!shape || !textbox) return;\n    const canvas = fabricOverlay.fabricCanvas();\n\n    let message = {\n      username: alias,\n      color: shape.stroke,\n      action: \"added\",\n      text: \"\",\n      timeStamp: getTimestamp(),\n      type: shape.type,\n      object: shape,\n      image: null,\n    };\n\n    if (textbox.text !== \"\") {\n      canvas.remove(shape);\n      canvas.remove(textbox);\n      textbox.set({\n        visible: false,\n      });\n      const group = new fabric.Group([shape, textbox], { isExist: true });\n      canvas.add(group);\n      message.text = textbox.text;\n      message.object = group;\n    } else {\n      shape.set({ isExist: true });\n    }\n\n    message.image = await getCanvasImage(viewerId);\n\n    setShape(null);\n    setTextbox(null);\n\n    dispatch(\n      updateActivityFeed({ id: viewerId, feed: [...activityFeed, message] })\n    );\n\n    // send annotation\n    socket.emit(\n      \"send_annotations\",\n      JSON.stringify({\n        roomName,\n        username,\n        content: canvas,\n        feed: [...activityFeed, message],\n      })\n    );\n  }, [textbox]);\n\n  const handleClick = () => {\n    dispatch(updateTool({ tool: \"Circle\" }));\n  };\n  return (\n    <TypeButton\n      icon={<BsCircle />}\n      backgroundColor={isActive ? \"#8fa8e1\" : \"#dddddd\"}\n      color={isActive ? \"black\" : \"#3963c3\"}\n      label=\"Circle\"\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default Circle;\n","/home/naman/Desktop/sslPortal/webapp/src/components/MultiView/multiView.js",[],"/home/naman/Desktop/sslPortal/webapp/src/services/slides.js",[],"/home/naman/Desktop/sslPortal/webapp/src/components/colorBox.js",["779"],"import React from \"react\";\nimport { Button, Box } from \"@chakra-ui/react\";\n\nconst ColorBox = (restProps) => {\n  return <Box as=\"button\" w={4} h={4} borderRadius=\"4px\" {...restProps} />;\n};\n\nexport default ColorBox;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/controls.js",["780","781","782","783","784","785","786","787","788"],"import { React, useState, useEffect } from \"react\";\nimport { useZoom, OpenSeadragon } from \"use-open-seadragon\";\nimport \"./zoom-levels\";\nimport \"./openseadragon-scalebar\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  HStack,\n  IconButton,\n  Portal,\n  Tooltip,\n  VStack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FiZoomIn, FiZoomOut } from \"react-icons/fi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ZoomSlider from \"../ZoomSlider/slider\";\nimport { updateCurrentViewer } from \"../../state/reducers/viewerReducer\";\nimport { updateTool } from \"../../state/reducers/fabricOverlayReducer\";\n\nconst ViewerControls = ({ viewerId }) => {\n  const { viewerWindow } = useSelector((state) => state.fabricOverlayState);\n  const { currentViewer, isMultiView } = useSelector(\n    (state) => state.viewerState\n  );\n  const { viewer } = viewerWindow[viewerId];\n  const dispatch = useDispatch();\n  const [scalebar, setScalebar] = useState(null);\n\n  // const buttonSize = useButtonSize();\n\n  // viewer = new OpenSeadragon({id: \"viewer1\"});\n\n  const handleZoomIn = (e) => {\n    try {\n      if (viewer.viewport.getMaxZoom() > viewer.viewport.getZoom()) {\n        viewer.viewport.zoomBy(1.0 / 0.7);\n      }\n    } catch (e) {\n      console.error(\"Error handling Zoom In button click\", e);\n    }\n  };\n\n  const handleZoomOut = (e) => {\n    try {\n      if (viewer.viewport.getMinZoom() < viewer.viewport.getZoom()) {\n        viewer.viewport.zoomBy(0.7);\n      }\n    } catch (e) {\n      console.error(\"Error handling Zoom Out button click\", e);\n    }\n  };\n\n  useEffect(() => {\n    if (viewer) {\n      const scalebarInit = viewer.scalebar({\n        type: 1,\n        pixelsPerMeter: 250000,\n        minWidth: \"75px\",\n        maxWidth: \"75px\",\n        location: 4,\n        xOffset: 5,\n        yOffset: 10,\n        stayInsideImage: true,\n        color: \"white\",\n        fontColor: \"white\",\n        backgroundColor: \"black\",\n        fontSize: \"14px\",\n        barThickness: 2,\n        stayInsideImage: false,\n      });\n\n      setScalebar(scalebarInit);\n    }\n  }, [viewer]);\n\n  const ZoomButton = (restProps) => {\n    return (\n      <IconButton\n        size=\"sm\"\n        backgroundColor=\"white\"\n        boxShadow=\"lg\"\n        _focus={{ border: \"none\" }}\n        {...restProps}\n      />\n    );\n  };\n\n  const handleSelectSlide = () => {\n    if (currentViewer === viewerId) return;\n    // const { fabricOverlay } = viewerWindow[currentViewer];\n    // fabricOverlay.fabricCanvas().discardActiveObject();\n    // fabricOverlay.fabricCanvas().defaultCursor = \"default\";\n    // fabricOverlay.fabricCanvas().hoverCursor = \"move\";\n    // dispatch(updateTool({ tool: \"Move\" }));\n    dispatch(updateCurrentViewer(viewerId));\n  };\n\n  return (\n    <>\n      {isMultiView && (\n        <Box position=\"absolute\" left=\"20px\" top=\"20px\" zIndex=\"1\">\n          <HStack color=\"blue.400\" fontSize={10}>\n            <Text as=\"button\">View Details</Text>\n            <Text onClick={handleSelectSlide} as=\"button\">\n              Select this slide\n            </Text>\n          </HStack>\n          <Text fontWeight=\"bold\">Slide {viewerId.slice(-1)}: Name/info</Text>\n        </Box>\n      )}\n      <Box position=\"absolute\" right=\"20px\" top=\"20px\" zIndex=\"1\">\n        {/* <ButtonGroup spacing=\"3\" size=\"lg\">\n        <Tooltip label=\"Zoom in\" aria-label=\"Zoom in\">\n          <IconButton\n            icon={<FiZoomIn />}\n            onClick={handleZoomIn}\n            size=\"md\"\n            border=\"1px solid gray\"\n            borderRadius=\"25px\"\n          />\n        </Tooltip>\n        <Tooltip label=\"Zoom out\" aria-label=\"Zoom out\">\n          <IconButton\n            icon={<FiZoomOut />}\n            onClick={handleZoomOut}\n            size=\"md\"\n            border=\"1px solid gray\"\n            borderRadius=\"25px\"\n          />\n        </Tooltip>\n         {/* <Tooltip label=\"Undo\" aria-label=\"Undo\">\n            <IconButton\n              icon={<RiArrowGoBackFill />}\n              aria-label=\"Undo\"\n              size={buttonSize}\n              disabled\n            />\n          </Tooltip>\n          <Tooltip label=\"Redo\" aria-label=\"Redo\">\n            <IconButton\n              icon={<RiArrowGoForwardLine />}\n              aria-label=\"Redo\"\n              size={buttonSize}\n              disabled\n            />\n          </Tooltip>  \n      </ButtonGroup> */}\n        <VStack\n          w=\"fit-content\"\n          backgroundColor=\"white\"\n          border=\"1px solid #3965C6\"\n          borderRadius=\"5px\"\n          p={1}\n        >\n          <ZoomButton\n            icon={<FiZoomIn color=\"#3965C6\" size={20} />}\n            border=\"1px solid #3965C6\"\n            onClick={handleZoomIn}\n          />\n          <ZoomSlider viewerId={viewerId} />\n          <ZoomButton\n            icon={<FiZoomOut color=\"#3965C6\" size={20} />}\n            border=\"1px solid #3965C6\"\n            onClick={handleZoomOut}\n          />\n        </VStack>\n      </Box>\n    </>\n  );\n};\n\nexport default ViewerControls;\n","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/zoom-levels.js",["789"],"import OpenSeadragon from 'openseadragon';\n\n(function($) {\n    'use strict';\n\n    if (!$.version || $.version.major < 2) {\n        throw new Error('This version of OpenSeadragonZoomLevels requires OpenSeadragon version 2.0.0+');\n    }\n\n    $.Viewer.prototype.zoomLevels = function(options) {\n        if (!this.zoomLevelsInstance || options) {\n            options = options || {};\n            options.viewer = this;\n            this.zoomLevelsInstance = new $.ZoomLevels(options);\n        }\n        return this.zoomLevelsInstance;\n    };\n\n\n    /**\n     * @class ZoomLevels\n     * @classdesc Allows restricting the image zoom to specific levels\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     */\n    $.ZoomLevels = function(options) {\n        var self = this;\n\n        $.extend(true, self, {\n            // internal state properties\n            viewer: null,\n\n            // options\n            levels: [],\n        }, options);\n\n        sortZoomLevels(options.levels);\n\n        var viewport = self.viewer.viewport;\n        var zoom;\n        self.viewer.addHandler('zoom', function(e) {\n            if (zoom !== e.zoom) {\n                zoom = e.zoom;\n\n                if (zoom !== viewport.getHomeZoom()) {\n                    if (zoom < viewport.zoomSpring.current.value) {\n                        zoom = self.getLowerZoomLevel(zoom);\n                    } else if (zoom > viewport.zoomSpring.current.value) {\n                        zoom = self.getUpperZoomLevel(zoom);\n                    }\n                }\n\n                if (zoom !== e.zoom) {\n                    e.zoom = zoom;\n                    viewport.zoomTo(zoom, e.refPoint, e.immediately);\n                }\n            }\n        });\n    };\n\n    $.extend($.ZoomLevels.prototype, /** @lends OpenSeadragon.ZoomLevels.prototype */ {\n        /**\n         * Only used for fixed zoom levels. See zoomLevels in {@link OpenSeadragon.Options}.\n         * @function\n         * @param {Number} zoom - The desired zoom level\n         * @return {Number} The proper zoom level.\n         */\n        getUpperZoomLevel: function(zoom) {\n            if ($.isArray(this.levels) && this.levels.length) {\n                var viewport = this.viewer.viewport;\n                var imageZoom = viewport.viewportToImageZoom(zoom);\n                zoom = viewport.imageToViewportZoom(this.levels[this.levels.length - 1]);\n                for (var i = 0; i < this.levels.length; i++) {\n                    if (this.levels[i] > imageZoom) {\n                        zoom = viewport.imageToViewportZoom(this.levels[i]);\n                        break;\n                    }\n                }\n                return Math.min(\n                    zoom,\n                    viewport.getMaxZoom()\n                );\n            }\n            return zoom;\n        },\n\n        /**\n         * Only used for fixed zoom levels. See zoomLevels in {@link OpenSeadragon.Options}.\n         * @function\n         * @param {Number} zoom - The desired zoom level\n         * @return {Number} The proper zoom level.\n         */\n        getLowerZoomLevel: function(zoom) {\n            if ($.isArray(this.levels) && this.levels.length) {\n                var viewport = this.viewer.viewport;\n                var imageZoom = viewport.viewportToImageZoom(zoom);\n                zoom = viewport.imageToViewportZoom(this.levels[0]);\n                for (var i = this.levels.length - 1; i >= 0; i--) {\n                    if (this.levels[i] < imageZoom) {\n                        zoom = viewport.imageToViewportZoom(this.levels[i]);\n                        break;\n                    }\n                }\n                return Math.max(\n                    zoom,\n                    viewport.getMinZoom()\n                );\n            }\n            return zoom;\n        },\n    });\n\n    /**\n     * Sort zoom levels (if there are any) in numeric, ascending order\n     * @function\n     * @return {undefined}\n     */\n    function sortZoomLevels(levels) {\n        if ($.isArray(levels)) {\n            levels.sort(function(a, b) {\n                // numeric, ascending\n                return a - b;\n            });\n        }\n    }\n\n})(OpenSeadragon);","/home/naman/Desktop/sslPortal/webapp/src/components/Viewer/openseadragon-scalebar.js",["790","791","792","793","794","795","796","797","798","799","800","801","802","803"],"/* \n * This software was developed at the National Institute of Standards and\n * Technology by employees of the Federal Government in the course of\n * their official duties. Pursuant to title 17 Section 105 of the United\n * States Code this software is not subject to copyright protection and is\n * in the public domain. This software is an experimental system. NIST assumes\n * no responsibility whatsoever for its use by other parties, and makes no\n * guarantees, expressed or implied, about its quality, reliability, or\n * any other characteristic. We would appreciate acknowledgement if the\n * software is used.\n */\n\n/**\n *\n * @author Antoine Vandecreme <antoine.vandecreme@nist.gov>\n */\n import OpenSeadragon from 'openseadragon';\n\n (function($) {\n\n    if (!$.version || $.version.major < 2) {\n        throw new Error('This version of OpenSeadragonScalebar requires ' +\n                'OpenSeadragon version 2.0.0+');\n    }\n\n    $.Viewer.prototype.scalebar = function(options) {\n        if (!this.scalebarInstance) {\n            options = options || {};\n            options.viewer = this;\n            this.scalebarInstance = new $.Scalebar(options);\n        } else {\n            this.scalebarInstance.refresh(options);\n        }\n    };\n\n    $.ScalebarType = {\n        NONE: 0,\n        MICROSCOPY: 1,\n        MAP: 2\n    };\n\n    $.ScalebarLocation = {\n        NONE: 0,\n        TOP_LEFT: 1,\n        TOP_RIGHT: 2,\n        BOTTOM_RIGHT: 3,\n        BOTTOM_LEFT: 4\n    };\n\n    /**\n     * \n     * @class Scalebar\n     * @param {Object} options\n     * @param {OpenSeadragon.Viewer} options.viewer The viewer to attach this\n     * Scalebar to.\n     * @param {OpenSeadragon.ScalebarType} options.type The scale bar type.\n     * Default: microscopy\n     * @param {Integer} options.pixelsPerMeter The pixels per meter of the\n     * zoomable image at the original image size. If null, the scale bar is not\n     * displayed. default: null\n     * @param {Integer} options.referenceItemIdx Specify the item from\n     * viewer.world to which options.pixelsPerMeter is refering.\n     * default: 0\n     * @param (String} options.minWidth The minimal width of the scale bar as a\n     * CSS string (ex: 100px, 1em, 1% etc...) default: 150px\n     * @param {OpenSeadragon.ScalebarLocation} options.location The location\n     * of the scale bar inside the viewer. default: bottom left\n     * @param {Integer} options.xOffset Offset location of the scale bar along x.\n     * default: 5\n     * @param {Integer} options.yOffset Offset location of the scale bar along y.\n     * default: 5\n     * @param {Boolean} options.stayInsideImage When set to true, keep the \n     * scale bar inside the image when zooming out. default: true\n     * @param {String} options.color The color of the scale bar using a color\n     * name or the hexadecimal format (ex: black or #000000) default: black\n     * @param {String} options.fontColor The font color. default: black\n     * @param {String} options.backgroundColor The background color. default: none\n     * @param {String} options.fontSize The font size. default: not set\n     * @param {String} options.fontFamily The font-family. default: not set\n     * @param {String} options.barThickness The thickness of the scale bar in px.\n     * default: 2\n     * @param {function} options.sizeAndTextRenderer A function which will be\n     * called to determine the size of the scale bar and it's text content.\n     * The function must have 2 parameters: the PPM at the current zoom level\n     * and the minimum size of the scale bar. It must return an object containing\n     * 2 attributes: size and text containing the size of the scale bar and the text.\n     * default: $.ScalebarSizeAndTextRenderer.METRIC_LENGTH\n     */\n    $.Scalebar = function(options) {\n        options = options || {};\n        if (!options.viewer) {\n            throw new Error(\"A viewer must be specified.\");\n        }\n        this.viewer = options.viewer;\n\n        this.divElt = document.createElement(\"div\");\n        this.viewer.container.appendChild(this.divElt);\n        this.divElt.style.position = \"relative\";\n        this.divElt.style.margin = \"0\";\n        this.divElt.style.pointerEvents = \"none\";\n\n        this.setMinWidth(options.minWidth || \"150px\");\n\n        this.setDrawScalebarFunction(options.type || $.ScalebarType.MICROSCOPY);\n        this.color = options.color || \"black\";\n        this.fontColor = options.fontColor || \"black\";\n        this.backgroundColor = options.backgroundColor || \"none\";\n        this.fontSize = options.fontSize || \"\";\n        this.fontFamily = options.fontFamily || \"\";\n        this.barThickness = options.barThickness || 2;\n        this.pixelsPerMeter = options.pixelsPerMeter || null;\n        this.referenceItemIdx = options.referenceItemIdx || 0;\n        this.location = options.location || $.ScalebarLocation.BOTTOM_LEFT;\n        this.xOffset = options.xOffset || 5;\n        this.yOffset = options.yOffset || 5;\n        this.stayInsideImage = isDefined(options.stayInsideImage) ?\n                options.stayInsideImage : true;\n        this.sizeAndTextRenderer = options.sizeAndTextRenderer ||\n                $.ScalebarSizeAndTextRenderer.METRIC_LENGTH;\n\n        var self = this;\n        this.viewer.addHandler(\"open\", function() {\n            self.refresh();\n        });\n        this.viewer.addHandler(\"animation\", function() {\n            self.refresh();\n        });\n        this.viewer.addHandler(\"resize\", function() {\n            self.refresh();\n        });\n    };\n\n    $.Scalebar.prototype = {\n        updateOptions: function(options) {\n            if (!options) {\n                return;\n            }\n            if (isDefined(options.type)) {\n                this.setDrawScalebarFunction(options.type);\n            }\n            if (isDefined(options.minWidth)) {\n                this.setMinWidth(options.minWidth);\n            }\n            if (isDefined(options.color)) {\n                this.color = options.color;\n            }\n            if (isDefined(options.fontColor)) {\n                this.fontColor = options.fontColor;\n            }\n            if (isDefined(options.backgroundColor)) {\n                this.backgroundColor = options.backgroundColor;\n            }\n            if (isDefined(options.fontSize)) {\n                this.fontSize = options.fontSize;\n            }\n            if (isDefined(options.fontFamily)) {\n                this.fontFamily = options.fontFamily;\n            }\n            if (isDefined(options.barThickness)) {\n                this.barThickness = options.barThickness;\n            }\n            if (isDefined(options.pixelsPerMeter)) {\n                this.pixelsPerMeter = options.pixelsPerMeter;\n            }\n            if (isDefined(options.referenceItemIdx)) {\n                this.referenceItemIdx = options.referenceItemIdx;\n            }\n            if (isDefined(options.location)) {\n                this.location = options.location;\n            }\n            if (isDefined(options.xOffset)) {\n                this.xOffset = options.xOffset;\n            }\n            if (isDefined(options.yOffset)) {\n                this.yOffset = options.yOffset;\n            }\n            if (isDefined(options.stayInsideImage)) {\n                this.stayInsideImage = options.stayInsideImage;\n            }\n            if (isDefined(options.sizeAndTextRenderer)) {\n                this.sizeAndTextRenderer = options.sizeAndTextRenderer;\n            }\n        },\n        setDrawScalebarFunction: function(type) {\n            if (!type) {\n                this.drawScalebar = null;\n            }\n            else if (type === $.ScalebarType.MAP) {\n                this.drawScalebar = this.drawMapScalebar;\n            } else {\n                this.drawScalebar = this.drawMicroscopyScalebar;\n            }\n        },\n        setMinWidth: function(minWidth) {\n            this.divElt.style.width = minWidth;\n            // Make sure to display the element before getting is width\n            this.divElt.style.display = \"\";\n            this.minWidth = this.divElt.offsetWidth;\n        },\n        /**\n         * Refresh the scalebar with the options submitted.\n         * @param {Object} options\n         * @param {OpenSeadragon.ScalebarType} options.type The scale bar type.\n         * Default: microscopy\n         * @param {Integer} options.pixelsPerMeter The pixels per meter of the\n         * zoomable image at the original image size. If null, the scale bar is not\n         * displayed. default: null\n         * @param {Integer} options.referenceItemIdx Specify the item from\n         * viewer.world to which options.pixelsPerMeter is refering.\n         * default: 0\n         * @param (String} options.minWidth The minimal width of the scale bar as a\n         * CSS string (ex: 100px, 1em, 1% etc...) default: 150px\n         * @param {OpenSeadragon.ScalebarLocation} options.location The location\n         * of the scale bar inside the viewer. default: bottom left\n         * @param {Integer} options.xOffset Offset location of the scale bar along x.\n         * default: 5\n         * @param {Integer} options.yOffset Offset location of the scale bar along y.\n         * default: 5\n         * @param {Boolean} options.stayInsideImage When set to true, keep the \n         * scale bar inside the image when zooming out. default: true\n         * @param {String} options.color The color of the scale bar using a color\n         * name or the hexadecimal format (ex: black or #000000) default: black\n         * @param {String} options.fontColor The font color. default: black\n         * @param {String} options.backgroundColor The background color. default: none\n         * @param {String} options.fontSize The font size. default: not set\n         * @param {String} options.barThickness The thickness of the scale bar in px.\n         * default: 2\n         * @param {function} options.sizeAndTextRenderer A function which will be\n         * called to determine the size of the scale bar and it's text content.\n         * The function must have 2 parameters: the PPM at the current zoom level\n         * and the minimum size of the scale bar. It must return an object containing\n         * 2 attributes: size and text containing the size of the scale bar and the text.\n         * default: $.ScalebarSizeAndTextRenderer.METRIC_LENGTH\n         */\n        refresh: function(options) {\n            this.updateOptions(options);\n\n            if (!this.viewer.isOpen() ||\n                    !this.drawScalebar ||\n                    !this.pixelsPerMeter ||\n                    !this.location) {\n                this.divElt.style.display = \"none\";\n                return;\n            }\n            this.divElt.style.display = \"\";\n\n            var viewport = this.viewer.viewport;\n            var tiledImage = this.viewer.world.getItemAt(this.referenceItemIdx);\n            var zoom = tiledImageViewportToImageZoom(tiledImage,\n                    viewport.getZoom(true));\n            var currentPPM = zoom * this.pixelsPerMeter;\n            var props = this.sizeAndTextRenderer(currentPPM, this.minWidth);\n\n            this.drawScalebar(props.size, props.text);\n            var location = this.getScalebarLocation();\n            this.divElt.style.left = location.x + \"px\";\n            this.divElt.style.top = location.y + \"px\";\n        },\n        drawMicroscopyScalebar: function(size, text) {\n            this.divElt.style.fontSize = this.fontSize;\n            this.divElt.style.fontFamily = this.fontFamily;\n            this.divElt.style.textAlign = \"center\";\n            this.divElt.style.color = this.fontColor;\n            this.divElt.style.border = \"none\";\n            this.divElt.style.borderBottom = this.barThickness + \"px solid \" + this.color;\n            this.divElt.style.backgroundColor = this.backgroundColor;\n            this.divElt.innerHTML = text;\n            this.divElt.style.width = size + \"px\";\n        },\n        drawMapScalebar: function(size, text) {\n            this.divElt.style.fontSize = this.fontSize;\n            this.divElt.style.fontFamily = this.fontFamily;\n            this.divElt.style.textAlign = \"center\";\n            this.divElt.style.color = this.fontColor;\n            this.divElt.style.border = this.barThickness + \"px solid \" + this.color;\n            this.divElt.style.borderTop = \"none\";\n            this.divElt.style.backgroundColor = this.backgroundColor;\n            this.divElt.innerHTML = text;\n            this.divElt.style.width = size + \"px\";\n        },\n        /**\n         * Compute the location of the scale bar.\n         * @returns {OpenSeadragon.Point}\n         */\n        getScalebarLocation: function() {\n            if (this.location === $.ScalebarLocation.TOP_LEFT) {\n                var x = 0;\n                var y = 0;\n                if (this.stayInsideImage) {\n                    var pixel = this.viewer.viewport.pixelFromPoint(\n                            new $.Point(0, 0), true);\n                    if (!this.viewer.wrapHorizontal) {\n                        x = Math.max(pixel.x, 0);\n                    }\n                    if (!this.viewer.wrapVertical) {\n                        y = Math.max(pixel.y, 0);\n                    }\n                }\n                return new $.Point(x + this.xOffset, y + this.yOffset);\n            }\n            if (this.location === $.ScalebarLocation.TOP_RIGHT) {\n                var barWidth = this.divElt.offsetWidth;\n                var container = this.viewer.container;\n                var x = container.offsetWidth - barWidth;\n                var y = 0;\n                if (this.stayInsideImage) {\n                    var pixel = this.viewer.viewport.pixelFromPoint(\n                            new $.Point(1, 0), true);\n                    if (!this.viewer.wrapHorizontal) {\n                        x = Math.min(x, pixel.x - barWidth);\n                    }\n                    if (!this.viewer.wrapVertical) {\n                        y = Math.max(y, pixel.y);\n                    }\n                }\n                return new $.Point(x - this.xOffset, y + this.yOffset);\n            }\n            if (this.location === $.ScalebarLocation.BOTTOM_RIGHT) {\n                var barWidth = this.divElt.offsetWidth;\n                var barHeight = this.divElt.offsetHeight;\n                var container = this.viewer.container;\n                var x = container.offsetWidth - barWidth;\n                var y = container.offsetHeight - barHeight;\n                if (this.stayInsideImage) {\n                    var pixel = this.viewer.viewport.pixelFromPoint(\n                            new $.Point(1, 1 / this.viewer.source.aspectRatio),\n                            true);\n                    if (!this.viewer.wrapHorizontal) {\n                        x = Math.min(x, pixel.x - barWidth);\n                    }\n                    if (!this.viewer.wrapVertical) {\n                        y = Math.min(y, pixel.y - barHeight);\n                    }\n                }\n                return new $.Point(x - this.xOffset, y - this.yOffset);\n            }\n            if (this.location === $.ScalebarLocation.BOTTOM_LEFT) {\n                var barHeight = this.divElt.offsetHeight;\n                var container = this.viewer.container;\n                var x = 0;\n                var y = container.offsetHeight - barHeight;\n                if (this.stayInsideImage) {\n                    var pixel = this.viewer.viewport.pixelFromPoint(\n                            new $.Point(0, 1 / this.viewer.source.aspectRatio),\n                            true);\n                    if (!this.viewer.wrapHorizontal) {\n                        x = Math.max(x, pixel.x);\n                    }\n                    if (!this.viewer.wrapVertical) {\n                        y = Math.min(y, pixel.y - barHeight);\n                    }\n                }\n                return new $.Point(x + this.xOffset, y - this.yOffset);\n            }\n        },\n        /**\n         * Get the rendered scalebar in a canvas.\n         * @returns {Element} A canvas containing the scalebar representation\n         */\n        getAsCanvas: function() {\n            var canvas = document.createElement(\"canvas\");\n            canvas.width = this.divElt.offsetWidth;\n            canvas.height = this.divElt.offsetHeight;\n            var context = canvas.getContext(\"2d\");\n            context.fillStyle = this.backgroundColor;\n            context.fillRect(0, 0, canvas.width, canvas.height);\n            context.fillStyle = this.color;\n            context.fillRect(0, canvas.height - this.barThickness,\n                    canvas.width, canvas.height);\n            if (this.drawScalebar === this.drawMapScalebar) {\n                context.fillRect(0, 0, this.barThickness, canvas.height);\n                context.fillRect(canvas.width - this.barThickness, 0,\n                        this.barThickness, canvas.height);\n            }\n            context.font = window.getComputedStyle(this.divElt).font;\n            context.textAlign = \"center\";\n            context.textBaseline = \"middle\";\n            context.fillStyle = this.fontColor;\n            var hCenter = canvas.width / 2;\n            var vCenter = canvas.height / 2;\n            context.fillText(this.divElt.textContent, hCenter, vCenter);\n            return canvas;\n        },\n        /**\n         * Get a copy of the current OpenSeadragon canvas with the scalebar.\n         * @returns {Element} A canvas containing a copy of the current OpenSeadragon canvas with the scalebar\n         */\n        getImageWithScalebarAsCanvas: function() {\n            var imgCanvas = this.viewer.drawer.canvas;\n            var newCanvas = document.createElement(\"canvas\");\n            newCanvas.width = imgCanvas.width;\n            newCanvas.height = imgCanvas.height;\n            var newCtx = newCanvas.getContext(\"2d\");\n            newCtx.drawImage(imgCanvas, 0, 0);\n            var scalebarCanvas = this.getAsCanvas();\n            var location = this.getScalebarLocation();\n            newCtx.drawImage(scalebarCanvas, location.x, location.y);\n            return newCanvas;\n        }\n    };\n\n    $.ScalebarSizeAndTextRenderer = {\n        /**\n         * Metric length. From nano meters to kilometers.\n         */\n        METRIC_LENGTH: function(ppm, minSize) {\n            return getScalebarSizeAndTextForMetric(ppm, minSize, \"m\");\n        },\n        /**\n         * Imperial length. Choosing the best unit from thou, inch, foot and mile.\n         */\n        IMPERIAL_LENGTH: function(ppm, minSize) {\n            var maxSize = minSize * 2;\n            var ppi = ppm * 0.0254;\n            if (maxSize < ppi * 12) {\n                if (maxSize < ppi) {\n                    var ppt = ppi / 1000;\n                    return getScalebarSizeAndText(ppt, minSize, \"th\");\n                }\n                return getScalebarSizeAndText(ppi, minSize, \"in\");\n            }\n            var ppf = ppi * 12;\n            if (maxSize < ppf * 2000) {\n                return getScalebarSizeAndText(ppf, minSize, \"ft\");\n            }\n            var ppmi = ppf * 5280;\n            return getScalebarSizeAndText(ppmi, minSize, \"mi\");\n        },\n        /**\n         * Astronomy units. Choosing the best unit from arcsec, arcminute, and degree\n         */\n        ASTRONOMY: function(ppa, minSize) {\n\t    var maxSize = minSize * 2;\n            if (maxSize < ppa * 60) {\n                return getScalebarSizeAndText(ppa, minSize, \"\\\"\", false, '');\n            }\n            var ppminutes = ppa * 60;\n            if (maxSize < ppminutes * 60) {\n                return getScalebarSizeAndText(ppminutes, minSize, \"\\'\", false, '');\n            }\n            var ppd = ppminutes * 60;\n            return getScalebarSizeAndText(ppd, minSize, \"&#176\", false, '');\n\t},\n        /**\n         * Standard time. Choosing the best unit from second (and metric divisions),\n         * minute, hour, day and year.\n         */\n        STANDARD_TIME: function(pps, minSize) {\n            var maxSize = minSize * 2;\n            if (maxSize < pps * 60) {\n                return getScalebarSizeAndTextForMetric(pps, minSize, \"s\", false);\n            }\n            var ppminutes = pps * 60;\n            if (maxSize < ppminutes * 60) {\n                return getScalebarSizeAndText(ppminutes, minSize, \"minute\", true);\n            }\n            var pph = ppminutes * 60;\n            if (maxSize < pph * 24) {\n                return getScalebarSizeAndText(pph, minSize, \"hour\", true);\n            }\n            var ppd = pph * 24;\n            if (maxSize < ppd * 365.25) {\n                return getScalebarSizeAndText(ppd, minSize, \"day\", true);\n            }\n            var ppy = ppd * 365.25;\n            return getScalebarSizeAndText(ppy, minSize, \"year\", true);\n        },\n        /**\n         * Generic metric unit. One can use this function to create a new metric\n         * scale. For example, here is an implementation of energy levels:\n         * function(ppeV, minSize) {\n         *   return OpenSeadragon.ScalebarSizeAndTextRenderer.METRIC_GENERIC(\n         *           ppeV, minSize, \"eV\");\n         * }\n         */\n        METRIC_GENERIC: getScalebarSizeAndTextForMetric\n    };\n\n    // Missing TiledImage.viewportToImageZoom function in OSD 2.0.0\n    function tiledImageViewportToImageZoom(tiledImage, viewportZoom) {\n        var ratio = tiledImage._scaleSpring.current.value *\n                tiledImage.viewport._containerInnerSize.x /\n                tiledImage.source.dimensions.x;\n        return ratio * viewportZoom;\n    }\n\n    function getScalebarSizeAndText(ppm, minSize, unitSuffix, handlePlural, spacer) {\n\tspacer = spacer === undefined ? ' ' : spacer;\n        var value = normalize(ppm, minSize);\n        var factor = roundSignificand(value / ppm * minSize, 3);\n        var size = value * minSize;\n        var plural = handlePlural && factor > 1 ? \"s\" : \"\";\n        return {\n            size: size,\n            text: factor + spacer + unitSuffix + plural\n        };\n    }\n\n    function getScalebarSizeAndTextForMetric(ppm, minSize, unitSuffix) {\n        var value = normalize(ppm, minSize);\n        var factor = roundSignificand(value / ppm * minSize, 3);\n        var size = value * minSize;\n        var valueWithUnit = getWithUnit(factor, unitSuffix);\n        return {\n            size: size,\n            text: valueWithUnit\n        };\n    }\n\n    function normalize(value, minSize) {\n        var significand = getSignificand(value);\n        var minSizeSign = getSignificand(minSize);\n        var result = getSignificand(significand / minSizeSign);\n        if (result >= 5) {\n            result /= 5;\n        }\n        if (result >= 4) {\n            result /= 4;\n        }\n        if (result >= 2) {\n            result /= 2;\n        }\n        return result;\n    }\n\n    function getSignificand(x) {\n        return x * Math.pow(10, Math.ceil(-log10(x)));\n    }\n\n    function roundSignificand(x, decimalPlaces) {\n        var exponent = -Math.ceil(-log10(x));\n        var power = decimalPlaces - exponent;\n        var significand = x * Math.pow(10, power);\n        // To avoid rounding problems, always work with integers\n        if (power < 0) {\n            return Math.round(significand) * Math.pow(10, -power);\n        }\n        return Math.round(significand) / Math.pow(10, power);\n    }\n\n    function log10(x) {\n        return Math.log(x) / Math.log(10);\n    }\n\n    function getWithUnit(value, unitSuffix) {\n        if (value < 0.000001) {\n            return value * 1000000000 + \" n\" + unitSuffix;\n        }\n        if (value < 0.001) {\n            return value * 1000000 + \" μ\" + unitSuffix;\n        }\n        if (value < 1) {\n            return value * 1000 + \" m\" + unitSuffix;\n        }\n        if (value >= 1000) {\n            return value / 1000 + \" k\" + unitSuffix;\n        }\n        return value + \" \" + unitSuffix;\n    }\n\n    function isDefined(variable) {\n        return typeof (variable) !== \"undefined\";\n    }\n}(OpenSeadragon));",{"ruleId":"804","replacedBy":"805"},{"ruleId":"806","replacedBy":"807"},{"ruleId":"808","severity":1,"message":"809","line":7,"column":8,"nodeType":"810","messageId":"811","endLine":7,"endColumn":24},{"ruleId":"808","severity":1,"message":"812","line":4,"column":10,"nodeType":"810","messageId":"811","endLine":4,"endColumn":21},{"ruleId":"808","severity":1,"message":"813","line":5,"column":10,"nodeType":"810","messageId":"811","endLine":5,"endColumn":23},{"ruleId":"808","severity":1,"message":"814","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":26},{"ruleId":"808","severity":1,"message":"815","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":13},{"ruleId":"808","severity":1,"message":"816","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"817","line":5,"column":8,"nodeType":"810","messageId":"811","endLine":5,"endColumn":15},{"ruleId":"808","severity":1,"message":"818","line":7,"column":8,"nodeType":"810","messageId":"811","endLine":7,"endColumn":23},{"ruleId":"808","severity":1,"message":"819","line":8,"column":8,"nodeType":"810","messageId":"811","endLine":8,"endColumn":24},{"ruleId":"808","severity":1,"message":"820","line":13,"column":8,"nodeType":"810","messageId":"811","endLine":13,"endColumn":23},{"ruleId":"808","severity":1,"message":"821","line":14,"column":8,"nodeType":"810","messageId":"811","endLine":14,"endColumn":21},{"ruleId":"808","severity":1,"message":"822","line":17,"column":8,"nodeType":"810","messageId":"811","endLine":17,"endColumn":25},{"ruleId":"808","severity":1,"message":"823","line":18,"column":10,"nodeType":"810","messageId":"811","endLine":18,"endColumn":16},{"ruleId":"808","severity":1,"message":"824","line":7,"column":8,"nodeType":"810","messageId":"811","endLine":7,"endColumn":23},{"ruleId":"808","severity":1,"message":"825","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":9},{"ruleId":"808","severity":1,"message":"826","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":7},{"ruleId":"808","severity":1,"message":"827","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":13},{"ruleId":"808","severity":1,"message":"828","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":8},{"ruleId":"808","severity":1,"message":"829","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":7},{"ruleId":"808","severity":1,"message":"830","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":13},{"ruleId":"808","severity":1,"message":"831","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":11},{"ruleId":"808","severity":1,"message":"832","line":13,"column":3,"nodeType":"810","messageId":"811","endLine":13,"endColumn":11},{"ruleId":"808","severity":1,"message":"833","line":14,"column":3,"nodeType":"810","messageId":"811","endLine":14,"endColumn":9},{"ruleId":"808","severity":1,"message":"834","line":15,"column":3,"nodeType":"810","messageId":"811","endLine":15,"endColumn":7},{"ruleId":"808","severity":1,"message":"835","line":17,"column":8,"nodeType":"810","messageId":"811","endLine":17,"endColumn":18},{"ruleId":"808","severity":1,"message":"836","line":18,"column":10,"nodeType":"810","messageId":"811","endLine":18,"endColumn":23},{"ruleId":"808","severity":1,"message":"837","line":19,"column":10,"nodeType":"810","messageId":"811","endLine":19,"endColumn":28},{"ruleId":"808","severity":1,"message":"838","line":20,"column":10,"nodeType":"810","messageId":"811","endLine":20,"endColumn":22},{"ruleId":"808","severity":1,"message":"839","line":21,"column":18,"nodeType":"810","messageId":"811","endLine":21,"endColumn":24},{"ruleId":"808","severity":1,"message":"840","line":22,"column":8,"nodeType":"810","messageId":"811","endLine":22,"endColumn":25},{"ruleId":"808","severity":1,"message":"841","line":23,"column":8,"nodeType":"810","messageId":"811","endLine":23,"endColumn":17},{"ruleId":"808","severity":1,"message":"842","line":31,"column":9,"nodeType":"810","messageId":"811","endLine":31,"endColumn":16},{"ruleId":"808","severity":1,"message":"843","line":33,"column":10,"nodeType":"810","messageId":"811","endLine":33,"endColumn":22},{"ruleId":"808","severity":1,"message":"844","line":35,"column":9,"nodeType":"810","messageId":"811","endLine":35,"endColumn":25},{"ruleId":"808","severity":1,"message":"845","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":9},{"ruleId":"808","severity":1,"message":"846","line":5,"column":3,"nodeType":"810","messageId":"811","endLine":5,"endColumn":9},{"ruleId":"808","severity":1,"message":"847","line":6,"column":3,"nodeType":"810","messageId":"811","endLine":6,"endColumn":10},{"ruleId":"808","severity":1,"message":"848","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":14},{"ruleId":"808","severity":1,"message":"849","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":18},{"ruleId":"808","severity":1,"message":"850","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":20},{"ruleId":"808","severity":1,"message":"851","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":21},{"ruleId":"808","severity":1,"message":"852","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":20},{"ruleId":"808","severity":1,"message":"853","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":21},{"ruleId":"808","severity":1,"message":"854","line":13,"column":3,"nodeType":"810","messageId":"811","endLine":13,"endColumn":25},{"ruleId":"808","severity":1,"message":"825","line":14,"column":3,"nodeType":"810","messageId":"811","endLine":14,"endColumn":9},{"ruleId":"808","severity":1,"message":"828","line":16,"column":3,"nodeType":"810","messageId":"811","endLine":16,"endColumn":8},{"ruleId":"808","severity":1,"message":"855","line":19,"column":10,"nodeType":"810","messageId":"811","endLine":19,"endColumn":27},{"ruleId":"808","severity":1,"message":"840","line":20,"column":8,"nodeType":"810","messageId":"811","endLine":20,"endColumn":25},{"ruleId":"808","severity":1,"message":"841","line":21,"column":8,"nodeType":"810","messageId":"811","endLine":21,"endColumn":17},{"ruleId":"808","severity":1,"message":"856","line":23,"column":31,"nodeType":"810","messageId":"811","endLine":23,"endColumn":39},{"ruleId":"808","severity":1,"message":"857","line":32,"column":9,"nodeType":"810","messageId":"811","endLine":32,"endColumn":18},{"ruleId":"808","severity":1,"message":"858","line":33,"column":10,"nodeType":"810","messageId":"811","endLine":33,"endColumn":16},{"ruleId":"808","severity":1,"message":"859","line":34,"column":9,"nodeType":"810","messageId":"811","endLine":34,"endColumn":16},{"ruleId":"808","severity":1,"message":"860","line":36,"column":9,"nodeType":"810","messageId":"811","endLine":36,"endColumn":25},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"862","line":6,"column":8,"nodeType":"810","messageId":"811","endLine":6,"endColumn":15},{"ruleId":"863","severity":1,"message":"864","line":24,"column":6,"nodeType":"865","endLine":24,"endColumn":18,"suggestions":"866"},{"ruleId":"808","severity":1,"message":"846","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":9},{"ruleId":"808","severity":1,"message":"847","line":5,"column":3,"nodeType":"810","messageId":"811","endLine":5,"endColumn":10},{"ruleId":"808","severity":1,"message":"829","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":7},{"ruleId":"808","severity":1,"message":"830","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":13},{"ruleId":"808","severity":1,"message":"831","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":11},{"ruleId":"808","severity":1,"message":"832","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":11},{"ruleId":"808","severity":1,"message":"825","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":9},{"ruleId":"808","severity":1,"message":"867","line":13,"column":3,"nodeType":"810","messageId":"811","endLine":13,"endColumn":9},{"ruleId":"808","severity":1,"message":"868","line":14,"column":3,"nodeType":"810","messageId":"811","endLine":14,"endColumn":14},{"ruleId":"808","severity":1,"message":"869","line":15,"column":3,"nodeType":"810","messageId":"811","endLine":15,"endColumn":14},{"ruleId":"808","severity":1,"message":"870","line":18,"column":3,"nodeType":"810","messageId":"811","endLine":18,"endColumn":9},{"ruleId":"808","severity":1,"message":"871","line":20,"column":10,"nodeType":"810","messageId":"811","endLine":20,"endColumn":25},{"ruleId":"808","severity":1,"message":"872","line":21,"column":10,"nodeType":"810","messageId":"811","endLine":21,"endColumn":19},{"ruleId":"808","severity":1,"message":"873","line":23,"column":8,"nodeType":"810","messageId":"811","endLine":23,"endColumn":19},{"ruleId":"808","severity":1,"message":"874","line":24,"column":8,"nodeType":"810","messageId":"811","endLine":24,"endColumn":16},{"ruleId":"808","severity":1,"message":"824","line":25,"column":8,"nodeType":"810","messageId":"811","endLine":25,"endColumn":23},{"ruleId":"808","severity":1,"message":"875","line":26,"column":8,"nodeType":"810","messageId":"811","endLine":26,"endColumn":25},{"ruleId":"808","severity":1,"message":"876","line":28,"column":8,"nodeType":"810","messageId":"811","endLine":28,"endColumn":13},{"ruleId":"808","severity":1,"message":"841","line":30,"column":8,"nodeType":"810","messageId":"811","endLine":30,"endColumn":17},{"ruleId":"808","severity":1,"message":"877","line":31,"column":8,"nodeType":"810","messageId":"811","endLine":31,"endColumn":19},{"ruleId":"808","severity":1,"message":"878","line":34,"column":8,"nodeType":"810","messageId":"811","endLine":34,"endColumn":20},{"ruleId":"808","severity":1,"message":"879","line":40,"column":8,"nodeType":"810","messageId":"811","endLine":40,"endColumn":12},{"ruleId":"808","severity":1,"message":"880","line":41,"column":8,"nodeType":"810","messageId":"811","endLine":41,"endColumn":14},{"ruleId":"808","severity":1,"message":"881","line":42,"column":8,"nodeType":"810","messageId":"811","endLine":42,"endColumn":16},{"ruleId":"808","severity":1,"message":"882","line":44,"column":8,"nodeType":"810","messageId":"811","endLine":44,"endColumn":12},{"ruleId":"808","severity":1,"message":"883","line":45,"column":8,"nodeType":"810","messageId":"811","endLine":45,"endColumn":13},{"ruleId":"808","severity":1,"message":"884","line":46,"column":8,"nodeType":"810","messageId":"811","endLine":46,"endColumn":14},{"ruleId":"808","severity":1,"message":"885","line":52,"column":11,"nodeType":"810","messageId":"811","endLine":52,"endColumn":19},{"ruleId":"808","severity":1,"message":"886","line":52,"column":21,"nodeType":"810","messageId":"811","endLine":52,"endColumn":30},{"ruleId":"808","severity":1,"message":"887","line":53,"column":11,"nodeType":"810","messageId":"811","endLine":53,"endColumn":27},{"ruleId":"808","severity":1,"message":"888","line":12,"column":8,"nodeType":"810","messageId":"811","endLine":12,"endColumn":13},{"ruleId":"808","severity":1,"message":"823","line":15,"column":10,"nodeType":"810","messageId":"811","endLine":15,"endColumn":16},{"ruleId":"808","severity":1,"message":"889","line":25,"column":22,"nodeType":"810","messageId":"811","endLine":25,"endColumn":35},{"ruleId":"863","severity":1,"message":"890","line":73,"column":6,"nodeType":"865","endLine":73,"endColumn":22,"suggestions":"891"},{"ruleId":"892","severity":1,"message":"893","line":99,"column":18,"nodeType":"894","messageId":"895","endLine":99,"endColumn":20},{"ruleId":"808","severity":1,"message":"896","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":20},{"ruleId":"808","severity":1,"message":"897","line":1,"column":8,"nodeType":"810","messageId":"811","endLine":1,"endColumn":13},{"ruleId":"898","severity":1,"message":"899","line":23,"column":9,"nodeType":"900","messageId":"901","endLine":36,"endColumn":10},{"ruleId":"898","severity":1,"message":"899","line":42,"column":9,"nodeType":"900","messageId":"901","endLine":55,"endColumn":10},{"ruleId":"808","severity":1,"message":"902","line":54,"column":9,"nodeType":"810","messageId":"811","endLine":54,"endColumn":19},{"ruleId":"808","severity":1,"message":"814","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":26},{"ruleId":"808","severity":1,"message":"903","line":1,"column":28,"nodeType":"810","messageId":"811","endLine":1,"endColumn":36},{"ruleId":"808","severity":1,"message":"847","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":10},{"ruleId":"808","severity":1,"message":"904","line":5,"column":3,"nodeType":"810","messageId":"811","endLine":5,"endColumn":7},{"ruleId":"808","severity":1,"message":"905","line":6,"column":3,"nodeType":"810","messageId":"811","endLine":6,"endColumn":11},{"ruleId":"808","severity":1,"message":"906","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":7},{"ruleId":"808","severity":1,"message":"825","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":9},{"ruleId":"808","severity":1,"message":"907","line":12,"column":10,"nodeType":"810","messageId":"811","endLine":12,"endColumn":26},{"ruleId":"808","severity":1,"message":"908","line":21,"column":11,"nodeType":"810","messageId":"811","endLine":21,"endColumn":21},{"ruleId":"808","severity":1,"message":"909","line":23,"column":11,"nodeType":"810","messageId":"811","endLine":23,"endColumn":22},{"ruleId":"808","severity":1,"message":"910","line":27,"column":9,"nodeType":"810","messageId":"811","endLine":27,"endColumn":26},{"ruleId":"808","severity":1,"message":"815","line":3,"column":3,"nodeType":"810","messageId":"811","endLine":3,"endColumn":6},{"ruleId":"808","severity":1,"message":"825","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":9},{"ruleId":"808","severity":1,"message":"827","line":5,"column":3,"nodeType":"810","messageId":"811","endLine":5,"endColumn":13},{"ruleId":"808","severity":1,"message":"911","line":6,"column":3,"nodeType":"810","messageId":"811","endLine":6,"endColumn":8},{"ruleId":"808","severity":1,"message":"826","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":7},{"ruleId":"808","severity":1,"message":"912","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":8},{"ruleId":"808","severity":1,"message":"913","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":15},{"ruleId":"808","severity":1,"message":"914","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":15},{"ruleId":"808","severity":1,"message":"915","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":14},{"ruleId":"808","severity":1,"message":"916","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":14},{"ruleId":"808","severity":1,"message":"917","line":13,"column":3,"nodeType":"810","messageId":"811","endLine":13,"endColumn":12},{"ruleId":"808","severity":1,"message":"918","line":14,"column":3,"nodeType":"810","messageId":"811","endLine":14,"endColumn":19},{"ruleId":"808","severity":1,"message":"919","line":15,"column":3,"nodeType":"810","messageId":"811","endLine":15,"endColumn":10},{"ruleId":"808","severity":1,"message":"904","line":16,"column":3,"nodeType":"810","messageId":"811","endLine":16,"endColumn":7},{"ruleId":"808","severity":1,"message":"905","line":17,"column":3,"nodeType":"810","messageId":"811","endLine":17,"endColumn":11},{"ruleId":"808","severity":1,"message":"920","line":22,"column":3,"nodeType":"810","messageId":"811","endLine":22,"endColumn":14},{"ruleId":"808","severity":1,"message":"921","line":24,"column":10,"nodeType":"810","messageId":"811","endLine":24,"endColumn":26},{"ruleId":"808","severity":1,"message":"922","line":26,"column":10,"nodeType":"810","messageId":"811","endLine":26,"endColumn":16},{"ruleId":"808","severity":1,"message":"923","line":29,"column":8,"nodeType":"810","messageId":"811","endLine":29,"endColumn":19},{"ruleId":"808","severity":1,"message":"924","line":37,"column":7,"nodeType":"810","messageId":"811","endLine":37,"endColumn":19},{"ruleId":"808","severity":1,"message":"858","line":46,"column":11,"nodeType":"810","messageId":"811","endLine":46,"endColumn":17},{"ruleId":"808","severity":1,"message":"925","line":46,"column":19,"nodeType":"810","messageId":"811","endLine":46,"endColumn":25},{"ruleId":"808","severity":1,"message":"859","line":46,"column":27,"nodeType":"810","messageId":"811","endLine":46,"endColumn":34},{"ruleId":"808","severity":1,"message":"926","line":47,"column":10,"nodeType":"810","messageId":"811","endLine":47,"endColumn":20},{"ruleId":"808","severity":1,"message":"842","line":48,"column":9,"nodeType":"810","messageId":"811","endLine":48,"endColumn":16},{"ruleId":"808","severity":1,"message":"927","line":49,"column":9,"nodeType":"810","messageId":"811","endLine":49,"endColumn":23},{"ruleId":"808","severity":1,"message":"928","line":53,"column":9,"nodeType":"810","messageId":"811","endLine":53,"endColumn":25},{"ruleId":"808","severity":1,"message":"825","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":16},{"ruleId":"808","severity":1,"message":"929","line":5,"column":8,"nodeType":"810","messageId":"811","endLine":5,"endColumn":21},{"ruleId":"808","severity":1,"message":"815","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":13},{"ruleId":"808","severity":1,"message":"847","line":3,"column":15,"nodeType":"810","messageId":"811","endLine":3,"endColumn":22},{"ruleId":"808","severity":1,"message":"906","line":3,"column":24,"nodeType":"810","messageId":"811","endLine":3,"endColumn":28},{"ruleId":"808","severity":1,"message":"930","line":6,"column":8,"nodeType":"810","messageId":"811","endLine":6,"endColumn":23},{"ruleId":"808","severity":1,"message":"929","line":7,"column":8,"nodeType":"810","messageId":"811","endLine":7,"endColumn":21},{"ruleId":"808","severity":1,"message":"931","line":8,"column":8,"nodeType":"810","messageId":"811","endLine":8,"endColumn":27},{"ruleId":"808","severity":1,"message":"932","line":9,"column":10,"nodeType":"810","messageId":"811","endLine":9,"endColumn":16},{"ruleId":"808","severity":1,"message":"933","line":59,"column":11,"nodeType":"810","messageId":"811","endLine":59,"endColumn":20},{"ruleId":"863","severity":1,"message":"934","line":85,"column":6,"nodeType":"865","endLine":85,"endColumn":16,"suggestions":"935"},{"ruleId":"863","severity":1,"message":"936","line":103,"column":6,"nodeType":"865","endLine":103,"endColumn":21,"suggestions":"937"},{"ruleId":"863","severity":1,"message":"938","line":195,"column":6,"nodeType":"865","endLine":195,"endColumn":16,"suggestions":"939"},{"ruleId":"863","severity":1,"message":"940","line":207,"column":6,"nodeType":"865","endLine":207,"endColumn":28,"suggestions":"941"},{"ruleId":"863","severity":1,"message":"942","line":211,"column":13,"nodeType":"943","endLine":259,"endColumn":4},{"ruleId":"863","severity":1,"message":"944","line":259,"column":6,"nodeType":"865","endLine":259,"endColumn":15,"suggestions":"945"},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"897","line":1,"column":8,"nodeType":"810","messageId":"811","endLine":1,"endColumn":13},{"ruleId":"808","severity":1,"message":"908","line":7,"column":11,"nodeType":"810","messageId":"811","endLine":7,"endColumn":21},{"ruleId":"808","severity":1,"message":"815","line":3,"column":3,"nodeType":"810","messageId":"811","endLine":3,"endColumn":6},{"ruleId":"808","severity":1,"message":"946","line":19,"column":8,"nodeType":"810","messageId":"811","endLine":19,"endColumn":18},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"947","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":24},{"ruleId":"808","severity":1,"message":"929","line":3,"column":8,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"948","line":8,"column":8,"nodeType":"810","messageId":"811","endLine":8,"endColumn":26},{"ruleId":"808","severity":1,"message":"931","line":9,"column":8,"nodeType":"810","messageId":"811","endLine":9,"endColumn":27},{"ruleId":"808","severity":1,"message":"949","line":10,"column":10,"nodeType":"810","messageId":"811","endLine":10,"endColumn":15},{"ruleId":"808","severity":1,"message":"950","line":28,"column":34,"nodeType":"810","messageId":"811","endLine":28,"endColumn":43},{"ruleId":"808","severity":1,"message":"951","line":28,"column":45,"nodeType":"810","messageId":"811","endLine":28,"endColumn":57},{"ruleId":"863","severity":1,"message":"952","line":48,"column":6,"nodeType":"865","endLine":48,"endColumn":23,"suggestions":"953"},{"ruleId":"863","severity":1,"message":"954","line":59,"column":6,"nodeType":"865","endLine":59,"endColumn":25,"suggestions":"955"},{"ruleId":"808","severity":1,"message":"956","line":66,"column":11,"nodeType":"810","messageId":"811","endLine":66,"endColumn":17},{"ruleId":"863","severity":1,"message":"957","line":80,"column":6,"nodeType":"865","endLine":80,"endColumn":26,"suggestions":"958"},{"ruleId":"863","severity":1,"message":"959","line":151,"column":6,"nodeType":"865","endLine":151,"endColumn":21,"suggestions":"960"},{"ruleId":"808","severity":1,"message":"961","line":153,"column":9,"nodeType":"810","messageId":"811","endLine":153,"endColumn":25},{"ruleId":"808","severity":1,"message":"902","line":162,"column":9,"nodeType":"810","messageId":"811","endLine":162,"endColumn":19},{"ruleId":"808","severity":1,"message":"814","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":26},{"ruleId":"808","severity":1,"message":"903","line":1,"column":28,"nodeType":"810","messageId":"811","endLine":1,"endColumn":36},{"ruleId":"808","severity":1,"message":"962","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":27},{"ruleId":"808","severity":1,"message":"929","line":3,"column":8,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"963","line":5,"column":10,"nodeType":"810","messageId":"811","endLine":5,"endColumn":23},{"ruleId":"808","severity":1,"message":"964","line":14,"column":9,"nodeType":"810","messageId":"811","endLine":14,"endColumn":27},{"ruleId":"808","severity":1,"message":"903","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":25},{"ruleId":"808","severity":1,"message":"965","line":3,"column":3,"nodeType":"810","messageId":"811","endLine":3,"endColumn":9},{"ruleId":"808","severity":1,"message":"966","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":13},{"ruleId":"808","severity":1,"message":"967","line":5,"column":3,"nodeType":"810","messageId":"811","endLine":5,"endColumn":15},{"ruleId":"808","severity":1,"message":"968","line":6,"column":3,"nodeType":"810","messageId":"811","endLine":6,"endColumn":15},{"ruleId":"808","severity":1,"message":"969","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":16},{"ruleId":"808","severity":1,"message":"970","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":16},{"ruleId":"808","severity":1,"message":"971","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":20},{"ruleId":"808","severity":1,"message":"825","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":9},{"ruleId":"808","severity":1,"message":"828","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":8},{"ruleId":"808","severity":1,"message":"906","line":14,"column":3,"nodeType":"810","messageId":"811","endLine":14,"endColumn":7},{"ruleId":"808","severity":1,"message":"833","line":18,"column":3,"nodeType":"810","messageId":"811","endLine":18,"endColumn":9},{"ruleId":"808","severity":1,"message":"972","line":28,"column":3,"nodeType":"810","messageId":"811","endLine":28,"endColumn":17},{"ruleId":"808","severity":1,"message":"973","line":36,"column":11,"nodeType":"810","messageId":"811","endLine":36,"endColumn":19},{"ruleId":"863","severity":1,"message":"974","line":51,"column":6,"nodeType":"865","endLine":51,"endColumn":16,"suggestions":"975"},{"ruleId":"808","severity":1,"message":"827","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":13},{"ruleId":"808","severity":1,"message":"976","line":16,"column":10,"nodeType":"810","messageId":"811","endLine":16,"endColumn":22},{"ruleId":"808","severity":1,"message":"977","line":22,"column":3,"nodeType":"810","messageId":"811","endLine":22,"endColumn":18},{"ruleId":"808","severity":1,"message":"978","line":80,"column":9,"nodeType":"810","messageId":"811","endLine":80,"endColumn":19},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"979","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":25},{"ruleId":"808","severity":1,"message":"929","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":21},{"ruleId":"808","severity":1,"message":"964","line":14,"column":9,"nodeType":"810","messageId":"811","endLine":14,"endColumn":27},{"ruleId":"808","severity":1,"message":"825","line":19,"column":3,"nodeType":"810","messageId":"811","endLine":19,"endColumn":9},{"ruleId":"808","severity":1,"message":"829","line":21,"column":3,"nodeType":"810","messageId":"811","endLine":21,"endColumn":7},{"ruleId":"808","severity":1,"message":"830","line":22,"column":3,"nodeType":"810","messageId":"811","endLine":22,"endColumn":13},{"ruleId":"808","severity":1,"message":"832","line":23,"column":3,"nodeType":"810","messageId":"811","endLine":23,"endColumn":11},{"ruleId":"808","severity":1,"message":"831","line":24,"column":3,"nodeType":"810","messageId":"811","endLine":24,"endColumn":11},{"ruleId":"808","severity":1,"message":"871","line":26,"column":10,"nodeType":"810","messageId":"811","endLine":26,"endColumn":25},{"ruleId":"808","severity":1,"message":"886","line":40,"column":39,"nodeType":"810","messageId":"811","endLine":40,"endColumn":48},{"ruleId":"808","severity":1,"message":"980","line":51,"column":9,"nodeType":"810","messageId":"811","endLine":51,"endColumn":13},{"ruleId":"808","severity":1,"message":"981","line":22,"column":10,"nodeType":"810","messageId":"811","endLine":22,"endColumn":27},{"ruleId":"808","severity":1,"message":"857","line":27,"column":9,"nodeType":"810","messageId":"811","endLine":27,"endColumn":18},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"929","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":21},{"ruleId":"808","severity":1,"message":"982","line":3,"column":8,"nodeType":"810","messageId":"811","endLine":3,"endColumn":11},{"ruleId":"808","severity":1,"message":"886","line":23,"column":39,"nodeType":"810","messageId":"811","endLine":23,"endColumn":48},{"ruleId":"863","severity":1,"message":"983","line":39,"column":6,"nodeType":"865","endLine":39,"endColumn":15,"suggestions":"984"},{"ruleId":"863","severity":1,"message":"985","line":63,"column":6,"nodeType":"865","endLine":63,"endColumn":21,"suggestions":"986"},{"ruleId":"863","severity":1,"message":"987","line":75,"column":6,"nodeType":"865","endLine":75,"endColumn":8,"suggestions":"988"},{"ruleId":"808","severity":1,"message":"814","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":26},{"ruleId":"808","severity":1,"message":"861","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":17},{"ruleId":"808","severity":1,"message":"989","line":16,"column":5,"nodeType":"810","messageId":"811","endLine":16,"endColumn":11},{"ruleId":"892","severity":1,"message":"893","line":64,"column":35,"nodeType":"894","messageId":"895","endLine":64,"endColumn":37},{"ruleId":"808","severity":1,"message":"964","line":11,"column":9,"nodeType":"810","messageId":"811","endLine":11,"endColumn":27},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"929","line":3,"column":8,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"931","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":27},{"ruleId":"808","severity":1,"message":"990","line":5,"column":10,"nodeType":"810","messageId":"811","endLine":5,"endColumn":18},{"ruleId":"863","severity":1,"message":"934","line":60,"column":6,"nodeType":"865","endLine":60,"endColumn":16,"suggestions":"991"},{"ruleId":"863","severity":1,"message":"992","line":67,"column":6,"nodeType":"865","endLine":67,"endColumn":17,"suggestions":"993"},{"ruleId":"863","severity":1,"message":"957","line":92,"column":6,"nodeType":"865","endLine":92,"endColumn":27,"suggestions":"994"},{"ruleId":"863","severity":1,"message":"995","line":367,"column":6,"nodeType":"865","endLine":367,"endColumn":21,"suggestions":"996"},{"ruleId":"863","severity":1,"message":"942","line":371,"column":13,"nodeType":"943","endLine":417,"endColumn":4},{"ruleId":"863","severity":1,"message":"997","line":417,"column":6,"nodeType":"865","endLine":417,"endColumn":15,"suggestions":"998"},{"ruleId":"808","severity":1,"message":"964","line":424,"column":9,"nodeType":"810","messageId":"811","endLine":424,"endColumn":27},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"999","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":20},{"ruleId":"863","severity":1,"message":"934","line":58,"column":6,"nodeType":"865","endLine":58,"endColumn":16,"suggestions":"1000"},{"ruleId":"863","severity":1,"message":"992","line":65,"column":6,"nodeType":"865","endLine":65,"endColumn":17,"suggestions":"1001"},{"ruleId":"863","severity":1,"message":"957","line":90,"column":6,"nodeType":"865","endLine":90,"endColumn":16,"suggestions":"1002"},{"ruleId":"863","severity":1,"message":"1003","line":291,"column":6,"nodeType":"865","endLine":291,"endColumn":16,"suggestions":"1004"},{"ruleId":"863","severity":1,"message":"942","line":295,"column":13,"nodeType":"943","endLine":343,"endColumn":4},{"ruleId":"863","severity":1,"message":"1005","line":343,"column":6,"nodeType":"865","endLine":343,"endColumn":15,"suggestions":"1006"},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"1007","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":20},{"ruleId":"808","severity":1,"message":"929","line":4,"column":8,"nodeType":"810","messageId":"811","endLine":4,"endColumn":21},{"ruleId":"808","severity":1,"message":"964","line":14,"column":9,"nodeType":"810","messageId":"811","endLine":14,"endColumn":27},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"1008","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":22},{"ruleId":"808","severity":1,"message":"929","line":11,"column":8,"nodeType":"810","messageId":"811","endLine":11,"endColumn":21},{"ruleId":"808","severity":1,"message":"931","line":12,"column":8,"nodeType":"810","messageId":"811","endLine":12,"endColumn":27},{"ruleId":"863","severity":1,"message":"934","line":31,"column":6,"nodeType":"865","endLine":31,"endColumn":18,"suggestions":"1009"},{"ruleId":"863","severity":1,"message":"934","line":71,"column":6,"nodeType":"865","endLine":71,"endColumn":20,"suggestions":"1010"},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"1011","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":18},{"ruleId":"808","severity":1,"message":"929","line":5,"column":8,"nodeType":"810","messageId":"811","endLine":5,"endColumn":21},{"ruleId":"808","severity":1,"message":"812","line":4,"column":23,"nodeType":"810","messageId":"811","endLine":4,"endColumn":34},{"ruleId":"808","severity":1,"message":"1012","line":5,"column":10,"nodeType":"810","messageId":"811","endLine":5,"endColumn":20},{"ruleId":"808","severity":1,"message":"908","line":8,"column":11,"nodeType":"810","messageId":"811","endLine":8,"endColumn":21},{"ruleId":"808","severity":1,"message":"815","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":13},{"ruleId":"808","severity":1,"message":"1013","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":23},{"ruleId":"808","severity":1,"message":"903","line":1,"column":36,"nodeType":"810","messageId":"811","endLine":1,"endColumn":44},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"826","line":6,"column":15,"nodeType":"810","messageId":"811","endLine":6,"endColumn":19},{"ruleId":"808","severity":1,"message":"1014","line":7,"column":10,"nodeType":"810","messageId":"811","endLine":7,"endColumn":18},{"ruleId":"808","severity":1,"message":"1015","line":7,"column":20,"nodeType":"810","messageId":"811","endLine":7,"endColumn":29},{"ruleId":"808","severity":1,"message":"1016","line":20,"column":9,"nodeType":"810","messageId":"811","endLine":20,"endColumn":20},{"ruleId":"863","severity":1,"message":"1017","line":32,"column":6,"nodeType":"865","endLine":32,"endColumn":14,"suggestions":"1018"},{"ruleId":"1019","severity":1,"message":"1020","line":56,"column":9,"nodeType":"1021","messageId":"1022","endLine":56,"endColumn":28},{"ruleId":"808","severity":1,"message":"919","line":3,"column":22,"nodeType":"810","messageId":"811","endLine":3,"endColumn":29},{"ruleId":"863","severity":1,"message":"1023","line":91,"column":6,"nodeType":"865","endLine":91,"endColumn":60,"suggestions":"1024"},{"ruleId":"863","severity":1,"message":"1025","line":145,"column":5,"nodeType":"865","endLine":145,"endColumn":70,"suggestions":"1026"},{"ruleId":"808","severity":1,"message":"913","line":4,"column":3,"nodeType":"810","messageId":"811","endLine":4,"endColumn":15},{"ruleId":"808","severity":1,"message":"1027","line":15,"column":3,"nodeType":"810","messageId":"811","endLine":15,"endColumn":19},{"ruleId":"808","severity":1,"message":"906","line":19,"column":3,"nodeType":"810","messageId":"811","endLine":19,"endColumn":7},{"ruleId":"808","severity":1,"message":"1028","line":22,"column":10,"nodeType":"810","messageId":"811","endLine":22,"endColumn":16},{"ruleId":"808","severity":1,"message":"1029","line":23,"column":10,"nodeType":"810","messageId":"811","endLine":23,"endColumn":23},{"ruleId":"808","severity":1,"message":"1030","line":24,"column":10,"nodeType":"810","messageId":"811","endLine":24,"endColumn":25},{"ruleId":"808","severity":1,"message":"886","line":33,"column":11,"nodeType":"810","messageId":"811","endLine":33,"endColumn":20},{"ruleId":"808","severity":1,"message":"1031","line":33,"column":22,"nodeType":"810","messageId":"811","endLine":33,"endColumn":30},{"ruleId":"808","severity":1,"message":"1032","line":72,"column":9,"nodeType":"810","messageId":"811","endLine":72,"endColumn":19},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"815","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":13},{"ruleId":"808","severity":1,"message":"845","line":3,"column":15,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"947","line":5,"column":8,"nodeType":"810","messageId":"811","endLine":5,"endColumn":24},{"ruleId":"808","severity":1,"message":"1033","line":6,"column":8,"nodeType":"810","messageId":"811","endLine":6,"endColumn":29},{"ruleId":"808","severity":1,"message":"1034","line":7,"column":10,"nodeType":"810","messageId":"811","endLine":7,"endColumn":14},{"ruleId":"808","severity":1,"message":"1035","line":7,"column":16,"nodeType":"810","messageId":"811","endLine":7,"endColumn":25},{"ruleId":"808","severity":1,"message":"1036","line":7,"column":27,"nodeType":"810","messageId":"811","endLine":7,"endColumn":32},{"ruleId":"808","severity":1,"message":"1037","line":7,"column":34,"nodeType":"810","messageId":"811","endLine":7,"endColumn":43},{"ruleId":"808","severity":1,"message":"1038","line":18,"column":9,"nodeType":"810","messageId":"811","endLine":18,"endColumn":18},{"ruleId":"808","severity":1,"message":"815","line":3,"column":10,"nodeType":"810","messageId":"811","endLine":3,"endColumn":13},{"ruleId":"808","severity":1,"message":"847","line":3,"column":15,"nodeType":"810","messageId":"811","endLine":3,"endColumn":22},{"ruleId":"808","severity":1,"message":"827","line":3,"column":24,"nodeType":"810","messageId":"811","endLine":3,"endColumn":34},{"ruleId":"808","severity":1,"message":"834","line":3,"column":36,"nodeType":"810","messageId":"811","endLine":3,"endColumn":40},{"ruleId":"808","severity":1,"message":"1039","line":16,"column":11,"nodeType":"810","messageId":"811","endLine":16,"endColumn":22},{"ruleId":"808","severity":1,"message":"1040","line":17,"column":11,"nodeType":"810","messageId":"811","endLine":17,"endColumn":16},{"ruleId":"808","severity":1,"message":"1041","line":25,"column":5,"nodeType":"810","messageId":"811","endLine":25,"endColumn":12},{"ruleId":"808","severity":1,"message":"1042","line":5,"column":9,"nodeType":"810","messageId":"811","endLine":5,"endColumn":11},{"ruleId":"892","severity":1,"message":"893","line":12,"column":18,"nodeType":"894","messageId":"895","endLine":12,"endColumn":20},{"ruleId":"892","severity":1,"message":"893","line":18,"column":25,"nodeType":"894","messageId":"895","endLine":18,"endColumn":27},{"ruleId":"892","severity":1,"message":"893","line":44,"column":18,"nodeType":"894","messageId":"895","endLine":44,"endColumn":20},{"ruleId":"892","severity":1,"message":"893","line":45,"column":18,"nodeType":"894","messageId":"895","endLine":45,"endColumn":20},{"ruleId":"892","severity":1,"message":"893","line":46,"column":18,"nodeType":"894","messageId":"895","endLine":46,"endColumn":20},{"ruleId":"808","severity":1,"message":"1043","line":1,"column":8,"nodeType":"810","messageId":"811","endLine":1,"endColumn":20},{"ruleId":"808","severity":1,"message":"1044","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":26},{"ruleId":"808","severity":1,"message":"1045","line":11,"column":7,"nodeType":"810","messageId":"811","endLine":11,"endColumn":19},{"ruleId":"863","severity":1,"message":"1046","line":72,"column":6,"nodeType":"865","endLine":72,"endColumn":8,"suggestions":"1047"},{"ruleId":"863","severity":1,"message":"1048","line":86,"column":6,"nodeType":"865","endLine":86,"endColumn":24,"suggestions":"1049"},{"ruleId":"808","severity":1,"message":"1050","line":6,"column":8,"nodeType":"810","messageId":"811","endLine":6,"endColumn":17},{"ruleId":"808","severity":1,"message":"883","line":8,"column":8,"nodeType":"810","messageId":"811","endLine":8,"endColumn":13},{"ruleId":"808","severity":1,"message":"814","line":1,"column":17,"nodeType":"810","messageId":"811","endLine":1,"endColumn":26},{"ruleId":"808","severity":1,"message":"903","line":1,"column":28,"nodeType":"810","messageId":"811","endLine":1,"endColumn":36},{"ruleId":"808","severity":1,"message":"962","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":27},{"ruleId":"808","severity":1,"message":"929","line":3,"column":8,"nodeType":"810","messageId":"811","endLine":3,"endColumn":21},{"ruleId":"808","severity":1,"message":"830","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":13},{"ruleId":"808","severity":1,"message":"831","line":9,"column":3,"nodeType":"810","messageId":"811","endLine":9,"endColumn":11},{"ruleId":"808","severity":1,"message":"825","line":10,"column":3,"nodeType":"810","messageId":"811","endLine":10,"endColumn":9},{"ruleId":"808","severity":1,"message":"920","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":14},{"ruleId":"808","severity":1,"message":"921","line":15,"column":10,"nodeType":"810","messageId":"811","endLine":15,"endColumn":26},{"ruleId":"808","severity":1,"message":"1051","line":16,"column":8,"nodeType":"810","messageId":"811","endLine":16,"endColumn":14},{"ruleId":"808","severity":1,"message":"1052","line":20,"column":9,"nodeType":"810","messageId":"811","endLine":20,"endColumn":17},{"ruleId":"808","severity":1,"message":"861","line":2,"column":8,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"999","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":20},{"ruleId":"863","severity":1,"message":"934","line":58,"column":6,"nodeType":"865","endLine":58,"endColumn":16,"suggestions":"1053"},{"ruleId":"863","severity":1,"message":"992","line":65,"column":6,"nodeType":"865","endLine":65,"endColumn":17,"suggestions":"1054"},{"ruleId":"863","severity":1,"message":"957","line":90,"column":6,"nodeType":"865","endLine":90,"endColumn":16,"suggestions":"1055"},{"ruleId":"863","severity":1,"message":"1003","line":314,"column":6,"nodeType":"865","endLine":314,"endColumn":16,"suggestions":"1056"},{"ruleId":"863","severity":1,"message":"942","line":318,"column":13,"nodeType":"943","endLine":366,"endColumn":4},{"ruleId":"863","severity":1,"message":"1005","line":366,"column":6,"nodeType":"865","endLine":366,"endColumn":15,"suggestions":"1057"},{"ruleId":"808","severity":1,"message":"825","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":16},{"ruleId":"808","severity":1,"message":"1058","line":2,"column":10,"nodeType":"810","messageId":"811","endLine":2,"endColumn":17},{"ruleId":"808","severity":1,"message":"1059","line":2,"column":19,"nodeType":"810","messageId":"811","endLine":2,"endColumn":32},{"ruleId":"808","severity":1,"message":"825","line":7,"column":3,"nodeType":"810","messageId":"811","endLine":7,"endColumn":9},{"ruleId":"808","severity":1,"message":"1060","line":8,"column":3,"nodeType":"810","messageId":"811","endLine":8,"endColumn":14},{"ruleId":"808","severity":1,"message":"1061","line":11,"column":3,"nodeType":"810","messageId":"811","endLine":11,"endColumn":9},{"ruleId":"808","severity":1,"message":"919","line":12,"column":3,"nodeType":"810","messageId":"811","endLine":12,"endColumn":10},{"ruleId":"808","severity":1,"message":"1012","line":20,"column":10,"nodeType":"810","messageId":"811","endLine":20,"endColumn":20},{"ruleId":"808","severity":1,"message":"1062","line":29,"column":10,"nodeType":"810","messageId":"811","endLine":29,"endColumn":18},{"ruleId":"1063","severity":1,"message":"1064","line":71,"column":9,"nodeType":"1065","messageId":"895","endLine":71,"endColumn":24},{"ruleId":"1066","severity":1,"message":"1067","line":4,"column":5,"nodeType":"1068","messageId":"1069","endLine":4,"endColumn":18,"fix":"1070"},{"ruleId":"1071","severity":1,"message":"1072","line":304,"column":21,"nodeType":"810","messageId":"1073","endLine":304,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1074","line":305,"column":21,"nodeType":"810","messageId":"1073","endLine":305,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":307,"column":25,"nodeType":"810","messageId":"1073","endLine":307,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1076","line":319,"column":21,"nodeType":"810","messageId":"1073","endLine":319,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1077","line":321,"column":21,"nodeType":"810","messageId":"1073","endLine":321,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1072","line":322,"column":21,"nodeType":"810","messageId":"1073","endLine":322,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1074","line":323,"column":21,"nodeType":"810","messageId":"1073","endLine":323,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":325,"column":25,"nodeType":"810","messageId":"1073","endLine":325,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1078","line":338,"column":21,"nodeType":"810","messageId":"1073","endLine":338,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1077","line":339,"column":21,"nodeType":"810","messageId":"1073","endLine":339,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1072","line":340,"column":21,"nodeType":"810","messageId":"1073","endLine":340,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1074","line":341,"column":21,"nodeType":"810","messageId":"1073","endLine":341,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":343,"column":25,"nodeType":"810","messageId":"1073","endLine":343,"endColumn":30},{"ruleId":"1079","severity":1,"message":"1080","line":439,"column":68,"nodeType":"1081","messageId":"1082","endLine":439,"endColumn":69,"suggestions":"1083"},"no-native-reassign",["1084"],"no-negated-in-lhs",["1085"],"no-unused-vars","'OsdFabricWrapper' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'updateOverlay' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'useSelector' is defined but never used.","'Toolbar' is defined but never used.","'ViewerContainer' is defined but never used.","'ExtendibleDrawer' is defined but never used.","'LayoutAppFooter' is defined but never used.","'ViewerToolbar' is defined but never used.","'useKeyboardEvents' is defined but never used.","'fabric' is defined but never used.","'ShareAnnotation' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'IconButton' is defined but never used.","'Input' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'Spacer' is defined but never used.","'Text' is defined but never used.","'ZoomLevels' is defined but never used.","'HamburgerIcon' is defined but never used.","'RiShareForwardLine' is defined but never used.","'GoRepoForked' is defined but never used.","'RRLink' is defined but never used.","'ImageGalleryModal' is defined but never used.","'AltButton' is defined but never used.","'history' is assigned a value but never used.","'_channelName' is assigned a value but never used.","'inputChannelName' is assigned a value but never used.","'HStack' is defined but never used.","'Center' is defined but never used.","'Divider' is defined but never used.","'AlertDialog' is defined but never used.","'AlertDialogBody' is defined but never used.","'AlertDialogHeader' is defined but never used.","'AlertDialogOverlay' is defined but never used.","'AlertDialogFooter' is defined but never used.","'AlertDialogContent' is defined but never used.","'AlertDialogCloseButton' is defined but never used.","'ColorModeSwitcher' is defined but never used.","'isMobile' is defined but never used.","'cancelRef' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'handleDisconnect' is assigned a value but never used.","'PropTypes' is defined but never used.","'Palette' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deselectAll' and 'updateCursor'. Either include them or remove the dependency array.","ArrayExpression",["1086"],"'Avatar' is defined but never used.","'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'VStack' is defined but never used.","'ChevronDownIcon' is defined but never used.","'isBrowser' is defined but never used.","'ClearCanvas' is defined but never used.","'Download' is defined but never used.","'MyAnnotationsSave' is defined but never used.","'Login' is defined but never used.","'SlideSearch' is defined but never used.","'RemoveObject' is defined but never used.","'Draw' is defined but never used.","'Square' is defined but never used.","'TypeText' is defined but never used.","'Line' is defined but never used.","'Arrow' is defined but never used.","'Circle' is defined but never used.","'roomName' is assigned a value but never used.","'guestList' is assigned a value but never used.","'activeDrawerTool' is assigned a value but never used.","'axios' is defined but never used.","'setTileSource' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fabricOverlay', 'location.state', and 'userCanvases'. Either include them or remove the dependency array.",["1087"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SimpleGrid' is defined but never used.","'React' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'loadAndUse' is assigned a value but never used.","'useState' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.","'Flex' is defined but never used.","'BsFillPeopleFill' is defined but never used.","'activeTool' is assigned a value but never used.","'isMultiView' is assigned a value but never used.","'SlideToggleButton' is assigned a value but never used.","'Image' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'Tooltip' is defined but never used.","'MenuDivider' is defined but never used.","'TriangleDownIcon' is defined but never used.","'Slides' is defined but never used.","'ModalButton' is defined but never used.","'activeStyles' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'activeWork' is assigned a value but never used.","'iconButtonSize' is assigned a value but never used.","'handleImageClick' is assigned a value but never used.","'ToolbarButton' is defined but never used.","'DrawWidthPicker' is defined but never used.","'ToolbarOptionsPanel' is defined but never used.","'widths' is defined but never used.","'hexToRGBA' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setMyState'. Either include it or remove the dependency array.",["1088"],"React Hook useEffect has a missing dependency: 'viewer'. Either include it or remove the dependency array.",["1089"],"React Hook useEffect has missing dependencies: 'color.hex', 'fabricOverlay', 'myState.width.pixelWidth', 'screenSize', 'viewer', and 'zoomValue'. Either include them or remove the dependency array.",["1090"],"React Hook useEffect has missing dependencies: 'fabricOverlay', 'isActive', and 'zoomValue'. Either include them or remove the dependency array.",["1091"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'activityFeed', 'alias', 'dispatch', 'fabricOverlay', 'path', 'roomName', 'socket', 'username', and 'viewerId'. Either include them or remove the dependency array.",["1092"],"'domtoimage' is defined but never used.","'ToolbarBorderBox' is defined but never used.","'TypeTextFontPicker' is defined but never used.","'fonts' is defined but never used.","'zoomValue' is assigned a value but never used.","'activityFeed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fabricOverlay' and 'setMyState'. Either include them or remove the dependency array.",["1093"],"React Hook useEffect has missing dependencies: 'fabricOverlay' and 'isActive'. Either include them or remove the dependency array.",["1094"],"'canvas' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'deselectAll', 'fabricOverlay', and 'viewer'. Either include them or remove the dependency array.",["1095"],"React Hook useEffect has missing dependencies: 'deselectAll' and 'setMyState'. Either include them or remove the dependency array.",["1096"],"'handleFontChange' is assigned a value but never used.","'IoIosColorPalette' is defined but never used.","'useDisclosure' is defined but never used.","'handleToolbarClick' is assigned a value but never used.","'Drawer' is defined but never used.","'DrawerBody' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerHeader' is defined but never used.","'DrawerOverlay' is defined but never used.","'DrawerContent' is defined but never used.","'DrawerCloseButton' is defined but never used.","'updateIsVisual' is defined but never used.","'isVisual' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'analyse'. Either include it or remove the dependency array.",["1097"],"'DownloadIcon' is defined but never used.","'PDFDownloadLink' is defined but never used.","'MyDocument' is assigned a value but never used.","'FaClipboardList' is defined but never used.","'user' is assigned a value but never used.","'IoSettingsOutline' is defined but never used.","'rug' is defined but never used.","React Hook useEffect has missing dependencies: 'alias', 'roomName', and 'socket'. Either include them or remove the dependency array.",["1098"],"React Hook useEffect has missing dependencies: 'dispatch', 'socket', and 'userCanvases'. Either include them or remove the dependency array.",["1099"],"React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["1100"],"'Select' is defined but never used.","'FaShapes' is defined but never used.",["1101"],"React Hook useEffect has missing dependencies: 'color' and 'setMyState'. Either include them or remove the dependency array.",["1102"],["1103"],"React Hook useEffect has missing dependencies: 'screenSize', 'setMyState', and 'viewer.viewport'. Either include them or remove the dependency array.",["1104"],"React Hook useEffect has missing dependencies: 'activityFeed', 'alias', 'dispatch', 'fabricOverlay', 'roomName', 'shape', 'socket', and 'username'. Either include them or remove the dependency array.",["1105"],"'updateActiveShape' is defined but never used.",["1106"],["1107"],["1108"],"React Hook useEffect has missing dependencies: 'fabricOverlay', 'screenSize', 'setMyState', and 'zoomValue'. Either include them or remove the dependency array.",["1109"],"React Hook useEffect has missing dependencies: 'activityFeed', 'alias', 'dispatch', 'fabricOverlay', 'roomName', 'shape', 'socket', 'username', and 'viewerId'. Either include them or remove the dependency array.",["1110"],"'SearchIcon' is defined but never used.","'FaPaintBrush' is defined but never used.",["1111"],["1112"],"'ChatIcon' is defined but never used.","'updateTool' is defined but never used.","'useRef' is defined but never used.","'FiZoomIn' is defined but never used.","'FiZoomOut' is defined but never used.","'handleLabel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'viewerId'. Either include them or remove the dependency array.",["1113"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useMemo has missing dependencies: 'handlerHeight_radius' and 'vertical'. Either include them or remove the dependency array.",["1114"],"React Hook useCallback has missing dependencies: 'sliderChangeHandler', 'startValue', 'stepWidth', and 'vertical'. Either include them or remove the dependency array.",["1115"],"'InputLeftElement' is defined but never used.","'FiEdit' is defined but never used.","'BsChevronDown' is defined but never used.","'RiEqualizerLine' is defined but never used.","'username' is assigned a value but never used.","'UserAvatar' is assigned a value but never used.","'ToolbarBorderBoxInner' is defined but never used.","'Fade' is defined but never used.","'ScaleFade' is defined but never used.","'Slide' is defined but never used.","'SlideFade' is defined but never used.","'isVisible' is assigned a value but never used.","'activeShape' is assigned a value but never used.","'color' is assigned a value but never used.","'btnSize' is assigned a value but never used.","'bg' is assigned a value but never used.","'iceCreamSoda' is defined but never used.","'useOpenSeadragon' is defined but never used.","'minZoomLevel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'tile', 'viewer', and 'viewerId'. Either include them or remove the dependency array. If 'setViewer' needs the current value of 'tile', you can also switch to useReducer instead of useState and read 'tile' in the reducer.",["1116"],"React Hook useEffect has a missing dependency: 'viewerId'. Either include it or remove the dependency array.",["1117"],"'ShareLink' is defined but never used.","'button' is defined but never used.","'isActive' is assigned a value but never used.",["1118"],["1119"],["1120"],["1121"],["1122"],"'useZoom' is defined but never used.","'OpenSeadragon' is defined but never used.","'ButtonGroup' is defined but never used.","'Portal' is defined but never used.","'scalebar' is assigned a value but never used.","no-dupe-keys","Duplicate key 'stayInsideImage'.","ObjectExpression","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"1123","text":"1124"},"no-redeclare","'x' is already defined.","redeclared","'y' is already defined.","'pixel' is already defined.","'barWidth' is already defined.","'container' is already defined.","'barHeight' is already defined.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["1125","1126"],"no-global-assign","no-unsafe-negation",{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1131","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1131","fix":"1166"},{"desc":"1158","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1174","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1178","fix":"1179"},{"desc":"1180","fix":"1181"},{"desc":"1182","fix":"1183"},{"desc":"1184","fix":"1185"},{"desc":"1178","fix":"1186"},{"desc":"1131","fix":"1187"},{"desc":"1158","fix":"1188"},{"desc":"1168","fix":"1189"},{"desc":"1170","fix":"1190"},{"desc":"1172","fix":"1191"},[63,76],"",{"messageId":"1192","fix":"1193","desc":"1194"},{"messageId":"1195","fix":"1196","desc":"1197"},"Update the dependencies array to be: [activeTool, deselectAll, updateCursor]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [fabricOverlay, location.state, newCanvasTitle, userCanvases]",{"range":"1200","text":"1201"},"Update the dependencies array to be: [isActive, setMyState]",{"range":"1202","text":"1203"},"Update the dependencies array to be: [fabricOverlay, viewer]",{"range":"1204","text":"1205"},"Update the dependencies array to be: [color.hex, fabricOverlay, isActive, myState.width.pixelWidth, screenSize, viewer, zoomValue]",{"range":"1206","text":"1207"},"Update the dependencies array to be: [color, fabricOverlay, isActive, myState.width, zoomValue]",{"range":"1208","text":"1209"},"Update the dependencies array to be: [activityFeed, alias, dispatch, fabricOverlay, path, roomName, socket, textbox, username, viewerId]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [color, fabricOverlay, isActive, setMyState]",{"range":"1212","text":"1213"},"Update the dependencies array to be: [fabricOverlay, isActive, myState.isEditing]",{"range":"1214","text":"1215"},"Update the dependencies array to be: [deselectAll, fabricOverlay, myState.activeFont, viewer]",{"range":"1216","text":"1217"},"Update the dependencies array to be: [deselectAll, fabricOverlay, setMyState]",{"range":"1218","text":"1219"},"Update the dependencies array to be: [analyse, isActive]",{"range":"1220","text":"1221"},"Update the dependencies array to be: [alias, roomName, sharing, socket]",{"range":"1222","text":"1223"},"Update the dependencies array to be: [dispatch, fabricOverlay, socket, userCanvases]",{"range":"1224","text":"1225"},"Update the dependencies array to be: [dispatch, socket]",{"range":"1226","text":"1227"},{"range":"1228","text":"1203"},"Update the dependencies array to be: [color, color.hex, setMyState]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [deselectAll, fabricOverlay, myState.activeShape, viewer]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [fabricOverlay, screenSize, setMyState, viewer.viewport]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [activityFeed, alias, dispatch, fabricOverlay, roomName, shape, socket, textbox, username]",{"range":"1235","text":"1236"},{"range":"1237","text":"1203"},{"range":"1238","text":"1230"},"Update the dependencies array to be: [deselectAll, fabricOverlay, isActive, viewer]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [fabricOverlay, isActive, screenSize, setMyState, zoomValue]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [activityFeed, alias, dispatch, fabricOverlay, roomName, shape, socket, textbox, username, viewerId]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [activeTool, setMyState]",{"range":"1245","text":"1246"},"Update the dependencies array to be: [setMyState, viewerWindow]",{"range":"1247","text":"1248"},"Update the dependencies array to be: [dispatch, viewer, viewerId]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [trackLength, markers, vertical, handlerWidth_radius, handlerHeight_radius, stepWidth]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [isActive, startValue, stepWidth, vertical, pointerStart_positionX, handler_position, sliderChangeHandler, trackLength]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [tile, viewer, viewerId]",{"range":"1255","text":"1256"},{"range":"1257","text":"1250"},{"range":"1258","text":"1203"},{"range":"1259","text":"1230"},{"range":"1260","text":"1240"},{"range":"1261","text":"1242"},{"range":"1262","text":"1244"},"removeEscape",{"range":"1263","text":"1124"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1264","text":"1265"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[792,804],"[activeTool, deselectAll, updateCursor]",[2217,2233],"[fabricOverlay, location.state, newCanvasTitle, userCanvases]",[2677,2687],"[isActive, setMyState]",[3214,3229],"[fabricOverlay, viewer]",[6298,6308],"[color.hex, fabricOverlay, isActive, myState.width.pixelWidth, screenSize, viewer, zoomValue]",[6722,6744],"[color, fabricOverlay, isActive, myState.width, zoomValue]",[7965,7974],"[activityFeed, alias, dispatch, fabricOverlay, path, roomName, socket, textbox, username, viewerId]",[1626,1643],"[color, fabricOverlay, isActive, setMyState]",[1979,1998],"[fabricOverlay, isActive, myState.isEditing]",[2517,2537],"[deselectAll, fabricOverlay, myState.activeFont, viewer]",[4671,4686],"[deselectAll, fabricOverlay, setMyState]",[1360,1370],"[analyse, isActive]",[1474,1483],"[alias, roomName, sharing, socket]",[2210,2225],"[dispatch, fabricOverlay, socket, userCanvases]",[2505,2507],"[dispatch, socket]",[2005,2015],[2133,2144],"[color, color.hex, setMyState]",[2746,2767],"[deselectAll, fabricOverlay, myState.activeShape, viewer]",[10271,10286],"[fabricOverlay, screenSize, setMyState, viewer.viewport]",[11462,11471],"[activityFeed, alias, dispatch, fabricOverlay, roomName, shape, socket, textbox, username]",[1881,1891],[2009,2020],[2617,2627],"[deselectAll, fabricOverlay, isActive, viewer]",[8070,8080],"[fabricOverlay, isActive, screenSize, setMyState, zoomValue]",[9300,9309],"[activityFeed, alias, dispatch, fabricOverlay, roomName, shape, socket, textbox, username, viewerId]",[1013,1025],"[activeTool, setMyState]",[2258,2272],"[setMyState, viewerWindow]",[1148,1156],"[dispatch, viewer, viewerId]",[2462,2516],"[trackLength, markers, vertical, handlerWidth_radius, handlerHeight_radius, stepWidth]",[4309,4374],"[isActive, startValue, stepWidth, vertical, pointerStart_positionX, handler_position, sliderChangeHandler, trackLength]",[2062,2064],"[tile, viewer, viewerId]",[2381,2399],[1879,1889],[2007,2018],[2615,2625],[8722,8732],[9952,9961],[19574,19575],[19574,19574],"\\"]